//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PalletCard {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ThardataDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ThardataDataSet : global::System.Data.DataSet {
        
        private CustomersDataTable tableCustomers;
        
        private JobProductsDataTable tableJobProducts;
        
        private MainEstimateDetailsDataTable tableMainEstimateDetails;
        
        private MainJobDetailsDataTable tableMainJobDetails;
        
        private OrderLineDataTable tableOrderLine;
        
        private OriginationMaterialInputDataTable tableOriginationMaterialInput;
        
        private ProductDataTable tableProduct;
        
        private global::System.Data.DataRelation relationFK_OriginationMaterialInput_MainEstimateDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ThardataDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ThardataDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Customers"] != null)) {
                    base.Tables.Add(new CustomersDataTable(ds.Tables["Customers"]));
                }
                if ((ds.Tables["JobProducts"] != null)) {
                    base.Tables.Add(new JobProductsDataTable(ds.Tables["JobProducts"]));
                }
                if ((ds.Tables["MainEstimateDetails"] != null)) {
                    base.Tables.Add(new MainEstimateDetailsDataTable(ds.Tables["MainEstimateDetails"]));
                }
                if ((ds.Tables["MainJobDetails"] != null)) {
                    base.Tables.Add(new MainJobDetailsDataTable(ds.Tables["MainJobDetails"]));
                }
                if ((ds.Tables["OrderLine"] != null)) {
                    base.Tables.Add(new OrderLineDataTable(ds.Tables["OrderLine"]));
                }
                if ((ds.Tables["OriginationMaterialInput"] != null)) {
                    base.Tables.Add(new OriginationMaterialInputDataTable(ds.Tables["OriginationMaterialInput"]));
                }
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomersDataTable Customers {
            get {
                return this.tableCustomers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JobProductsDataTable JobProducts {
            get {
                return this.tableJobProducts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MainEstimateDetailsDataTable MainEstimateDetails {
            get {
                return this.tableMainEstimateDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MainJobDetailsDataTable MainJobDetails {
            get {
                return this.tableMainJobDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrderLineDataTable OrderLine {
            get {
                return this.tableOrderLine;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OriginationMaterialInputDataTable OriginationMaterialInput {
            get {
                return this.tableOriginationMaterialInput;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductDataTable Product {
            get {
                return this.tableProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ThardataDataSet cln = ((ThardataDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Customers"] != null)) {
                    base.Tables.Add(new CustomersDataTable(ds.Tables["Customers"]));
                }
                if ((ds.Tables["JobProducts"] != null)) {
                    base.Tables.Add(new JobProductsDataTable(ds.Tables["JobProducts"]));
                }
                if ((ds.Tables["MainEstimateDetails"] != null)) {
                    base.Tables.Add(new MainEstimateDetailsDataTable(ds.Tables["MainEstimateDetails"]));
                }
                if ((ds.Tables["MainJobDetails"] != null)) {
                    base.Tables.Add(new MainJobDetailsDataTable(ds.Tables["MainJobDetails"]));
                }
                if ((ds.Tables["OrderLine"] != null)) {
                    base.Tables.Add(new OrderLineDataTable(ds.Tables["OrderLine"]));
                }
                if ((ds.Tables["OriginationMaterialInput"] != null)) {
                    base.Tables.Add(new OriginationMaterialInputDataTable(ds.Tables["OriginationMaterialInput"]));
                }
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCustomers = ((CustomersDataTable)(base.Tables["Customers"]));
            if ((initTable == true)) {
                if ((this.tableCustomers != null)) {
                    this.tableCustomers.InitVars();
                }
            }
            this.tableJobProducts = ((JobProductsDataTable)(base.Tables["JobProducts"]));
            if ((initTable == true)) {
                if ((this.tableJobProducts != null)) {
                    this.tableJobProducts.InitVars();
                }
            }
            this.tableMainEstimateDetails = ((MainEstimateDetailsDataTable)(base.Tables["MainEstimateDetails"]));
            if ((initTable == true)) {
                if ((this.tableMainEstimateDetails != null)) {
                    this.tableMainEstimateDetails.InitVars();
                }
            }
            this.tableMainJobDetails = ((MainJobDetailsDataTable)(base.Tables["MainJobDetails"]));
            if ((initTable == true)) {
                if ((this.tableMainJobDetails != null)) {
                    this.tableMainJobDetails.InitVars();
                }
            }
            this.tableOrderLine = ((OrderLineDataTable)(base.Tables["OrderLine"]));
            if ((initTable == true)) {
                if ((this.tableOrderLine != null)) {
                    this.tableOrderLine.InitVars();
                }
            }
            this.tableOriginationMaterialInput = ((OriginationMaterialInputDataTable)(base.Tables["OriginationMaterialInput"]));
            if ((initTable == true)) {
                if ((this.tableOriginationMaterialInput != null)) {
                    this.tableOriginationMaterialInput.InitVars();
                }
            }
            this.tableProduct = ((ProductDataTable)(base.Tables["Product"]));
            if ((initTable == true)) {
                if ((this.tableProduct != null)) {
                    this.tableProduct.InitVars();
                }
            }
            this.relationFK_OriginationMaterialInput_MainEstimateDetails = this.Relations["FK_OriginationMaterialInput_MainEstimateDetails"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ThardataDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ThardataDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomers = new CustomersDataTable();
            base.Tables.Add(this.tableCustomers);
            this.tableJobProducts = new JobProductsDataTable();
            base.Tables.Add(this.tableJobProducts);
            this.tableMainEstimateDetails = new MainEstimateDetailsDataTable();
            base.Tables.Add(this.tableMainEstimateDetails);
            this.tableMainJobDetails = new MainJobDetailsDataTable();
            base.Tables.Add(this.tableMainJobDetails);
            this.tableOrderLine = new OrderLineDataTable();
            base.Tables.Add(this.tableOrderLine);
            this.tableOriginationMaterialInput = new OriginationMaterialInputDataTable();
            base.Tables.Add(this.tableOriginationMaterialInput);
            this.tableProduct = new ProductDataTable();
            base.Tables.Add(this.tableProduct);
            this.relationFK_OriginationMaterialInput_MainEstimateDetails = new global::System.Data.DataRelation("FK_OriginationMaterialInput_MainEstimateDetails", new global::System.Data.DataColumn[] {
                        this.tableMainEstimateDetails.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableOriginationMaterialInput.EstimateIDColumn}, false);
            this.Relations.Add(this.relationFK_OriginationMaterialInput_MainEstimateDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCustomers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeJobProducts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMainEstimateDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMainJobDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOrderLine() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOriginationMaterialInput() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ThardataDataSet ds = new ThardataDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CustomersRowChangeEventHandler(object sender, CustomersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void JobProductsRowChangeEventHandler(object sender, JobProductsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MainEstimateDetailsRowChangeEventHandler(object sender, MainEstimateDetailsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MainJobDetailsRowChangeEventHandler(object sender, MainJobDetailsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OrderLineRowChangeEventHandler(object sender, OrderLineRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OriginationMaterialInputRowChangeEventHandler(object sender, OriginationMaterialInputRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProductRowChangeEventHandler(object sender, ProductRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomersDataTable : global::System.Data.TypedTableBase<CustomersRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnTown;
            
            private global::System.Data.DataColumn columnCounty;
            
            private global::System.Data.DataColumn columnPostcode;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnContact;
            
            private global::System.Data.DataColumn columnTel;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnWebURL;
            
            private global::System.Data.DataColumn columnUplift;
            
            private global::System.Data.DataColumn columnCBand;
            
            private global::System.Data.DataColumn columnDelivery;
            
            private global::System.Data.DataColumn columnParentCode;
            
            private global::System.Data.DataColumn columnRef1;
            
            private global::System.Data.DataColumn columnRef2;
            
            private global::System.Data.DataColumn columnRef3;
            
            private global::System.Data.DataColumn columnExchange;
            
            private global::System.Data.DataColumn columnCommissionPerc;
            
            private global::System.Data.DataColumn columnDontMerge;
            
            private global::System.Data.DataColumn columnOverwriteDetails;
            
            private global::System.Data.DataColumn columnPostingAccount;
            
            private global::System.Data.DataColumn columnIncludeInDistributions;
            
            private global::System.Data.DataColumn columnCountryOfOrigin;
            
            private global::System.Data.DataColumn columnVatCode;
            
            private global::System.Data.DataColumn columnVatRegNo;
            
            private global::System.Data.DataColumn columnSSDNatureOfTransaction;
            
            private global::System.Data.DataColumn columnSSDDeliveryTerms;
            
            private global::System.Data.DataColumn columnSSDModeOfTransport;
            
            private global::System.Data.DataColumn columnUseAltCurrency;
            
            private global::System.Data.DataColumn columnOverideProductVat;
            
            private global::System.Data.DataColumn columnIsDefault;
            
            private global::System.Data.DataColumn columnAllowPartShipment;
            
            private global::System.Data.DataColumn columnGMDisabled;
            
            private global::System.Data.DataColumn columnPaymentType;
            
            private global::System.Data.DataColumn columnPaymentDays;
            
            private global::System.Data.DataColumn columnCRMUpdate;
            
            private global::System.Data.DataColumn columnComponentDiscount;
            
            private global::System.Data.DataColumn columnSellingBandNameID;
            
            private global::System.Data.DataColumn columnCourier;
            
            private global::System.Data.DataColumn columnCourierServiceID;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnPrePressWebEnable;
            
            private global::System.Data.DataColumn columnDefaultPackingLocation;
            
            private global::System.Data.DataColumn columnInactive;
            
            private global::System.Data.DataColumn columnSecurityGroupID;
            
            private global::System.Data.DataColumn columnCustomerStatus;
            
            private global::System.Data.DataColumn columnPrePaidSalesInvoice;
            
            private global::System.Data.DataColumn columnCreateSeriesJobs;
            
            private global::System.Data.DataColumn columnExternalID;
            
            private global::System.Data.DataColumn columnLatitude;
            
            private global::System.Data.DataColumn columnLongitude;
            
            private global::System.Data.DataColumn columnUseShortfall;
            
            private global::System.Data.DataColumn columnSalesTaxCodeID;
            
            private global::System.Data.DataColumn columnSalesTaxItemID;
            
            private global::System.Data.DataColumn columnCarriageSalesTaxCodeID;
            
            private global::System.Data.DataColumn columnDepartment;
            
            private global::System.Data.DataColumn columnAllowedOverProduction;
            
            private global::System.Data.DataColumn columnPriceListCustomerGroupID;
            
            private global::System.Data.DataColumn columnAccountRef;
            
            private global::System.Data.DataColumn columndbTimeStamp;
            
            private global::System.Data.DataColumn columneStatus_id;
            
            private global::System.Data.DataColumn columnCustomers_AccessString;
            
            private global::System.Data.DataColumn columnOnlineLogo;
            
            private global::System.Data.DataColumn columnGMUpdate;
            
            private global::System.Data.DataColumn columnPaymentTermsRef;
            
            private global::System.Data.DataColumn columnCostCentre;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CustomersDataTable() {
                this.TableName = "Customers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CustomersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CustomersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TownColumn {
                get {
                    return this.columnTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountyColumn {
                get {
                    return this.columnCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostcodeColumn {
                get {
                    return this.columnPostcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactColumn {
                get {
                    return this.columnContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelColumn {
                get {
                    return this.columnTel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WebURLColumn {
                get {
                    return this.columnWebURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpliftColumn {
                get {
                    return this.columnUplift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CBandColumn {
                get {
                    return this.columnCBand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryColumn {
                get {
                    return this.columnDelivery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentCodeColumn {
                get {
                    return this.columnParentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref1Column {
                get {
                    return this.columnRef1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref2Column {
                get {
                    return this.columnRef2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref3Column {
                get {
                    return this.columnRef3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeColumn {
                get {
                    return this.columnExchange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommissionPercColumn {
                get {
                    return this.columnCommissionPerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DontMergeColumn {
                get {
                    return this.columnDontMerge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverwriteDetailsColumn {
                get {
                    return this.columnOverwriteDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostingAccountColumn {
                get {
                    return this.columnPostingAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IncludeInDistributionsColumn {
                get {
                    return this.columnIncludeInDistributions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryOfOriginColumn {
                get {
                    return this.columnCountryOfOrigin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VatCodeColumn {
                get {
                    return this.columnVatCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VatRegNoColumn {
                get {
                    return this.columnVatRegNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSDNatureOfTransactionColumn {
                get {
                    return this.columnSSDNatureOfTransaction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSDDeliveryTermsColumn {
                get {
                    return this.columnSSDDeliveryTerms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSDModeOfTransportColumn {
                get {
                    return this.columnSSDModeOfTransport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseAltCurrencyColumn {
                get {
                    return this.columnUseAltCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverideProductVatColumn {
                get {
                    return this.columnOverideProductVat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsDefaultColumn {
                get {
                    return this.columnIsDefault;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowPartShipmentColumn {
                get {
                    return this.columnAllowPartShipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GMDisabledColumn {
                get {
                    return this.columnGMDisabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn {
                get {
                    return this.columnPaymentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentDaysColumn {
                get {
                    return this.columnPaymentDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CRMUpdateColumn {
                get {
                    return this.columnCRMUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComponentDiscountColumn {
                get {
                    return this.columnComponentDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellingBandNameIDColumn {
                get {
                    return this.columnSellingBandNameID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourierColumn {
                get {
                    return this.columnCourier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourierServiceIDColumn {
                get {
                    return this.columnCourierServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrePressWebEnableColumn {
                get {
                    return this.columnPrePressWebEnable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultPackingLocationColumn {
                get {
                    return this.columnDefaultPackingLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InactiveColumn {
                get {
                    return this.columnInactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecurityGroupIDColumn {
                get {
                    return this.columnSecurityGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerStatusColumn {
                get {
                    return this.columnCustomerStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrePaidSalesInvoiceColumn {
                get {
                    return this.columnPrePaidSalesInvoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateSeriesJobsColumn {
                get {
                    return this.columnCreateSeriesJobs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExternalIDColumn {
                get {
                    return this.columnExternalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LatitudeColumn {
                get {
                    return this.columnLatitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LongitudeColumn {
                get {
                    return this.columnLongitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseShortfallColumn {
                get {
                    return this.columnUseShortfall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTaxCodeIDColumn {
                get {
                    return this.columnSalesTaxCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTaxItemIDColumn {
                get {
                    return this.columnSalesTaxItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarriageSalesTaxCodeIDColumn {
                get {
                    return this.columnCarriageSalesTaxCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowedOverProductionColumn {
                get {
                    return this.columnAllowedOverProduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceListCustomerGroupIDColumn {
                get {
                    return this.columnPriceListCustomerGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountRefColumn {
                get {
                    return this.columnAccountRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dbTimeStampColumn {
                get {
                    return this.columndbTimeStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn eStatus_idColumn {
                get {
                    return this.columneStatus_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Customers_AccessStringColumn {
                get {
                    return this.columnCustomers_AccessString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OnlineLogoColumn {
                get {
                    return this.columnOnlineLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GMUpdateColumn {
                get {
                    return this.columnGMUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTermsRefColumn {
                get {
                    return this.columnPaymentTermsRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostCentreColumn {
                get {
                    return this.columnCostCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CustomersRow this[int index] {
                get {
                    return ((CustomersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CustomersRowChangeEventHandler CustomersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CustomersRowChangeEventHandler CustomersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CustomersRowChangeEventHandler CustomersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CustomersRowChangeEventHandler CustomersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCustomersRow(CustomersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CustomersRow AddCustomersRow(
                        string Comment, 
                        string Code, 
                        string Name, 
                        string Address, 
                        string Town, 
                        string County, 
                        string Postcode, 
                        string Country, 
                        string Contact, 
                        string Tel, 
                        string Fax, 
                        string WebURL, 
                        double Uplift, 
                        string CBand, 
                        bool Delivery, 
                        string ParentCode, 
                        string Ref1, 
                        string Ref2, 
                        string Ref3, 
                        short Exchange, 
                        double CommissionPerc, 
                        int DontMerge, 
                        bool OverwriteDetails, 
                        string PostingAccount, 
                        bool IncludeInDistributions, 
                        string CountryOfOrigin, 
                        string VatCode, 
                        string VatRegNo, 
                        byte SSDNatureOfTransaction, 
                        string SSDDeliveryTerms, 
                        byte SSDModeOfTransport, 
                        bool UseAltCurrency, 
                        bool OverideProductVat, 
                        bool IsDefault, 
                        bool AllowPartShipment, 
                        bool GMDisabled, 
                        byte PaymentType, 
                        short PaymentDays, 
                        bool CRMUpdate, 
                        double ComponentDiscount, 
                        int SellingBandNameID, 
                        string Courier, 
                        int CourierServiceID, 
                        System.DateTime CreatedDate, 
                        bool Deleted, 
                        System.DateTime DeletedDate, 
                        string DeletedBy, 
                        int CompanyID, 
                        bool PrePressWebEnable, 
                        string DefaultPackingLocation, 
                        byte Inactive, 
                        int SecurityGroupID, 
                        byte CustomerStatus, 
                        byte PrePaidSalesInvoice, 
                        bool CreateSeriesJobs, 
                        string ExternalID, 
                        double Latitude, 
                        double Longitude, 
                        bool UseShortfall, 
                        int SalesTaxCodeID, 
                        int SalesTaxItemID, 
                        int CarriageSalesTaxCodeID, 
                        string Department, 
                        double AllowedOverProduction, 
                        int PriceListCustomerGroupID, 
                        string AccountRef, 
                        byte[] dbTimeStamp, 
                        short eStatus_id, 
                        byte[] Customers_AccessString, 
                        string OnlineLogo, 
                        bool GMUpdate, 
                        string PaymentTermsRef, 
                        string CostCentre) {
                CustomersRow rowCustomersRow = ((CustomersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Comment,
                        Code,
                        Name,
                        Address,
                        Town,
                        County,
                        Postcode,
                        Country,
                        Contact,
                        Tel,
                        Fax,
                        WebURL,
                        Uplift,
                        CBand,
                        Delivery,
                        ParentCode,
                        Ref1,
                        Ref2,
                        Ref3,
                        Exchange,
                        CommissionPerc,
                        DontMerge,
                        OverwriteDetails,
                        PostingAccount,
                        IncludeInDistributions,
                        CountryOfOrigin,
                        VatCode,
                        VatRegNo,
                        SSDNatureOfTransaction,
                        SSDDeliveryTerms,
                        SSDModeOfTransport,
                        UseAltCurrency,
                        OverideProductVat,
                        IsDefault,
                        AllowPartShipment,
                        GMDisabled,
                        PaymentType,
                        PaymentDays,
                        CRMUpdate,
                        ComponentDiscount,
                        SellingBandNameID,
                        Courier,
                        CourierServiceID,
                        CreatedDate,
                        Deleted,
                        DeletedDate,
                        DeletedBy,
                        CompanyID,
                        PrePressWebEnable,
                        DefaultPackingLocation,
                        Inactive,
                        SecurityGroupID,
                        CustomerStatus,
                        PrePaidSalesInvoice,
                        CreateSeriesJobs,
                        ExternalID,
                        Latitude,
                        Longitude,
                        UseShortfall,
                        SalesTaxCodeID,
                        SalesTaxItemID,
                        CarriageSalesTaxCodeID,
                        Department,
                        AllowedOverProduction,
                        PriceListCustomerGroupID,
                        AccountRef,
                        dbTimeStamp,
                        eStatus_id,
                        Customers_AccessString,
                        OnlineLogo,
                        GMUpdate,
                        PaymentTermsRef,
                        CostCentre};
                rowCustomersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomersRow);
                return rowCustomersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CustomersRow FindByID(int ID) {
                return ((CustomersRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CustomersDataTable cln = ((CustomersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnComment = base.Columns["Comment"];
                this.columnCode = base.Columns["Code"];
                this.columnName = base.Columns["Name"];
                this.columnAddress = base.Columns["Address"];
                this.columnTown = base.Columns["Town"];
                this.columnCounty = base.Columns["County"];
                this.columnPostcode = base.Columns["Postcode"];
                this.columnCountry = base.Columns["Country"];
                this.columnContact = base.Columns["Contact"];
                this.columnTel = base.Columns["Tel"];
                this.columnFax = base.Columns["Fax"];
                this.columnWebURL = base.Columns["WebURL"];
                this.columnUplift = base.Columns["Uplift"];
                this.columnCBand = base.Columns["CBand"];
                this.columnDelivery = base.Columns["Delivery"];
                this.columnParentCode = base.Columns["ParentCode"];
                this.columnRef1 = base.Columns["Ref1"];
                this.columnRef2 = base.Columns["Ref2"];
                this.columnRef3 = base.Columns["Ref3"];
                this.columnExchange = base.Columns["Exchange"];
                this.columnCommissionPerc = base.Columns["CommissionPerc"];
                this.columnDontMerge = base.Columns["DontMerge"];
                this.columnOverwriteDetails = base.Columns["OverwriteDetails"];
                this.columnPostingAccount = base.Columns["PostingAccount"];
                this.columnIncludeInDistributions = base.Columns["IncludeInDistributions"];
                this.columnCountryOfOrigin = base.Columns["CountryOfOrigin"];
                this.columnVatCode = base.Columns["VatCode"];
                this.columnVatRegNo = base.Columns["VatRegNo"];
                this.columnSSDNatureOfTransaction = base.Columns["SSDNatureOfTransaction"];
                this.columnSSDDeliveryTerms = base.Columns["SSDDeliveryTerms"];
                this.columnSSDModeOfTransport = base.Columns["SSDModeOfTransport"];
                this.columnUseAltCurrency = base.Columns["UseAltCurrency"];
                this.columnOverideProductVat = base.Columns["OverideProductVat"];
                this.columnIsDefault = base.Columns["IsDefault"];
                this.columnAllowPartShipment = base.Columns["AllowPartShipment"];
                this.columnGMDisabled = base.Columns["GMDisabled"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnPaymentDays = base.Columns["PaymentDays"];
                this.columnCRMUpdate = base.Columns["CRMUpdate"];
                this.columnComponentDiscount = base.Columns["ComponentDiscount"];
                this.columnSellingBandNameID = base.Columns["SellingBandNameID"];
                this.columnCourier = base.Columns["Courier"];
                this.columnCourierServiceID = base.Columns["CourierServiceID"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnPrePressWebEnable = base.Columns["PrePressWebEnable"];
                this.columnDefaultPackingLocation = base.Columns["DefaultPackingLocation"];
                this.columnInactive = base.Columns["Inactive"];
                this.columnSecurityGroupID = base.Columns["SecurityGroupID"];
                this.columnCustomerStatus = base.Columns["CustomerStatus"];
                this.columnPrePaidSalesInvoice = base.Columns["PrePaidSalesInvoice"];
                this.columnCreateSeriesJobs = base.Columns["CreateSeriesJobs"];
                this.columnExternalID = base.Columns["ExternalID"];
                this.columnLatitude = base.Columns["Latitude"];
                this.columnLongitude = base.Columns["Longitude"];
                this.columnUseShortfall = base.Columns["UseShortfall"];
                this.columnSalesTaxCodeID = base.Columns["SalesTaxCodeID"];
                this.columnSalesTaxItemID = base.Columns["SalesTaxItemID"];
                this.columnCarriageSalesTaxCodeID = base.Columns["CarriageSalesTaxCodeID"];
                this.columnDepartment = base.Columns["Department"];
                this.columnAllowedOverProduction = base.Columns["AllowedOverProduction"];
                this.columnPriceListCustomerGroupID = base.Columns["PriceListCustomerGroupID"];
                this.columnAccountRef = base.Columns["AccountRef"];
                this.columndbTimeStamp = base.Columns["dbTimeStamp"];
                this.columneStatus_id = base.Columns["eStatus_id"];
                this.columnCustomers_AccessString = base.Columns["Customers_AccessString"];
                this.columnOnlineLogo = base.Columns["OnlineLogo"];
                this.columnGMUpdate = base.Columns["GMUpdate"];
                this.columnPaymentTermsRef = base.Columns["PaymentTermsRef"];
                this.columnCostCentre = base.Columns["CostCentre"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnTown = new global::System.Data.DataColumn("Town", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTown);
                this.columnCounty = new global::System.Data.DataColumn("County", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounty);
                this.columnPostcode = new global::System.Data.DataColumn("Postcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostcode);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnContact = new global::System.Data.DataColumn("Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact);
                this.columnTel = new global::System.Data.DataColumn("Tel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTel);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnWebURL = new global::System.Data.DataColumn("WebURL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebURL);
                this.columnUplift = new global::System.Data.DataColumn("Uplift", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUplift);
                this.columnCBand = new global::System.Data.DataColumn("CBand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBand);
                this.columnDelivery = new global::System.Data.DataColumn("Delivery", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelivery);
                this.columnParentCode = new global::System.Data.DataColumn("ParentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentCode);
                this.columnRef1 = new global::System.Data.DataColumn("Ref1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef1);
                this.columnRef2 = new global::System.Data.DataColumn("Ref2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef2);
                this.columnRef3 = new global::System.Data.DataColumn("Ref3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef3);
                this.columnExchange = new global::System.Data.DataColumn("Exchange", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchange);
                this.columnCommissionPerc = new global::System.Data.DataColumn("CommissionPerc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommissionPerc);
                this.columnDontMerge = new global::System.Data.DataColumn("DontMerge", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDontMerge);
                this.columnOverwriteDetails = new global::System.Data.DataColumn("OverwriteDetails", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverwriteDetails);
                this.columnPostingAccount = new global::System.Data.DataColumn("PostingAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostingAccount);
                this.columnIncludeInDistributions = new global::System.Data.DataColumn("IncludeInDistributions", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncludeInDistributions);
                this.columnCountryOfOrigin = new global::System.Data.DataColumn("CountryOfOrigin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryOfOrigin);
                this.columnVatCode = new global::System.Data.DataColumn("VatCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatCode);
                this.columnVatRegNo = new global::System.Data.DataColumn("VatRegNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatRegNo);
                this.columnSSDNatureOfTransaction = new global::System.Data.DataColumn("SSDNatureOfTransaction", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSDNatureOfTransaction);
                this.columnSSDDeliveryTerms = new global::System.Data.DataColumn("SSDDeliveryTerms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSDDeliveryTerms);
                this.columnSSDModeOfTransport = new global::System.Data.DataColumn("SSDModeOfTransport", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSDModeOfTransport);
                this.columnUseAltCurrency = new global::System.Data.DataColumn("UseAltCurrency", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseAltCurrency);
                this.columnOverideProductVat = new global::System.Data.DataColumn("OverideProductVat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverideProductVat);
                this.columnIsDefault = new global::System.Data.DataColumn("IsDefault", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDefault);
                this.columnAllowPartShipment = new global::System.Data.DataColumn("AllowPartShipment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowPartShipment);
                this.columnGMDisabled = new global::System.Data.DataColumn("GMDisabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGMDisabled);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnPaymentDays = new global::System.Data.DataColumn("PaymentDays", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDays);
                this.columnCRMUpdate = new global::System.Data.DataColumn("CRMUpdate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRMUpdate);
                this.columnComponentDiscount = new global::System.Data.DataColumn("ComponentDiscount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComponentDiscount);
                this.columnSellingBandNameID = new global::System.Data.DataColumn("SellingBandNameID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingBandNameID);
                this.columnCourier = new global::System.Data.DataColumn("Courier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourier);
                this.columnCourierServiceID = new global::System.Data.DataColumn("CourierServiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourierServiceID);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnPrePressWebEnable = new global::System.Data.DataColumn("PrePressWebEnable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrePressWebEnable);
                this.columnDefaultPackingLocation = new global::System.Data.DataColumn("DefaultPackingLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultPackingLocation);
                this.columnInactive = new global::System.Data.DataColumn("Inactive", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactive);
                this.columnSecurityGroupID = new global::System.Data.DataColumn("SecurityGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecurityGroupID);
                this.columnCustomerStatus = new global::System.Data.DataColumn("CustomerStatus", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerStatus);
                this.columnPrePaidSalesInvoice = new global::System.Data.DataColumn("PrePaidSalesInvoice", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrePaidSalesInvoice);
                this.columnCreateSeriesJobs = new global::System.Data.DataColumn("CreateSeriesJobs", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateSeriesJobs);
                this.columnExternalID = new global::System.Data.DataColumn("ExternalID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExternalID);
                this.columnLatitude = new global::System.Data.DataColumn("Latitude", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatitude);
                this.columnLongitude = new global::System.Data.DataColumn("Longitude", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongitude);
                this.columnUseShortfall = new global::System.Data.DataColumn("UseShortfall", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseShortfall);
                this.columnSalesTaxCodeID = new global::System.Data.DataColumn("SalesTaxCodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTaxCodeID);
                this.columnSalesTaxItemID = new global::System.Data.DataColumn("SalesTaxItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTaxItemID);
                this.columnCarriageSalesTaxCodeID = new global::System.Data.DataColumn("CarriageSalesTaxCodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarriageSalesTaxCodeID);
                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnAllowedOverProduction = new global::System.Data.DataColumn("AllowedOverProduction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowedOverProduction);
                this.columnPriceListCustomerGroupID = new global::System.Data.DataColumn("PriceListCustomerGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceListCustomerGroupID);
                this.columnAccountRef = new global::System.Data.DataColumn("AccountRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountRef);
                this.columndbTimeStamp = new global::System.Data.DataColumn("dbTimeStamp", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndbTimeStamp);
                this.columneStatus_id = new global::System.Data.DataColumn("eStatus_id", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneStatus_id);
                this.columnCustomers_AccessString = new global::System.Data.DataColumn("Customers_AccessString", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomers_AccessString);
                this.columnOnlineLogo = new global::System.Data.DataColumn("OnlineLogo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineLogo);
                this.columnGMUpdate = new global::System.Data.DataColumn("GMUpdate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGMUpdate);
                this.columnPaymentTermsRef = new global::System.Data.DataColumn("PaymentTermsRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentTermsRef);
                this.columnCostCentre = new global::System.Data.DataColumn("CostCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCentre);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnComment.MaxLength = 4000;
                this.columnCode.MaxLength = 32;
                this.columnName.MaxLength = 64;
                this.columnAddress.MaxLength = 255;
                this.columnTown.MaxLength = 64;
                this.columnCounty.MaxLength = 64;
                this.columnPostcode.MaxLength = 10;
                this.columnCountry.MaxLength = 64;
                this.columnContact.MaxLength = 64;
                this.columnTel.MaxLength = 32;
                this.columnFax.MaxLength = 32;
                this.columnWebURL.MaxLength = 255;
                this.columnCBand.MaxLength = 1;
                this.columnDelivery.AllowDBNull = false;
                this.columnParentCode.MaxLength = 32;
                this.columnRef1.MaxLength = 32;
                this.columnRef2.MaxLength = 32;
                this.columnRef3.MaxLength = 32;
                this.columnExchange.AllowDBNull = false;
                this.columnDontMerge.AllowDBNull = false;
                this.columnOverwriteDetails.AllowDBNull = false;
                this.columnPostingAccount.MaxLength = 32;
                this.columnIncludeInDistributions.AllowDBNull = false;
                this.columnCountryOfOrigin.AllowDBNull = false;
                this.columnCountryOfOrigin.MaxLength = 2;
                this.columnVatCode.AllowDBNull = false;
                this.columnVatCode.MaxLength = 2;
                this.columnVatRegNo.MaxLength = 64;
                this.columnSSDNatureOfTransaction.AllowDBNull = false;
                this.columnSSDDeliveryTerms.AllowDBNull = false;
                this.columnSSDDeliveryTerms.MaxLength = 3;
                this.columnSSDModeOfTransport.AllowDBNull = false;
                this.columnUseAltCurrency.AllowDBNull = false;
                this.columnOverideProductVat.AllowDBNull = false;
                this.columnIsDefault.AllowDBNull = false;
                this.columnAllowPartShipment.AllowDBNull = false;
                this.columnGMDisabled.AllowDBNull = false;
                this.columnPaymentType.AllowDBNull = false;
                this.columnPaymentDays.AllowDBNull = false;
                this.columnCRMUpdate.AllowDBNull = false;
                this.columnComponentDiscount.AllowDBNull = false;
                this.columnCourier.MaxLength = 32;
                this.columnCourierServiceID.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnDeletedBy.MaxLength = 32;
                this.columnCompanyID.AllowDBNull = false;
                this.columnPrePressWebEnable.AllowDBNull = false;
                this.columnDefaultPackingLocation.MaxLength = 64;
                this.columnInactive.AllowDBNull = false;
                this.columnCustomerStatus.AllowDBNull = false;
                this.columnPrePaidSalesInvoice.AllowDBNull = false;
                this.columnCreateSeriesJobs.AllowDBNull = false;
                this.columnExternalID.MaxLength = 128;
                this.columnUseShortfall.AllowDBNull = false;
                this.columnSalesTaxCodeID.AllowDBNull = false;
                this.columnSalesTaxItemID.AllowDBNull = false;
                this.columnCarriageSalesTaxCodeID.AllowDBNull = false;
                this.columnDepartment.MaxLength = 32;
                this.columnAllowedOverProduction.AllowDBNull = false;
                this.columnPriceListCustomerGroupID.AllowDBNull = false;
                this.columnAccountRef.MaxLength = 32;
                this.columndbTimeStamp.ReadOnly = true;
                this.columneStatus_id.AllowDBNull = false;
                this.columnOnlineLogo.MaxLength = 255;
                this.columnGMUpdate.AllowDBNull = false;
                this.columnPaymentTermsRef.MaxLength = 32;
                this.columnCostCentre.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CustomersRow NewCustomersRow() {
                return ((CustomersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CustomersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomersRowChanged != null)) {
                    this.CustomersRowChanged(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomersRowChanging != null)) {
                    this.CustomersRowChanging(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomersRowDeleted != null)) {
                    this.CustomersRowDeleted(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomersRowDeleting != null)) {
                    this.CustomersRowDeleting(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCustomersRow(CustomersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ThardataDataSet ds = new ThardataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JobProductsDataTable : global::System.Data.TypedTableBase<JobProductsRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnJobNo;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnProductSize;
            
            private global::System.Data.DataColumn columnProductNumber;
            
            private global::System.Data.DataColumn columnDeliveryCustomerCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnQuantityOrdered;
            
            private global::System.Data.DataColumn columnQuantityDelivered;
            
            private global::System.Data.DataColumn columnQuantityInStock;
            
            private global::System.Data.DataColumn columnQuantityInvoiced;
            
            private global::System.Data.DataColumn columnQuantityProduced;
            
            private global::System.Data.DataColumn columnReference1;
            
            private global::System.Data.DataColumn columnReference2;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnPricePer1000;
            
            private global::System.Data.DataColumn columnSalesLineID;
            
            private global::System.Data.DataColumn columnJobType;
            
            private global::System.Data.DataColumn columnTaxCode;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnCostCentre;
            
            private global::System.Data.DataColumn columnDepartment;
            
            private global::System.Data.DataColumn columnEstimateID;
            
            private global::System.Data.DataColumn columnEstHeaderRef;
            
            private global::System.Data.DataColumn columnContact;
            
            private global::System.Data.DataColumn columnExclude;
            
            private global::System.Data.DataColumn columnIsGanged;
            
            private global::System.Data.DataColumn columnInvoiceToParent;
            
            private global::System.Data.DataColumn columnCurrency;
            
            private global::System.Data.DataColumn columnForeignPrice;
            
            private global::System.Data.DataColumn columnForeignPricePer1000;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnInvoiceCustomerCode;
            
            private global::System.Data.DataColumn columnDateModified;
            
            private global::System.Data.DataColumn columnModifiedByUserID;
            
            private global::System.Data.DataColumn columnSalesJobNo;
            
            private global::System.Data.DataColumn columnBOMRevision;
            
            private global::System.Data.DataColumn columnSalesTaxCodeID;
            
            private global::System.Data.DataColumn columnSalesTaxItemID;
            
            private global::System.Data.DataColumn columnBOMParentJobNo;
            
            private global::System.Data.DataColumn columnCreatedStockType;
            
            private global::System.Data.DataColumn columnIsAutoCreated;
            
            private global::System.Data.DataColumn columnEstVersionID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobProductsDataTable() {
                this.TableName = "JobProducts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JobProductsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected JobProductsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobNoColumn {
                get {
                    return this.columnJobNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductSizeColumn {
                get {
                    return this.columnProductSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductNumberColumn {
                get {
                    return this.columnProductNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryCustomerCodeColumn {
                get {
                    return this.columnDeliveryCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityOrderedColumn {
                get {
                    return this.columnQuantityOrdered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityDeliveredColumn {
                get {
                    return this.columnQuantityDelivered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityInStockColumn {
                get {
                    return this.columnQuantityInStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityInvoicedColumn {
                get {
                    return this.columnQuantityInvoiced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityProducedColumn {
                get {
                    return this.columnQuantityProduced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Reference1Column {
                get {
                    return this.columnReference1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Reference2Column {
                get {
                    return this.columnReference2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PricePer1000Column {
                get {
                    return this.columnPricePer1000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesLineIDColumn {
                get {
                    return this.columnSalesLineID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobTypeColumn {
                get {
                    return this.columnJobType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxCodeColumn {
                get {
                    return this.columnTaxCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostCentreColumn {
                get {
                    return this.columnCostCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimateIDColumn {
                get {
                    return this.columnEstimateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstHeaderRefColumn {
                get {
                    return this.columnEstHeaderRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactColumn {
                get {
                    return this.columnContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcludeColumn {
                get {
                    return this.columnExclude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsGangedColumn {
                get {
                    return this.columnIsGanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceToParentColumn {
                get {
                    return this.columnInvoiceToParent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignPriceColumn {
                get {
                    return this.columnForeignPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignPricePer1000Column {
                get {
                    return this.columnForeignPricePer1000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceCustomerCodeColumn {
                get {
                    return this.columnInvoiceCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifiedColumn {
                get {
                    return this.columnDateModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedByUserIDColumn {
                get {
                    return this.columnModifiedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesJobNoColumn {
                get {
                    return this.columnSalesJobNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BOMRevisionColumn {
                get {
                    return this.columnBOMRevision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTaxCodeIDColumn {
                get {
                    return this.columnSalesTaxCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTaxItemIDColumn {
                get {
                    return this.columnSalesTaxItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BOMParentJobNoColumn {
                get {
                    return this.columnBOMParentJobNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedStockTypeColumn {
                get {
                    return this.columnCreatedStockType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsAutoCreatedColumn {
                get {
                    return this.columnIsAutoCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstVersionIDColumn {
                get {
                    return this.columnEstVersionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobProductsRow this[int index] {
                get {
                    return ((JobProductsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobProductsRowChangeEventHandler JobProductsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobProductsRowChangeEventHandler JobProductsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobProductsRowChangeEventHandler JobProductsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobProductsRowChangeEventHandler JobProductsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddJobProductsRow(JobProductsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobProductsRow AddJobProductsRow(
                        string JobNo, 
                        string ProductCode, 
                        string ProductSize, 
                        int ProductNumber, 
                        string DeliveryCustomerCode, 
                        string Description, 
                        double QuantityOrdered, 
                        double QuantityDelivered, 
                        double QuantityInStock, 
                        double QuantityInvoiced, 
                        double QuantityProduced, 
                        string Reference1, 
                        string Reference2, 
                        double Price, 
                        double PricePer1000, 
                        int SalesLineID, 
                        string JobType, 
                        string TaxCode, 
                        string Nominal, 
                        string CostCentre, 
                        string Department, 
                        int EstimateID, 
                        string EstHeaderRef, 
                        string Contact, 
                        bool Exclude, 
                        bool IsGanged, 
                        bool InvoiceToParent, 
                        int Currency, 
                        double ForeignPrice, 
                        double ForeignPricePer1000, 
                        double ExchangeRate, 
                        double Weight, 
                        string InvoiceCustomerCode, 
                        System.DateTime DateModified, 
                        int ModifiedByUserID, 
                        string SalesJobNo, 
                        int BOMRevision, 
                        int SalesTaxCodeID, 
                        int SalesTaxItemID, 
                        string BOMParentJobNo, 
                        byte CreatedStockType, 
                        bool IsAutoCreated, 
                        int EstVersionID) {
                JobProductsRow rowJobProductsRow = ((JobProductsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        JobNo,
                        ProductCode,
                        ProductSize,
                        ProductNumber,
                        DeliveryCustomerCode,
                        Description,
                        QuantityOrdered,
                        QuantityDelivered,
                        QuantityInStock,
                        QuantityInvoiced,
                        QuantityProduced,
                        Reference1,
                        Reference2,
                        Price,
                        PricePer1000,
                        SalesLineID,
                        JobType,
                        TaxCode,
                        Nominal,
                        CostCentre,
                        Department,
                        EstimateID,
                        EstHeaderRef,
                        Contact,
                        Exclude,
                        IsGanged,
                        InvoiceToParent,
                        Currency,
                        ForeignPrice,
                        ForeignPricePer1000,
                        ExchangeRate,
                        Weight,
                        InvoiceCustomerCode,
                        DateModified,
                        ModifiedByUserID,
                        SalesJobNo,
                        BOMRevision,
                        SalesTaxCodeID,
                        SalesTaxItemID,
                        BOMParentJobNo,
                        CreatedStockType,
                        IsAutoCreated,
                        EstVersionID};
                rowJobProductsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowJobProductsRow);
                return rowJobProductsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobProductsRow FindByID(int ID) {
                return ((JobProductsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                JobProductsDataTable cln = ((JobProductsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JobProductsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnJobNo = base.Columns["JobNo"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnProductSize = base.Columns["ProductSize"];
                this.columnProductNumber = base.Columns["ProductNumber"];
                this.columnDeliveryCustomerCode = base.Columns["DeliveryCustomerCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnQuantityOrdered = base.Columns["QuantityOrdered"];
                this.columnQuantityDelivered = base.Columns["QuantityDelivered"];
                this.columnQuantityInStock = base.Columns["QuantityInStock"];
                this.columnQuantityInvoiced = base.Columns["QuantityInvoiced"];
                this.columnQuantityProduced = base.Columns["QuantityProduced"];
                this.columnReference1 = base.Columns["Reference1"];
                this.columnReference2 = base.Columns["Reference2"];
                this.columnPrice = base.Columns["Price"];
                this.columnPricePer1000 = base.Columns["PricePer1000"];
                this.columnSalesLineID = base.Columns["SalesLineID"];
                this.columnJobType = base.Columns["JobType"];
                this.columnTaxCode = base.Columns["TaxCode"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnCostCentre = base.Columns["CostCentre"];
                this.columnDepartment = base.Columns["Department"];
                this.columnEstimateID = base.Columns["EstimateID"];
                this.columnEstHeaderRef = base.Columns["EstHeaderRef"];
                this.columnContact = base.Columns["Contact"];
                this.columnExclude = base.Columns["Exclude"];
                this.columnIsGanged = base.Columns["IsGanged"];
                this.columnInvoiceToParent = base.Columns["InvoiceToParent"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnForeignPrice = base.Columns["ForeignPrice"];
                this.columnForeignPricePer1000 = base.Columns["ForeignPricePer1000"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnWeight = base.Columns["Weight"];
                this.columnInvoiceCustomerCode = base.Columns["InvoiceCustomerCode"];
                this.columnDateModified = base.Columns["DateModified"];
                this.columnModifiedByUserID = base.Columns["ModifiedByUserID"];
                this.columnSalesJobNo = base.Columns["SalesJobNo"];
                this.columnBOMRevision = base.Columns["BOMRevision"];
                this.columnSalesTaxCodeID = base.Columns["SalesTaxCodeID"];
                this.columnSalesTaxItemID = base.Columns["SalesTaxItemID"];
                this.columnBOMParentJobNo = base.Columns["BOMParentJobNo"];
                this.columnCreatedStockType = base.Columns["CreatedStockType"];
                this.columnIsAutoCreated = base.Columns["IsAutoCreated"];
                this.columnEstVersionID = base.Columns["EstVersionID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnJobNo = new global::System.Data.DataColumn("JobNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobNo);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnProductSize = new global::System.Data.DataColumn("ProductSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductSize);
                this.columnProductNumber = new global::System.Data.DataColumn("ProductNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductNumber);
                this.columnDeliveryCustomerCode = new global::System.Data.DataColumn("DeliveryCustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryCustomerCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnQuantityOrdered = new global::System.Data.DataColumn("QuantityOrdered", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityOrdered);
                this.columnQuantityDelivered = new global::System.Data.DataColumn("QuantityDelivered", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityDelivered);
                this.columnQuantityInStock = new global::System.Data.DataColumn("QuantityInStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityInStock);
                this.columnQuantityInvoiced = new global::System.Data.DataColumn("QuantityInvoiced", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityInvoiced);
                this.columnQuantityProduced = new global::System.Data.DataColumn("QuantityProduced", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityProduced);
                this.columnReference1 = new global::System.Data.DataColumn("Reference1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference1);
                this.columnReference2 = new global::System.Data.DataColumn("Reference2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference2);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnPricePer1000 = new global::System.Data.DataColumn("PricePer1000", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPricePer1000);
                this.columnSalesLineID = new global::System.Data.DataColumn("SalesLineID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesLineID);
                this.columnJobType = new global::System.Data.DataColumn("JobType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobType);
                this.columnTaxCode = new global::System.Data.DataColumn("TaxCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxCode);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnCostCentre = new global::System.Data.DataColumn("CostCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCentre);
                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnEstimateID = new global::System.Data.DataColumn("EstimateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateID);
                this.columnEstHeaderRef = new global::System.Data.DataColumn("EstHeaderRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstHeaderRef);
                this.columnContact = new global::System.Data.DataColumn("Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact);
                this.columnExclude = new global::System.Data.DataColumn("Exclude", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExclude);
                this.columnIsGanged = new global::System.Data.DataColumn("IsGanged", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsGanged);
                this.columnInvoiceToParent = new global::System.Data.DataColumn("InvoiceToParent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceToParent);
                this.columnCurrency = new global::System.Data.DataColumn("Currency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnForeignPrice = new global::System.Data.DataColumn("ForeignPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignPrice);
                this.columnForeignPricePer1000 = new global::System.Data.DataColumn("ForeignPricePer1000", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignPricePer1000);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnInvoiceCustomerCode = new global::System.Data.DataColumn("InvoiceCustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceCustomerCode);
                this.columnDateModified = new global::System.Data.DataColumn("DateModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModified);
                this.columnModifiedByUserID = new global::System.Data.DataColumn("ModifiedByUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedByUserID);
                this.columnSalesJobNo = new global::System.Data.DataColumn("SalesJobNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesJobNo);
                this.columnBOMRevision = new global::System.Data.DataColumn("BOMRevision", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOMRevision);
                this.columnSalesTaxCodeID = new global::System.Data.DataColumn("SalesTaxCodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTaxCodeID);
                this.columnSalesTaxItemID = new global::System.Data.DataColumn("SalesTaxItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTaxItemID);
                this.columnBOMParentJobNo = new global::System.Data.DataColumn("BOMParentJobNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOMParentJobNo);
                this.columnCreatedStockType = new global::System.Data.DataColumn("CreatedStockType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedStockType);
                this.columnIsAutoCreated = new global::System.Data.DataColumn("IsAutoCreated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAutoCreated);
                this.columnEstVersionID = new global::System.Data.DataColumn("EstVersionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstVersionID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnJobNo.AllowDBNull = false;
                this.columnJobNo.MaxLength = 32;
                this.columnProductCode.MaxLength = 32;
                this.columnProductSize.MaxLength = 32;
                this.columnProductNumber.AllowDBNull = false;
                this.columnDeliveryCustomerCode.MaxLength = 32;
                this.columnDescription.MaxLength = 255;
                this.columnQuantityOrdered.AllowDBNull = false;
                this.columnQuantityDelivered.AllowDBNull = false;
                this.columnQuantityInStock.AllowDBNull = false;
                this.columnQuantityInvoiced.AllowDBNull = false;
                this.columnQuantityProduced.AllowDBNull = false;
                this.columnReference1.MaxLength = 128;
                this.columnReference2.MaxLength = 128;
                this.columnPrice.AllowDBNull = false;
                this.columnPricePer1000.AllowDBNull = false;
                this.columnSalesLineID.AllowDBNull = false;
                this.columnJobType.MaxLength = 32;
                this.columnTaxCode.AllowDBNull = false;
                this.columnTaxCode.MaxLength = 2;
                this.columnNominal.MaxLength = 32;
                this.columnCostCentre.MaxLength = 32;
                this.columnDepartment.MaxLength = 32;
                this.columnEstimateID.AllowDBNull = false;
                this.columnEstHeaderRef.MaxLength = 32;
                this.columnContact.MaxLength = 64;
                this.columnExclude.AllowDBNull = false;
                this.columnIsGanged.AllowDBNull = false;
                this.columnInvoiceToParent.AllowDBNull = false;
                this.columnCurrency.AllowDBNull = false;
                this.columnForeignPrice.AllowDBNull = false;
                this.columnForeignPricePer1000.AllowDBNull = false;
                this.columnExchangeRate.AllowDBNull = false;
                this.columnWeight.AllowDBNull = false;
                this.columnInvoiceCustomerCode.MaxLength = 32;
                this.columnSalesJobNo.MaxLength = 32;
                this.columnBOMRevision.AllowDBNull = false;
                this.columnSalesTaxCodeID.AllowDBNull = false;
                this.columnSalesTaxItemID.AllowDBNull = false;
                this.columnBOMParentJobNo.MaxLength = 32;
                this.columnCreatedStockType.AllowDBNull = false;
                this.columnIsAutoCreated.AllowDBNull = false;
                this.columnEstVersionID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobProductsRow NewJobProductsRow() {
                return ((JobProductsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JobProductsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(JobProductsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JobProductsRowChanged != null)) {
                    this.JobProductsRowChanged(this, new JobProductsRowChangeEvent(((JobProductsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JobProductsRowChanging != null)) {
                    this.JobProductsRowChanging(this, new JobProductsRowChangeEvent(((JobProductsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JobProductsRowDeleted != null)) {
                    this.JobProductsRowDeleted(this, new JobProductsRowChangeEvent(((JobProductsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JobProductsRowDeleting != null)) {
                    this.JobProductsRowDeleting(this, new JobProductsRowChangeEvent(((JobProductsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveJobProductsRow(JobProductsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ThardataDataSet ds = new ThardataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JobProductsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MainEstimateDetailsDataTable : global::System.Data.TypedTableBase<MainEstimateDetailsRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMethodOfWorking;
            
            private global::System.Data.DataColumn columnIsTemplate;
            
            private global::System.Data.DataColumn columnEstimateDate;
            
            private global::System.Data.DataColumn columnRequired;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnJobTypeDesc;
            
            private global::System.Data.DataColumn columnCustomerRef;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerAddress;
            
            private global::System.Data.DataColumn columnCustomerTown;
            
            private global::System.Data.DataColumn columnCustomerCounty;
            
            private global::System.Data.DataColumn columnCustomerPostcode;
            
            private global::System.Data.DataColumn columnCustomerCountry;
            
            private global::System.Data.DataColumn columnCustomerCountryOfOrigin;
            
            private global::System.Data.DataColumn columnCustomerContact;
            
            private global::System.Data.DataColumn columnCustomerTel;
            
            private global::System.Data.DataColumn columnCustomerFax;
            
            private global::System.Data.DataColumn columnCustomerEmail;
            
            private global::System.Data.DataColumn columnCustomerUplift;
            
            private global::System.Data.DataColumn columnCustomerExchange;
            
            private global::System.Data.DataColumn columnOrdered;
            
            private global::System.Data.DataColumn columnJobCreated;
            
            private global::System.Data.DataColumn columnRef1;
            
            private global::System.Data.DataColumn columnRef2;
            
            private global::System.Data.DataColumn columnRef3;
            
            private global::System.Data.DataColumn columnRef4;
            
            private global::System.Data.DataColumn columnRef5;
            
            private global::System.Data.DataColumn columnRef6;
            
            private global::System.Data.DataColumn columnRef7;
            
            private global::System.Data.DataColumn columnRef8;
            
            private global::System.Data.DataColumn columnRef9;
            
            private global::System.Data.DataColumn columnRef10;
            
            private global::System.Data.DataColumn columnJobType;
            
            private global::System.Data.DataColumn columnOrderExpense;
            
            private global::System.Data.DataColumn columnEstimator;
            
            private global::System.Data.DataColumn columnUpdateUserName;
            
            private global::System.Data.DataColumn columnLastModified;
            
            private global::System.Data.DataColumn columnRunOnPer;
            
            private global::System.Data.DataColumn columnPaperSubTot;
            
            private global::System.Data.DataColumn columnPaperMarkUpPercent;
            
            private global::System.Data.DataColumn columnPaperMarkup;
            
            private global::System.Data.DataColumn columnOriginMatSubTot;
            
            private global::System.Data.DataColumn columnOriginMatMarkUpPercent;
            
            private global::System.Data.DataColumn columnOriginMatMarkUp;
            
            private global::System.Data.DataColumn columnOriginLabSubTot;
            
            private global::System.Data.DataColumn columnOriginLabMarkUpPercent;
            
            private global::System.Data.DataColumn columnOriginLabMarkUp;
            
            private global::System.Data.DataColumn columnOriginLabLabSubTot;
            
            private global::System.Data.DataColumn columnOutworkSubtot;
            
            private global::System.Data.DataColumn columnOutworkMarkUpPercent;
            
            private global::System.Data.DataColumn columnOutworkMarkUp;
            
            private global::System.Data.DataColumn columnOtherMatSubTotal;
            
            private global::System.Data.DataColumn columnOtherMatMarkUpPercent;
            
            private global::System.Data.DataColumn columnOtherMatMarkUp;
            
            private global::System.Data.DataColumn columnPrintingLabSubTotal;
            
            private global::System.Data.DataColumn columnPrintingOHSubTotal;
            
            private global::System.Data.DataColumn columnPrintingSubTotal;
            
            private global::System.Data.DataColumn columnPrintingMarkUpPercent;
            
            private global::System.Data.DataColumn columnPrintingMarkUp;
            
            private global::System.Data.DataColumn columnFinishingLabSubTotal;
            
            private global::System.Data.DataColumn columnFinishingOHSubTotal;
            
            private global::System.Data.DataColumn columnFinishingSubTotal;
            
            private global::System.Data.DataColumn columnFinishingMarkUpPercent;
            
            private global::System.Data.DataColumn columnFinishingMarkUp;
            
            private global::System.Data.DataColumn columnCarriageSubTotal;
            
            private global::System.Data.DataColumn columnCarriageMarkUpPercent;
            
            private global::System.Data.DataColumn columnCarriageMarkUp;
            
            private global::System.Data.DataColumn columnTotalSubTotal;
            
            private global::System.Data.DataColumn columnTotalMarkUpPercent;
            
            private global::System.Data.DataColumn columnTotalMarkUp;
            
            private global::System.Data.DataColumn columnTotalTotal;
            
            private global::System.Data.DataColumn columnExchangeCurrency;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnForeignTotal;
            
            private global::System.Data.DataColumn columnRunOnValue;
            
            private global::System.Data.DataColumn columnJobDescription;
            
            private global::System.Data.DataColumn columnNoOfJobDescLines;
            
            private global::System.Data.DataColumn columnPaperRunOn;
            
            private global::System.Data.DataColumn columnOriginMatRunOn;
            
            private global::System.Data.DataColumn columnOriginLabRunOn;
            
            private global::System.Data.DataColumn columnOutworkRunOn;
            
            private global::System.Data.DataColumn columnOtherMatRunOn;
            
            private global::System.Data.DataColumn columnPrintingRunOn;
            
            private global::System.Data.DataColumn columnFinishingRunOn;
            
            private global::System.Data.DataColumn columnCarriageRunOn;
            
            private global::System.Data.DataColumn columnEstimateHeaderRef;
            
            private global::System.Data.DataColumn columnUseManualCarriage;
            
            private global::System.Data.DataColumn columnWorkingLevel;
            
            private global::System.Data.DataColumn columnAgencyComPerc;
            
            private global::System.Data.DataColumn columnAgencyComValue;
            
            private global::System.Data.DataColumn columnIsRevision;
            
            private global::System.Data.DataColumn columnRevisedFromID;
            
            private global::System.Data.DataColumn columnRFQStatus;
            
            private global::System.Data.DataColumn columnRFQID;
            
            private global::System.Data.DataColumn columnDeliveryRef;
            
            private global::System.Data.DataColumn columnDeliveryContact;
            
            private global::System.Data.DataColumn columnSalutationName;
            
            private global::System.Data.DataColumn columnComponentMarkupPerc;
            
            private global::System.Data.DataColumn columnOtherTotal;
            
            private global::System.Data.DataColumn columnPricePerRunOnLocked;
            
            private global::System.Data.DataColumn columnPricePerRunOn;
            
            private global::System.Data.DataColumn columnForeignPricePerRunOn;
            
            private global::System.Data.DataColumn columnPricingUnits;
            
            private global::System.Data.DataColumn columnEstRefNum;
            
            private global::System.Data.DataColumn columnRunOnLocked;
            
            private global::System.Data.DataColumn columnCurrencyValueLocked;
            
            private global::System.Data.DataColumn columnSellingPriceBandID;
            
            private global::System.Data.DataColumn columnLockedCurrencyID;
            
            private global::System.Data.DataColumn columnLockedForeignTotal;
            
            private global::System.Data.DataColumn columnIsCompositeEst;
            
            private global::System.Data.DataColumn columnComponentTotal;
            
            private global::System.Data.DataColumn columnCustomerAgencyCommPerc;
            
            private global::System.Data.DataColumn columnOtherTotalNonRounded;
            
            private global::System.Data.DataColumn columnEstDescriptionTemplateID;
            
            private global::System.Data.DataColumn columnEstDescriptionTemplateName;
            
            private global::System.Data.DataColumn columnExcPaperFromCompPriceMatrix;
            
            private global::System.Data.DataColumn columnExcOrigMFromCompPriceMatrix;
            
            private global::System.Data.DataColumn columnExcOrigLFromCompPriceMatrix;
            
            private global::System.Data.DataColumn columnExcOthermFromCompPriceMatrix;
            
            private global::System.Data.DataColumn columnExcOutworkFromCompPriceMatrix;
            
            private global::System.Data.DataColumn columnExcPrintingFromCompPriceMatrix;
            
            private global::System.Data.DataColumn columnExcFinishingFromCompPriceMatrix;
            
            private global::System.Data.DataColumn columnIsFreeTypeCustomer;
            
            private global::System.Data.DataColumn columnKeepFinishedSize;
            
            private global::System.Data.DataColumn columnCreatedDateTime;
            
            private global::System.Data.DataColumn columnTaxCode;
            
            private global::System.Data.DataColumn columnCourierServiceID;
            
            private global::System.Data.DataColumn columnCourier;
            
            private global::System.Data.DataColumn columnPublished;
            
            private global::System.Data.DataColumn columnUseRounding;
            
            private global::System.Data.DataColumn columnQuantityPerPaperLine;
            
            private global::System.Data.DataColumn columnCampaignNo;
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnCreateSubJob;
            
            private global::System.Data.DataColumn columnDisplayComponentOnInput;
            
            private global::System.Data.DataColumn columnComponentAgencyComValue;
            
            private global::System.Data.DataColumn columnUseAgencyUndersandOvers;
            
            private global::System.Data.DataColumn columnVersion;
            
            private global::System.Data.DataColumn columnSecurityGroupID;
            
            private global::System.Data.DataColumn columnOpRecID;
            
            private global::System.Data.DataColumn columnFSRecID;
            
            private global::System.Data.DataColumn columnGMLink;
            
            private global::System.Data.DataColumn columnExcludedCost;
            
            private global::System.Data.DataColumn columnStatusRef;
            
            private global::System.Data.DataColumn columnEstRequestProductID;
            
            private global::System.Data.DataColumn columnUserLimitsApplied;
            
            private global::System.Data.DataColumn columnInUse;
            
            private global::System.Data.DataColumn columnLockDate;
            
            private global::System.Data.DataColumn columndbTimeStamp;
            
            private global::System.Data.DataColumn columnMarkupExclusionsSubTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainEstimateDetailsDataTable() {
                this.TableName = "MainEstimateDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MainEstimateDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MainEstimateDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MethodOfWorkingColumn {
                get {
                    return this.columnMethodOfWorking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsTemplateColumn {
                get {
                    return this.columnIsTemplate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimateDateColumn {
                get {
                    return this.columnEstimateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredColumn {
                get {
                    return this.columnRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobTypeDescColumn {
                get {
                    return this.columnJobTypeDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerRefColumn {
                get {
                    return this.columnCustomerRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerAddressColumn {
                get {
                    return this.columnCustomerAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerTownColumn {
                get {
                    return this.columnCustomerTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerCountyColumn {
                get {
                    return this.columnCustomerCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerPostcodeColumn {
                get {
                    return this.columnCustomerPostcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerCountryColumn {
                get {
                    return this.columnCustomerCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerCountryOfOriginColumn {
                get {
                    return this.columnCustomerCountryOfOrigin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerContactColumn {
                get {
                    return this.columnCustomerContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerTelColumn {
                get {
                    return this.columnCustomerTel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerFaxColumn {
                get {
                    return this.columnCustomerFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerEmailColumn {
                get {
                    return this.columnCustomerEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerUpliftColumn {
                get {
                    return this.columnCustomerUplift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerExchangeColumn {
                get {
                    return this.columnCustomerExchange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderedColumn {
                get {
                    return this.columnOrdered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobCreatedColumn {
                get {
                    return this.columnJobCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref1Column {
                get {
                    return this.columnRef1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref2Column {
                get {
                    return this.columnRef2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref3Column {
                get {
                    return this.columnRef3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref4Column {
                get {
                    return this.columnRef4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref5Column {
                get {
                    return this.columnRef5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref6Column {
                get {
                    return this.columnRef6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref7Column {
                get {
                    return this.columnRef7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref8Column {
                get {
                    return this.columnRef8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref9Column {
                get {
                    return this.columnRef9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref10Column {
                get {
                    return this.columnRef10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobTypeColumn {
                get {
                    return this.columnJobType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderExpenseColumn {
                get {
                    return this.columnOrderExpense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimatorColumn {
                get {
                    return this.columnEstimator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserNameColumn {
                get {
                    return this.columnUpdateUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastModifiedColumn {
                get {
                    return this.columnLastModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunOnPerColumn {
                get {
                    return this.columnRunOnPer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaperSubTotColumn {
                get {
                    return this.columnPaperSubTot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaperMarkUpPercentColumn {
                get {
                    return this.columnPaperMarkUpPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaperMarkupColumn {
                get {
                    return this.columnPaperMarkup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginMatSubTotColumn {
                get {
                    return this.columnOriginMatSubTot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginMatMarkUpPercentColumn {
                get {
                    return this.columnOriginMatMarkUpPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginMatMarkUpColumn {
                get {
                    return this.columnOriginMatMarkUp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginLabSubTotColumn {
                get {
                    return this.columnOriginLabSubTot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginLabMarkUpPercentColumn {
                get {
                    return this.columnOriginLabMarkUpPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginLabMarkUpColumn {
                get {
                    return this.columnOriginLabMarkUp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginLabLabSubTotColumn {
                get {
                    return this.columnOriginLabLabSubTot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutworkSubtotColumn {
                get {
                    return this.columnOutworkSubtot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutworkMarkUpPercentColumn {
                get {
                    return this.columnOutworkMarkUpPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutworkMarkUpColumn {
                get {
                    return this.columnOutworkMarkUp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherMatSubTotalColumn {
                get {
                    return this.columnOtherMatSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherMatMarkUpPercentColumn {
                get {
                    return this.columnOtherMatMarkUpPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherMatMarkUpColumn {
                get {
                    return this.columnOtherMatMarkUp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrintingLabSubTotalColumn {
                get {
                    return this.columnPrintingLabSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrintingOHSubTotalColumn {
                get {
                    return this.columnPrintingOHSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrintingSubTotalColumn {
                get {
                    return this.columnPrintingSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrintingMarkUpPercentColumn {
                get {
                    return this.columnPrintingMarkUpPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrintingMarkUpColumn {
                get {
                    return this.columnPrintingMarkUp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinishingLabSubTotalColumn {
                get {
                    return this.columnFinishingLabSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinishingOHSubTotalColumn {
                get {
                    return this.columnFinishingOHSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinishingSubTotalColumn {
                get {
                    return this.columnFinishingSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinishingMarkUpPercentColumn {
                get {
                    return this.columnFinishingMarkUpPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinishingMarkUpColumn {
                get {
                    return this.columnFinishingMarkUp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarriageSubTotalColumn {
                get {
                    return this.columnCarriageSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarriageMarkUpPercentColumn {
                get {
                    return this.columnCarriageMarkUpPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarriageMarkUpColumn {
                get {
                    return this.columnCarriageMarkUp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalSubTotalColumn {
                get {
                    return this.columnTotalSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalMarkUpPercentColumn {
                get {
                    return this.columnTotalMarkUpPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalMarkUpColumn {
                get {
                    return this.columnTotalMarkUp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalTotalColumn {
                get {
                    return this.columnTotalTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeCurrencyColumn {
                get {
                    return this.columnExchangeCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignTotalColumn {
                get {
                    return this.columnForeignTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunOnValueColumn {
                get {
                    return this.columnRunOnValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobDescriptionColumn {
                get {
                    return this.columnJobDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoOfJobDescLinesColumn {
                get {
                    return this.columnNoOfJobDescLines;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaperRunOnColumn {
                get {
                    return this.columnPaperRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginMatRunOnColumn {
                get {
                    return this.columnOriginMatRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginLabRunOnColumn {
                get {
                    return this.columnOriginLabRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutworkRunOnColumn {
                get {
                    return this.columnOutworkRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherMatRunOnColumn {
                get {
                    return this.columnOtherMatRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrintingRunOnColumn {
                get {
                    return this.columnPrintingRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinishingRunOnColumn {
                get {
                    return this.columnFinishingRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarriageRunOnColumn {
                get {
                    return this.columnCarriageRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimateHeaderRefColumn {
                get {
                    return this.columnEstimateHeaderRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseManualCarriageColumn {
                get {
                    return this.columnUseManualCarriage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkingLevelColumn {
                get {
                    return this.columnWorkingLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgencyComPercColumn {
                get {
                    return this.columnAgencyComPerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgencyComValueColumn {
                get {
                    return this.columnAgencyComValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsRevisionColumn {
                get {
                    return this.columnIsRevision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RevisedFromIDColumn {
                get {
                    return this.columnRevisedFromID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RFQStatusColumn {
                get {
                    return this.columnRFQStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RFQIDColumn {
                get {
                    return this.columnRFQID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryRefColumn {
                get {
                    return this.columnDeliveryRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryContactColumn {
                get {
                    return this.columnDeliveryContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalutationNameColumn {
                get {
                    return this.columnSalutationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComponentMarkupPercColumn {
                get {
                    return this.columnComponentMarkupPerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherTotalColumn {
                get {
                    return this.columnOtherTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PricePerRunOnLockedColumn {
                get {
                    return this.columnPricePerRunOnLocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PricePerRunOnColumn {
                get {
                    return this.columnPricePerRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignPricePerRunOnColumn {
                get {
                    return this.columnForeignPricePerRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PricingUnitsColumn {
                get {
                    return this.columnPricingUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstRefNumColumn {
                get {
                    return this.columnEstRefNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunOnLockedColumn {
                get {
                    return this.columnRunOnLocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyValueLockedColumn {
                get {
                    return this.columnCurrencyValueLocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellingPriceBandIDColumn {
                get {
                    return this.columnSellingPriceBandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LockedCurrencyIDColumn {
                get {
                    return this.columnLockedCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LockedForeignTotalColumn {
                get {
                    return this.columnLockedForeignTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCompositeEstColumn {
                get {
                    return this.columnIsCompositeEst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComponentTotalColumn {
                get {
                    return this.columnComponentTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerAgencyCommPercColumn {
                get {
                    return this.columnCustomerAgencyCommPerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherTotalNonRoundedColumn {
                get {
                    return this.columnOtherTotalNonRounded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstDescriptionTemplateIDColumn {
                get {
                    return this.columnEstDescriptionTemplateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstDescriptionTemplateNameColumn {
                get {
                    return this.columnEstDescriptionTemplateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcPaperFromCompPriceMatrixColumn {
                get {
                    return this.columnExcPaperFromCompPriceMatrix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcOrigMFromCompPriceMatrixColumn {
                get {
                    return this.columnExcOrigMFromCompPriceMatrix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcOrigLFromCompPriceMatrixColumn {
                get {
                    return this.columnExcOrigLFromCompPriceMatrix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcOthermFromCompPriceMatrixColumn {
                get {
                    return this.columnExcOthermFromCompPriceMatrix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcOutworkFromCompPriceMatrixColumn {
                get {
                    return this.columnExcOutworkFromCompPriceMatrix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcPrintingFromCompPriceMatrixColumn {
                get {
                    return this.columnExcPrintingFromCompPriceMatrix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcFinishingFromCompPriceMatrixColumn {
                get {
                    return this.columnExcFinishingFromCompPriceMatrix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsFreeTypeCustomerColumn {
                get {
                    return this.columnIsFreeTypeCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KeepFinishedSizeColumn {
                get {
                    return this.columnKeepFinishedSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedDateTimeColumn {
                get {
                    return this.columnCreatedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxCodeColumn {
                get {
                    return this.columnTaxCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourierServiceIDColumn {
                get {
                    return this.columnCourierServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourierColumn {
                get {
                    return this.columnCourier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublishedColumn {
                get {
                    return this.columnPublished;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseRoundingColumn {
                get {
                    return this.columnUseRounding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityPerPaperLineColumn {
                get {
                    return this.columnQuantityPerPaperLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CampaignNoColumn {
                get {
                    return this.columnCampaignNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateSubJobColumn {
                get {
                    return this.columnCreateSubJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DisplayComponentOnInputColumn {
                get {
                    return this.columnDisplayComponentOnInput;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComponentAgencyComValueColumn {
                get {
                    return this.columnComponentAgencyComValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseAgencyUndersandOversColumn {
                get {
                    return this.columnUseAgencyUndersandOvers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionColumn {
                get {
                    return this.columnVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecurityGroupIDColumn {
                get {
                    return this.columnSecurityGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpRecIDColumn {
                get {
                    return this.columnOpRecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FSRecIDColumn {
                get {
                    return this.columnFSRecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GMLinkColumn {
                get {
                    return this.columnGMLink;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcludedCostColumn {
                get {
                    return this.columnExcludedCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusRefColumn {
                get {
                    return this.columnStatusRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstRequestProductIDColumn {
                get {
                    return this.columnEstRequestProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserLimitsAppliedColumn {
                get {
                    return this.columnUserLimitsApplied;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InUseColumn {
                get {
                    return this.columnInUse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LockDateColumn {
                get {
                    return this.columnLockDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dbTimeStampColumn {
                get {
                    return this.columndbTimeStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkupExclusionsSubTotalColumn {
                get {
                    return this.columnMarkupExclusionsSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainEstimateDetailsRow this[int index] {
                get {
                    return ((MainEstimateDetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MainEstimateDetailsRowChangeEventHandler MainEstimateDetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MainEstimateDetailsRowChangeEventHandler MainEstimateDetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MainEstimateDetailsRowChangeEventHandler MainEstimateDetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MainEstimateDetailsRowChangeEventHandler MainEstimateDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMainEstimateDetailsRow(MainEstimateDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainEstimateDetailsRow AddMainEstimateDetailsRow(
                        string MethodOfWorking, 
                        byte IsTemplate, 
                        System.DateTime EstimateDate, 
                        System.DateTime Required, 
                        double Quantity, 
                        double Weight, 
                        string JobTypeDesc, 
                        string CustomerRef, 
                        string CustomerName, 
                        string CustomerAddress, 
                        string CustomerTown, 
                        string CustomerCounty, 
                        string CustomerPostcode, 
                        string CustomerCountry, 
                        string CustomerCountryOfOrigin, 
                        string CustomerContact, 
                        string CustomerTel, 
                        string CustomerFax, 
                        string CustomerEmail, 
                        double CustomerUplift, 
                        short CustomerExchange, 
                        byte Ordered, 
                        string JobCreated, 
                        string Ref1, 
                        string Ref2, 
                        string Ref3, 
                        string Ref4, 
                        string Ref5, 
                        string Ref6, 
                        string Ref7, 
                        string Ref8, 
                        string Ref9, 
                        string Ref10, 
                        string JobType, 
                        double OrderExpense, 
                        string Estimator, 
                        string UpdateUserName, 
                        System.DateTime LastModified, 
                        double RunOnPer, 
                        double PaperSubTot, 
                        double PaperMarkUpPercent, 
                        double PaperMarkup, 
                        double OriginMatSubTot, 
                        double OriginMatMarkUpPercent, 
                        double OriginMatMarkUp, 
                        double OriginLabSubTot, 
                        double OriginLabMarkUpPercent, 
                        double OriginLabMarkUp, 
                        double OriginLabLabSubTot, 
                        double OutworkSubtot, 
                        double OutworkMarkUpPercent, 
                        double OutworkMarkUp, 
                        double OtherMatSubTotal, 
                        double OtherMatMarkUpPercent, 
                        double OtherMatMarkUp, 
                        double PrintingLabSubTotal, 
                        double PrintingOHSubTotal, 
                        double PrintingSubTotal, 
                        double PrintingMarkUpPercent, 
                        double PrintingMarkUp, 
                        double FinishingLabSubTotal, 
                        double FinishingOHSubTotal, 
                        double FinishingSubTotal, 
                        double FinishingMarkUpPercent, 
                        double FinishingMarkUp, 
                        double CarriageSubTotal, 
                        double CarriageMarkUpPercent, 
                        double CarriageMarkUp, 
                        double TotalSubTotal, 
                        double TotalMarkUpPercent, 
                        double TotalMarkUp, 
                        double TotalTotal, 
                        int ExchangeCurrency, 
                        double ExchangeRate, 
                        double ForeignTotal, 
                        double RunOnValue, 
                        string JobDescription, 
                        double NoOfJobDescLines, 
                        double PaperRunOn, 
                        double OriginMatRunOn, 
                        double OriginLabRunOn, 
                        double OutworkRunOn, 
                        double OtherMatRunOn, 
                        double PrintingRunOn, 
                        double FinishingRunOn, 
                        double CarriageRunOn, 
                        string EstimateHeaderRef, 
                        bool UseManualCarriage, 
                        byte WorkingLevel, 
                        double AgencyComPerc, 
                        double AgencyComValue, 
                        byte IsRevision, 
                        int RevisedFromID, 
                        byte RFQStatus, 
                        int RFQID, 
                        string DeliveryRef, 
                        string DeliveryContact, 
                        string SalutationName, 
                        double ComponentMarkupPerc, 
                        double OtherTotal, 
                        bool PricePerRunOnLocked, 
                        double PricePerRunOn, 
                        double ForeignPricePerRunOn, 
                        byte PricingUnits, 
                        int EstRefNum, 
                        bool RunOnLocked, 
                        bool CurrencyValueLocked, 
                        int SellingPriceBandID, 
                        int LockedCurrencyID, 
                        double LockedForeignTotal, 
                        bool IsCompositeEst, 
                        double ComponentTotal, 
                        double CustomerAgencyCommPerc, 
                        double OtherTotalNonRounded, 
                        int EstDescriptionTemplateID, 
                        string EstDescriptionTemplateName, 
                        bool ExcPaperFromCompPriceMatrix, 
                        bool ExcOrigMFromCompPriceMatrix, 
                        bool ExcOrigLFromCompPriceMatrix, 
                        bool ExcOthermFromCompPriceMatrix, 
                        bool ExcOutworkFromCompPriceMatrix, 
                        bool ExcPrintingFromCompPriceMatrix, 
                        bool ExcFinishingFromCompPriceMatrix, 
                        bool IsFreeTypeCustomer, 
                        bool KeepFinishedSize, 
                        System.DateTime CreatedDateTime, 
                        string TaxCode, 
                        int CourierServiceID, 
                        string Courier, 
                        bool Published, 
                        bool UseRounding, 
                        bool QuantityPerPaperLine, 
                        string CampaignNo, 
                        int CompanyID, 
                        bool CreateSubJob, 
                        bool DisplayComponentOnInput, 
                        double ComponentAgencyComValue, 
                        bool UseAgencyUndersandOvers, 
                        int Version, 
                        int SecurityGroupID, 
                        string OpRecID, 
                        string FSRecID, 
                        byte GMLink, 
                        double ExcludedCost, 
                        string StatusRef, 
                        int EstRequestProductID, 
                        bool UserLimitsApplied, 
                        bool InUse, 
                        System.DateTime LockDate, 
                        byte[] dbTimeStamp, 
                        double MarkupExclusionsSubTotal) {
                MainEstimateDetailsRow rowMainEstimateDetailsRow = ((MainEstimateDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MethodOfWorking,
                        IsTemplate,
                        EstimateDate,
                        Required,
                        Quantity,
                        Weight,
                        JobTypeDesc,
                        CustomerRef,
                        CustomerName,
                        CustomerAddress,
                        CustomerTown,
                        CustomerCounty,
                        CustomerPostcode,
                        CustomerCountry,
                        CustomerCountryOfOrigin,
                        CustomerContact,
                        CustomerTel,
                        CustomerFax,
                        CustomerEmail,
                        CustomerUplift,
                        CustomerExchange,
                        Ordered,
                        JobCreated,
                        Ref1,
                        Ref2,
                        Ref3,
                        Ref4,
                        Ref5,
                        Ref6,
                        Ref7,
                        Ref8,
                        Ref9,
                        Ref10,
                        JobType,
                        OrderExpense,
                        Estimator,
                        UpdateUserName,
                        LastModified,
                        RunOnPer,
                        PaperSubTot,
                        PaperMarkUpPercent,
                        PaperMarkup,
                        OriginMatSubTot,
                        OriginMatMarkUpPercent,
                        OriginMatMarkUp,
                        OriginLabSubTot,
                        OriginLabMarkUpPercent,
                        OriginLabMarkUp,
                        OriginLabLabSubTot,
                        OutworkSubtot,
                        OutworkMarkUpPercent,
                        OutworkMarkUp,
                        OtherMatSubTotal,
                        OtherMatMarkUpPercent,
                        OtherMatMarkUp,
                        PrintingLabSubTotal,
                        PrintingOHSubTotal,
                        PrintingSubTotal,
                        PrintingMarkUpPercent,
                        PrintingMarkUp,
                        FinishingLabSubTotal,
                        FinishingOHSubTotal,
                        FinishingSubTotal,
                        FinishingMarkUpPercent,
                        FinishingMarkUp,
                        CarriageSubTotal,
                        CarriageMarkUpPercent,
                        CarriageMarkUp,
                        TotalSubTotal,
                        TotalMarkUpPercent,
                        TotalMarkUp,
                        TotalTotal,
                        ExchangeCurrency,
                        ExchangeRate,
                        ForeignTotal,
                        RunOnValue,
                        JobDescription,
                        NoOfJobDescLines,
                        PaperRunOn,
                        OriginMatRunOn,
                        OriginLabRunOn,
                        OutworkRunOn,
                        OtherMatRunOn,
                        PrintingRunOn,
                        FinishingRunOn,
                        CarriageRunOn,
                        EstimateHeaderRef,
                        UseManualCarriage,
                        WorkingLevel,
                        AgencyComPerc,
                        AgencyComValue,
                        IsRevision,
                        RevisedFromID,
                        RFQStatus,
                        RFQID,
                        DeliveryRef,
                        DeliveryContact,
                        SalutationName,
                        ComponentMarkupPerc,
                        OtherTotal,
                        PricePerRunOnLocked,
                        PricePerRunOn,
                        ForeignPricePerRunOn,
                        PricingUnits,
                        EstRefNum,
                        RunOnLocked,
                        CurrencyValueLocked,
                        SellingPriceBandID,
                        LockedCurrencyID,
                        LockedForeignTotal,
                        IsCompositeEst,
                        ComponentTotal,
                        CustomerAgencyCommPerc,
                        OtherTotalNonRounded,
                        EstDescriptionTemplateID,
                        EstDescriptionTemplateName,
                        ExcPaperFromCompPriceMatrix,
                        ExcOrigMFromCompPriceMatrix,
                        ExcOrigLFromCompPriceMatrix,
                        ExcOthermFromCompPriceMatrix,
                        ExcOutworkFromCompPriceMatrix,
                        ExcPrintingFromCompPriceMatrix,
                        ExcFinishingFromCompPriceMatrix,
                        IsFreeTypeCustomer,
                        KeepFinishedSize,
                        CreatedDateTime,
                        TaxCode,
                        CourierServiceID,
                        Courier,
                        Published,
                        UseRounding,
                        QuantityPerPaperLine,
                        CampaignNo,
                        CompanyID,
                        CreateSubJob,
                        DisplayComponentOnInput,
                        ComponentAgencyComValue,
                        UseAgencyUndersandOvers,
                        Version,
                        SecurityGroupID,
                        OpRecID,
                        FSRecID,
                        GMLink,
                        ExcludedCost,
                        StatusRef,
                        EstRequestProductID,
                        UserLimitsApplied,
                        InUse,
                        LockDate,
                        dbTimeStamp,
                        MarkupExclusionsSubTotal};
                rowMainEstimateDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMainEstimateDetailsRow);
                return rowMainEstimateDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainEstimateDetailsRow FindByID(int ID) {
                return ((MainEstimateDetailsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MainEstimateDetailsDataTable cln = ((MainEstimateDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MainEstimateDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMethodOfWorking = base.Columns["MethodOfWorking"];
                this.columnIsTemplate = base.Columns["IsTemplate"];
                this.columnEstimateDate = base.Columns["EstimateDate"];
                this.columnRequired = base.Columns["Required"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnWeight = base.Columns["Weight"];
                this.columnJobTypeDesc = base.Columns["JobTypeDesc"];
                this.columnCustomerRef = base.Columns["CustomerRef"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerAddress = base.Columns["CustomerAddress"];
                this.columnCustomerTown = base.Columns["CustomerTown"];
                this.columnCustomerCounty = base.Columns["CustomerCounty"];
                this.columnCustomerPostcode = base.Columns["CustomerPostcode"];
                this.columnCustomerCountry = base.Columns["CustomerCountry"];
                this.columnCustomerCountryOfOrigin = base.Columns["CustomerCountryOfOrigin"];
                this.columnCustomerContact = base.Columns["CustomerContact"];
                this.columnCustomerTel = base.Columns["CustomerTel"];
                this.columnCustomerFax = base.Columns["CustomerFax"];
                this.columnCustomerEmail = base.Columns["CustomerEmail"];
                this.columnCustomerUplift = base.Columns["CustomerUplift"];
                this.columnCustomerExchange = base.Columns["CustomerExchange"];
                this.columnOrdered = base.Columns["Ordered"];
                this.columnJobCreated = base.Columns["JobCreated"];
                this.columnRef1 = base.Columns["Ref1"];
                this.columnRef2 = base.Columns["Ref2"];
                this.columnRef3 = base.Columns["Ref3"];
                this.columnRef4 = base.Columns["Ref4"];
                this.columnRef5 = base.Columns["Ref5"];
                this.columnRef6 = base.Columns["Ref6"];
                this.columnRef7 = base.Columns["Ref7"];
                this.columnRef8 = base.Columns["Ref8"];
                this.columnRef9 = base.Columns["Ref9"];
                this.columnRef10 = base.Columns["Ref10"];
                this.columnJobType = base.Columns["JobType"];
                this.columnOrderExpense = base.Columns["OrderExpense"];
                this.columnEstimator = base.Columns["Estimator"];
                this.columnUpdateUserName = base.Columns["UpdateUserName"];
                this.columnLastModified = base.Columns["LastModified"];
                this.columnRunOnPer = base.Columns["RunOnPer"];
                this.columnPaperSubTot = base.Columns["PaperSubTot"];
                this.columnPaperMarkUpPercent = base.Columns["PaperMarkUpPercent"];
                this.columnPaperMarkup = base.Columns["PaperMarkup"];
                this.columnOriginMatSubTot = base.Columns["OriginMatSubTot"];
                this.columnOriginMatMarkUpPercent = base.Columns["OriginMatMarkUpPercent"];
                this.columnOriginMatMarkUp = base.Columns["OriginMatMarkUp"];
                this.columnOriginLabSubTot = base.Columns["OriginLabSubTot"];
                this.columnOriginLabMarkUpPercent = base.Columns["OriginLabMarkUpPercent"];
                this.columnOriginLabMarkUp = base.Columns["OriginLabMarkUp"];
                this.columnOriginLabLabSubTot = base.Columns["OriginLabLabSubTot"];
                this.columnOutworkSubtot = base.Columns["OutworkSubtot"];
                this.columnOutworkMarkUpPercent = base.Columns["OutworkMarkUpPercent"];
                this.columnOutworkMarkUp = base.Columns["OutworkMarkUp"];
                this.columnOtherMatSubTotal = base.Columns["OtherMatSubTotal"];
                this.columnOtherMatMarkUpPercent = base.Columns["OtherMatMarkUpPercent"];
                this.columnOtherMatMarkUp = base.Columns["OtherMatMarkUp"];
                this.columnPrintingLabSubTotal = base.Columns["PrintingLabSubTotal"];
                this.columnPrintingOHSubTotal = base.Columns["PrintingOHSubTotal"];
                this.columnPrintingSubTotal = base.Columns["PrintingSubTotal"];
                this.columnPrintingMarkUpPercent = base.Columns["PrintingMarkUpPercent"];
                this.columnPrintingMarkUp = base.Columns["PrintingMarkUp"];
                this.columnFinishingLabSubTotal = base.Columns["FinishingLabSubTotal"];
                this.columnFinishingOHSubTotal = base.Columns["FinishingOHSubTotal"];
                this.columnFinishingSubTotal = base.Columns["FinishingSubTotal"];
                this.columnFinishingMarkUpPercent = base.Columns["FinishingMarkUpPercent"];
                this.columnFinishingMarkUp = base.Columns["FinishingMarkUp"];
                this.columnCarriageSubTotal = base.Columns["CarriageSubTotal"];
                this.columnCarriageMarkUpPercent = base.Columns["CarriageMarkUpPercent"];
                this.columnCarriageMarkUp = base.Columns["CarriageMarkUp"];
                this.columnTotalSubTotal = base.Columns["TotalSubTotal"];
                this.columnTotalMarkUpPercent = base.Columns["TotalMarkUpPercent"];
                this.columnTotalMarkUp = base.Columns["TotalMarkUp"];
                this.columnTotalTotal = base.Columns["TotalTotal"];
                this.columnExchangeCurrency = base.Columns["ExchangeCurrency"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnForeignTotal = base.Columns["ForeignTotal"];
                this.columnRunOnValue = base.Columns["RunOnValue"];
                this.columnJobDescription = base.Columns["JobDescription"];
                this.columnNoOfJobDescLines = base.Columns["NoOfJobDescLines"];
                this.columnPaperRunOn = base.Columns["PaperRunOn"];
                this.columnOriginMatRunOn = base.Columns["OriginMatRunOn"];
                this.columnOriginLabRunOn = base.Columns["OriginLabRunOn"];
                this.columnOutworkRunOn = base.Columns["OutworkRunOn"];
                this.columnOtherMatRunOn = base.Columns["OtherMatRunOn"];
                this.columnPrintingRunOn = base.Columns["PrintingRunOn"];
                this.columnFinishingRunOn = base.Columns["FinishingRunOn"];
                this.columnCarriageRunOn = base.Columns["CarriageRunOn"];
                this.columnEstimateHeaderRef = base.Columns["EstimateHeaderRef"];
                this.columnUseManualCarriage = base.Columns["UseManualCarriage"];
                this.columnWorkingLevel = base.Columns["WorkingLevel"];
                this.columnAgencyComPerc = base.Columns["AgencyComPerc"];
                this.columnAgencyComValue = base.Columns["AgencyComValue"];
                this.columnIsRevision = base.Columns["IsRevision"];
                this.columnRevisedFromID = base.Columns["RevisedFromID"];
                this.columnRFQStatus = base.Columns["RFQStatus"];
                this.columnRFQID = base.Columns["RFQID"];
                this.columnDeliveryRef = base.Columns["DeliveryRef"];
                this.columnDeliveryContact = base.Columns["DeliveryContact"];
                this.columnSalutationName = base.Columns["SalutationName"];
                this.columnComponentMarkupPerc = base.Columns["ComponentMarkupPerc"];
                this.columnOtherTotal = base.Columns["OtherTotal"];
                this.columnPricePerRunOnLocked = base.Columns["PricePerRunOnLocked"];
                this.columnPricePerRunOn = base.Columns["PricePerRunOn"];
                this.columnForeignPricePerRunOn = base.Columns["ForeignPricePerRunOn"];
                this.columnPricingUnits = base.Columns["PricingUnits"];
                this.columnEstRefNum = base.Columns["EstRefNum"];
                this.columnRunOnLocked = base.Columns["RunOnLocked"];
                this.columnCurrencyValueLocked = base.Columns["CurrencyValueLocked"];
                this.columnSellingPriceBandID = base.Columns["SellingPriceBandID"];
                this.columnLockedCurrencyID = base.Columns["LockedCurrencyID"];
                this.columnLockedForeignTotal = base.Columns["LockedForeignTotal"];
                this.columnIsCompositeEst = base.Columns["IsCompositeEst"];
                this.columnComponentTotal = base.Columns["ComponentTotal"];
                this.columnCustomerAgencyCommPerc = base.Columns["CustomerAgencyCommPerc"];
                this.columnOtherTotalNonRounded = base.Columns["OtherTotalNonRounded"];
                this.columnEstDescriptionTemplateID = base.Columns["EstDescriptionTemplateID"];
                this.columnEstDescriptionTemplateName = base.Columns["EstDescriptionTemplateName"];
                this.columnExcPaperFromCompPriceMatrix = base.Columns["ExcPaperFromCompPriceMatrix"];
                this.columnExcOrigMFromCompPriceMatrix = base.Columns["ExcOrigMFromCompPriceMatrix"];
                this.columnExcOrigLFromCompPriceMatrix = base.Columns["ExcOrigLFromCompPriceMatrix"];
                this.columnExcOthermFromCompPriceMatrix = base.Columns["ExcOthermFromCompPriceMatrix"];
                this.columnExcOutworkFromCompPriceMatrix = base.Columns["ExcOutworkFromCompPriceMatrix"];
                this.columnExcPrintingFromCompPriceMatrix = base.Columns["ExcPrintingFromCompPriceMatrix"];
                this.columnExcFinishingFromCompPriceMatrix = base.Columns["ExcFinishingFromCompPriceMatrix"];
                this.columnIsFreeTypeCustomer = base.Columns["IsFreeTypeCustomer"];
                this.columnKeepFinishedSize = base.Columns["KeepFinishedSize"];
                this.columnCreatedDateTime = base.Columns["CreatedDateTime"];
                this.columnTaxCode = base.Columns["TaxCode"];
                this.columnCourierServiceID = base.Columns["CourierServiceID"];
                this.columnCourier = base.Columns["Courier"];
                this.columnPublished = base.Columns["Published"];
                this.columnUseRounding = base.Columns["UseRounding"];
                this.columnQuantityPerPaperLine = base.Columns["QuantityPerPaperLine"];
                this.columnCampaignNo = base.Columns["CampaignNo"];
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnCreateSubJob = base.Columns["CreateSubJob"];
                this.columnDisplayComponentOnInput = base.Columns["DisplayComponentOnInput"];
                this.columnComponentAgencyComValue = base.Columns["ComponentAgencyComValue"];
                this.columnUseAgencyUndersandOvers = base.Columns["UseAgencyUndersandOvers"];
                this.columnVersion = base.Columns["Version"];
                this.columnSecurityGroupID = base.Columns["SecurityGroupID"];
                this.columnOpRecID = base.Columns["OpRecID"];
                this.columnFSRecID = base.Columns["FSRecID"];
                this.columnGMLink = base.Columns["GMLink"];
                this.columnExcludedCost = base.Columns["ExcludedCost"];
                this.columnStatusRef = base.Columns["StatusRef"];
                this.columnEstRequestProductID = base.Columns["EstRequestProductID"];
                this.columnUserLimitsApplied = base.Columns["UserLimitsApplied"];
                this.columnInUse = base.Columns["InUse"];
                this.columnLockDate = base.Columns["LockDate"];
                this.columndbTimeStamp = base.Columns["dbTimeStamp"];
                this.columnMarkupExclusionsSubTotal = base.Columns["MarkupExclusionsSubTotal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMethodOfWorking = new global::System.Data.DataColumn("MethodOfWorking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodOfWorking);
                this.columnIsTemplate = new global::System.Data.DataColumn("IsTemplate", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTemplate);
                this.columnEstimateDate = new global::System.Data.DataColumn("EstimateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateDate);
                this.columnRequired = new global::System.Data.DataColumn("Required", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequired);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnJobTypeDesc = new global::System.Data.DataColumn("JobTypeDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobTypeDesc);
                this.columnCustomerRef = new global::System.Data.DataColumn("CustomerRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerRef);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerAddress = new global::System.Data.DataColumn("CustomerAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerAddress);
                this.columnCustomerTown = new global::System.Data.DataColumn("CustomerTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerTown);
                this.columnCustomerCounty = new global::System.Data.DataColumn("CustomerCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCounty);
                this.columnCustomerPostcode = new global::System.Data.DataColumn("CustomerPostcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerPostcode);
                this.columnCustomerCountry = new global::System.Data.DataColumn("CustomerCountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCountry);
                this.columnCustomerCountryOfOrigin = new global::System.Data.DataColumn("CustomerCountryOfOrigin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCountryOfOrigin);
                this.columnCustomerContact = new global::System.Data.DataColumn("CustomerContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerContact);
                this.columnCustomerTel = new global::System.Data.DataColumn("CustomerTel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerTel);
                this.columnCustomerFax = new global::System.Data.DataColumn("CustomerFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerFax);
                this.columnCustomerEmail = new global::System.Data.DataColumn("CustomerEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerEmail);
                this.columnCustomerUplift = new global::System.Data.DataColumn("CustomerUplift", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerUplift);
                this.columnCustomerExchange = new global::System.Data.DataColumn("CustomerExchange", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerExchange);
                this.columnOrdered = new global::System.Data.DataColumn("Ordered", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrdered);
                this.columnJobCreated = new global::System.Data.DataColumn("JobCreated", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCreated);
                this.columnRef1 = new global::System.Data.DataColumn("Ref1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef1);
                this.columnRef2 = new global::System.Data.DataColumn("Ref2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef2);
                this.columnRef3 = new global::System.Data.DataColumn("Ref3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef3);
                this.columnRef4 = new global::System.Data.DataColumn("Ref4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef4);
                this.columnRef5 = new global::System.Data.DataColumn("Ref5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef5);
                this.columnRef6 = new global::System.Data.DataColumn("Ref6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef6);
                this.columnRef7 = new global::System.Data.DataColumn("Ref7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef7);
                this.columnRef8 = new global::System.Data.DataColumn("Ref8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef8);
                this.columnRef9 = new global::System.Data.DataColumn("Ref9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef9);
                this.columnRef10 = new global::System.Data.DataColumn("Ref10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef10);
                this.columnJobType = new global::System.Data.DataColumn("JobType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobType);
                this.columnOrderExpense = new global::System.Data.DataColumn("OrderExpense", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderExpense);
                this.columnEstimator = new global::System.Data.DataColumn("Estimator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimator);
                this.columnUpdateUserName = new global::System.Data.DataColumn("UpdateUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUserName);
                this.columnLastModified = new global::System.Data.DataColumn("LastModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastModified);
                this.columnRunOnPer = new global::System.Data.DataColumn("RunOnPer", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunOnPer);
                this.columnPaperSubTot = new global::System.Data.DataColumn("PaperSubTot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaperSubTot);
                this.columnPaperMarkUpPercent = new global::System.Data.DataColumn("PaperMarkUpPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaperMarkUpPercent);
                this.columnPaperMarkup = new global::System.Data.DataColumn("PaperMarkup", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaperMarkup);
                this.columnOriginMatSubTot = new global::System.Data.DataColumn("OriginMatSubTot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginMatSubTot);
                this.columnOriginMatMarkUpPercent = new global::System.Data.DataColumn("OriginMatMarkUpPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginMatMarkUpPercent);
                this.columnOriginMatMarkUp = new global::System.Data.DataColumn("OriginMatMarkUp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginMatMarkUp);
                this.columnOriginLabSubTot = new global::System.Data.DataColumn("OriginLabSubTot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginLabSubTot);
                this.columnOriginLabMarkUpPercent = new global::System.Data.DataColumn("OriginLabMarkUpPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginLabMarkUpPercent);
                this.columnOriginLabMarkUp = new global::System.Data.DataColumn("OriginLabMarkUp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginLabMarkUp);
                this.columnOriginLabLabSubTot = new global::System.Data.DataColumn("OriginLabLabSubTot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginLabLabSubTot);
                this.columnOutworkSubtot = new global::System.Data.DataColumn("OutworkSubtot", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutworkSubtot);
                this.columnOutworkMarkUpPercent = new global::System.Data.DataColumn("OutworkMarkUpPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutworkMarkUpPercent);
                this.columnOutworkMarkUp = new global::System.Data.DataColumn("OutworkMarkUp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutworkMarkUp);
                this.columnOtherMatSubTotal = new global::System.Data.DataColumn("OtherMatSubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherMatSubTotal);
                this.columnOtherMatMarkUpPercent = new global::System.Data.DataColumn("OtherMatMarkUpPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherMatMarkUpPercent);
                this.columnOtherMatMarkUp = new global::System.Data.DataColumn("OtherMatMarkUp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherMatMarkUp);
                this.columnPrintingLabSubTotal = new global::System.Data.DataColumn("PrintingLabSubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintingLabSubTotal);
                this.columnPrintingOHSubTotal = new global::System.Data.DataColumn("PrintingOHSubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintingOHSubTotal);
                this.columnPrintingSubTotal = new global::System.Data.DataColumn("PrintingSubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintingSubTotal);
                this.columnPrintingMarkUpPercent = new global::System.Data.DataColumn("PrintingMarkUpPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintingMarkUpPercent);
                this.columnPrintingMarkUp = new global::System.Data.DataColumn("PrintingMarkUp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintingMarkUp);
                this.columnFinishingLabSubTotal = new global::System.Data.DataColumn("FinishingLabSubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishingLabSubTotal);
                this.columnFinishingOHSubTotal = new global::System.Data.DataColumn("FinishingOHSubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishingOHSubTotal);
                this.columnFinishingSubTotal = new global::System.Data.DataColumn("FinishingSubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishingSubTotal);
                this.columnFinishingMarkUpPercent = new global::System.Data.DataColumn("FinishingMarkUpPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishingMarkUpPercent);
                this.columnFinishingMarkUp = new global::System.Data.DataColumn("FinishingMarkUp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishingMarkUp);
                this.columnCarriageSubTotal = new global::System.Data.DataColumn("CarriageSubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarriageSubTotal);
                this.columnCarriageMarkUpPercent = new global::System.Data.DataColumn("CarriageMarkUpPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarriageMarkUpPercent);
                this.columnCarriageMarkUp = new global::System.Data.DataColumn("CarriageMarkUp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarriageMarkUp);
                this.columnTotalSubTotal = new global::System.Data.DataColumn("TotalSubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSubTotal);
                this.columnTotalMarkUpPercent = new global::System.Data.DataColumn("TotalMarkUpPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMarkUpPercent);
                this.columnTotalMarkUp = new global::System.Data.DataColumn("TotalMarkUp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMarkUp);
                this.columnTotalTotal = new global::System.Data.DataColumn("TotalTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTotal);
                this.columnExchangeCurrency = new global::System.Data.DataColumn("ExchangeCurrency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeCurrency);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnForeignTotal = new global::System.Data.DataColumn("ForeignTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignTotal);
                this.columnRunOnValue = new global::System.Data.DataColumn("RunOnValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunOnValue);
                this.columnJobDescription = new global::System.Data.DataColumn("JobDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobDescription);
                this.columnNoOfJobDescLines = new global::System.Data.DataColumn("NoOfJobDescLines", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfJobDescLines);
                this.columnPaperRunOn = new global::System.Data.DataColumn("PaperRunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaperRunOn);
                this.columnOriginMatRunOn = new global::System.Data.DataColumn("OriginMatRunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginMatRunOn);
                this.columnOriginLabRunOn = new global::System.Data.DataColumn("OriginLabRunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginLabRunOn);
                this.columnOutworkRunOn = new global::System.Data.DataColumn("OutworkRunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutworkRunOn);
                this.columnOtherMatRunOn = new global::System.Data.DataColumn("OtherMatRunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherMatRunOn);
                this.columnPrintingRunOn = new global::System.Data.DataColumn("PrintingRunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintingRunOn);
                this.columnFinishingRunOn = new global::System.Data.DataColumn("FinishingRunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishingRunOn);
                this.columnCarriageRunOn = new global::System.Data.DataColumn("CarriageRunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarriageRunOn);
                this.columnEstimateHeaderRef = new global::System.Data.DataColumn("EstimateHeaderRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateHeaderRef);
                this.columnUseManualCarriage = new global::System.Data.DataColumn("UseManualCarriage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseManualCarriage);
                this.columnWorkingLevel = new global::System.Data.DataColumn("WorkingLevel", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkingLevel);
                this.columnAgencyComPerc = new global::System.Data.DataColumn("AgencyComPerc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgencyComPerc);
                this.columnAgencyComValue = new global::System.Data.DataColumn("AgencyComValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgencyComValue);
                this.columnIsRevision = new global::System.Data.DataColumn("IsRevision", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRevision);
                this.columnRevisedFromID = new global::System.Data.DataColumn("RevisedFromID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRevisedFromID);
                this.columnRFQStatus = new global::System.Data.DataColumn("RFQStatus", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFQStatus);
                this.columnRFQID = new global::System.Data.DataColumn("RFQID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFQID);
                this.columnDeliveryRef = new global::System.Data.DataColumn("DeliveryRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryRef);
                this.columnDeliveryContact = new global::System.Data.DataColumn("DeliveryContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryContact);
                this.columnSalutationName = new global::System.Data.DataColumn("SalutationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalutationName);
                this.columnComponentMarkupPerc = new global::System.Data.DataColumn("ComponentMarkupPerc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComponentMarkupPerc);
                this.columnOtherTotal = new global::System.Data.DataColumn("OtherTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTotal);
                this.columnPricePerRunOnLocked = new global::System.Data.DataColumn("PricePerRunOnLocked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPricePerRunOnLocked);
                this.columnPricePerRunOn = new global::System.Data.DataColumn("PricePerRunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPricePerRunOn);
                this.columnForeignPricePerRunOn = new global::System.Data.DataColumn("ForeignPricePerRunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignPricePerRunOn);
                this.columnPricingUnits = new global::System.Data.DataColumn("PricingUnits", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPricingUnits);
                this.columnEstRefNum = new global::System.Data.DataColumn("EstRefNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstRefNum);
                this.columnRunOnLocked = new global::System.Data.DataColumn("RunOnLocked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunOnLocked);
                this.columnCurrencyValueLocked = new global::System.Data.DataColumn("CurrencyValueLocked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyValueLocked);
                this.columnSellingPriceBandID = new global::System.Data.DataColumn("SellingPriceBandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingPriceBandID);
                this.columnLockedCurrencyID = new global::System.Data.DataColumn("LockedCurrencyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockedCurrencyID);
                this.columnLockedForeignTotal = new global::System.Data.DataColumn("LockedForeignTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockedForeignTotal);
                this.columnIsCompositeEst = new global::System.Data.DataColumn("IsCompositeEst", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCompositeEst);
                this.columnComponentTotal = new global::System.Data.DataColumn("ComponentTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComponentTotal);
                this.columnCustomerAgencyCommPerc = new global::System.Data.DataColumn("CustomerAgencyCommPerc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerAgencyCommPerc);
                this.columnOtherTotalNonRounded = new global::System.Data.DataColumn("OtherTotalNonRounded", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTotalNonRounded);
                this.columnEstDescriptionTemplateID = new global::System.Data.DataColumn("EstDescriptionTemplateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstDescriptionTemplateID);
                this.columnEstDescriptionTemplateName = new global::System.Data.DataColumn("EstDescriptionTemplateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstDescriptionTemplateName);
                this.columnExcPaperFromCompPriceMatrix = new global::System.Data.DataColumn("ExcPaperFromCompPriceMatrix", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcPaperFromCompPriceMatrix);
                this.columnExcOrigMFromCompPriceMatrix = new global::System.Data.DataColumn("ExcOrigMFromCompPriceMatrix", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcOrigMFromCompPriceMatrix);
                this.columnExcOrigLFromCompPriceMatrix = new global::System.Data.DataColumn("ExcOrigLFromCompPriceMatrix", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcOrigLFromCompPriceMatrix);
                this.columnExcOthermFromCompPriceMatrix = new global::System.Data.DataColumn("ExcOthermFromCompPriceMatrix", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcOthermFromCompPriceMatrix);
                this.columnExcOutworkFromCompPriceMatrix = new global::System.Data.DataColumn("ExcOutworkFromCompPriceMatrix", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcOutworkFromCompPriceMatrix);
                this.columnExcPrintingFromCompPriceMatrix = new global::System.Data.DataColumn("ExcPrintingFromCompPriceMatrix", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcPrintingFromCompPriceMatrix);
                this.columnExcFinishingFromCompPriceMatrix = new global::System.Data.DataColumn("ExcFinishingFromCompPriceMatrix", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcFinishingFromCompPriceMatrix);
                this.columnIsFreeTypeCustomer = new global::System.Data.DataColumn("IsFreeTypeCustomer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFreeTypeCustomer);
                this.columnKeepFinishedSize = new global::System.Data.DataColumn("KeepFinishedSize", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeepFinishedSize);
                this.columnCreatedDateTime = new global::System.Data.DataColumn("CreatedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDateTime);
                this.columnTaxCode = new global::System.Data.DataColumn("TaxCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxCode);
                this.columnCourierServiceID = new global::System.Data.DataColumn("CourierServiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourierServiceID);
                this.columnCourier = new global::System.Data.DataColumn("Courier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourier);
                this.columnPublished = new global::System.Data.DataColumn("Published", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublished);
                this.columnUseRounding = new global::System.Data.DataColumn("UseRounding", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseRounding);
                this.columnQuantityPerPaperLine = new global::System.Data.DataColumn("QuantityPerPaperLine", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityPerPaperLine);
                this.columnCampaignNo = new global::System.Data.DataColumn("CampaignNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCampaignNo);
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnCreateSubJob = new global::System.Data.DataColumn("CreateSubJob", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateSubJob);
                this.columnDisplayComponentOnInput = new global::System.Data.DataColumn("DisplayComponentOnInput", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayComponentOnInput);
                this.columnComponentAgencyComValue = new global::System.Data.DataColumn("ComponentAgencyComValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComponentAgencyComValue);
                this.columnUseAgencyUndersandOvers = new global::System.Data.DataColumn("UseAgencyUndersandOvers", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseAgencyUndersandOvers);
                this.columnVersion = new global::System.Data.DataColumn("Version", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersion);
                this.columnSecurityGroupID = new global::System.Data.DataColumn("SecurityGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecurityGroupID);
                this.columnOpRecID = new global::System.Data.DataColumn("OpRecID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpRecID);
                this.columnFSRecID = new global::System.Data.DataColumn("FSRecID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSRecID);
                this.columnGMLink = new global::System.Data.DataColumn("GMLink", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGMLink);
                this.columnExcludedCost = new global::System.Data.DataColumn("ExcludedCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcludedCost);
                this.columnStatusRef = new global::System.Data.DataColumn("StatusRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusRef);
                this.columnEstRequestProductID = new global::System.Data.DataColumn("EstRequestProductID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstRequestProductID);
                this.columnUserLimitsApplied = new global::System.Data.DataColumn("UserLimitsApplied", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserLimitsApplied);
                this.columnInUse = new global::System.Data.DataColumn("InUse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInUse);
                this.columnLockDate = new global::System.Data.DataColumn("LockDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockDate);
                this.columndbTimeStamp = new global::System.Data.DataColumn("dbTimeStamp", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndbTimeStamp);
                this.columnMarkupExclusionsSubTotal = new global::System.Data.DataColumn("MarkupExclusionsSubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkupExclusionsSubTotal);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnMethodOfWorking.MaxLength = 2147483647;
                this.columnJobTypeDesc.MaxLength = 64;
                this.columnCustomerRef.MaxLength = 32;
                this.columnCustomerName.MaxLength = 64;
                this.columnCustomerAddress.MaxLength = 255;
                this.columnCustomerTown.MaxLength = 64;
                this.columnCustomerCounty.MaxLength = 64;
                this.columnCustomerPostcode.MaxLength = 10;
                this.columnCustomerCountry.MaxLength = 64;
                this.columnCustomerCountryOfOrigin.MaxLength = 2;
                this.columnCustomerContact.MaxLength = 64;
                this.columnCustomerTel.MaxLength = 32;
                this.columnCustomerFax.MaxLength = 32;
                this.columnCustomerEmail.MaxLength = 255;
                this.columnJobCreated.MaxLength = 32;
                this.columnRef1.MaxLength = 32;
                this.columnRef2.MaxLength = 32;
                this.columnRef3.MaxLength = 32;
                this.columnRef4.MaxLength = 32;
                this.columnRef5.MaxLength = 32;
                this.columnRef6.MaxLength = 32;
                this.columnRef7.MaxLength = 32;
                this.columnRef8.MaxLength = 32;
                this.columnRef9.MaxLength = 32;
                this.columnRef10.MaxLength = 32;
                this.columnJobType.MaxLength = 32;
                this.columnEstimator.MaxLength = 64;
                this.columnUpdateUserName.MaxLength = 64;
                this.columnJobDescription.MaxLength = 255;
                this.columnEstimateHeaderRef.MaxLength = 32;
                this.columnUseManualCarriage.AllowDBNull = false;
                this.columnIsRevision.AllowDBNull = false;
                this.columnDeliveryRef.MaxLength = 32;
                this.columnDeliveryContact.MaxLength = 64;
                this.columnSalutationName.MaxLength = 64;
                this.columnPricePerRunOnLocked.AllowDBNull = false;
                this.columnForeignPricePerRunOn.AllowDBNull = false;
                this.columnRunOnLocked.AllowDBNull = false;
                this.columnCurrencyValueLocked.AllowDBNull = false;
                this.columnEstDescriptionTemplateName.MaxLength = 32;
                this.columnExcPaperFromCompPriceMatrix.AllowDBNull = false;
                this.columnExcOrigMFromCompPriceMatrix.AllowDBNull = false;
                this.columnExcOrigLFromCompPriceMatrix.AllowDBNull = false;
                this.columnExcOthermFromCompPriceMatrix.AllowDBNull = false;
                this.columnExcOutworkFromCompPriceMatrix.AllowDBNull = false;
                this.columnExcPrintingFromCompPriceMatrix.AllowDBNull = false;
                this.columnExcFinishingFromCompPriceMatrix.AllowDBNull = false;
                this.columnIsFreeTypeCustomer.AllowDBNull = false;
                this.columnKeepFinishedSize.AllowDBNull = false;
                this.columnTaxCode.MaxLength = 2;
                this.columnCourier.MaxLength = 32;
                this.columnPublished.AllowDBNull = false;
                this.columnUseRounding.AllowDBNull = false;
                this.columnQuantityPerPaperLine.AllowDBNull = false;
                this.columnCampaignNo.MaxLength = 32;
                this.columnCompanyID.AllowDBNull = false;
                this.columnCreateSubJob.AllowDBNull = false;
                this.columnDisplayComponentOnInput.AllowDBNull = false;
                this.columnUseAgencyUndersandOvers.AllowDBNull = false;
                this.columnVersion.AllowDBNull = false;
                this.columnOpRecID.MaxLength = 15;
                this.columnFSRecID.MaxLength = 15;
                this.columnStatusRef.MaxLength = 32;
                this.columnEstRequestProductID.AllowDBNull = false;
                this.columnUserLimitsApplied.AllowDBNull = false;
                this.columnInUse.AllowDBNull = false;
                this.columndbTimeStamp.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainEstimateDetailsRow NewMainEstimateDetailsRow() {
                return ((MainEstimateDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MainEstimateDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MainEstimateDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MainEstimateDetailsRowChanged != null)) {
                    this.MainEstimateDetailsRowChanged(this, new MainEstimateDetailsRowChangeEvent(((MainEstimateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MainEstimateDetailsRowChanging != null)) {
                    this.MainEstimateDetailsRowChanging(this, new MainEstimateDetailsRowChangeEvent(((MainEstimateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MainEstimateDetailsRowDeleted != null)) {
                    this.MainEstimateDetailsRowDeleted(this, new MainEstimateDetailsRowChangeEvent(((MainEstimateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MainEstimateDetailsRowDeleting != null)) {
                    this.MainEstimateDetailsRowDeleting(this, new MainEstimateDetailsRowChangeEvent(((MainEstimateDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMainEstimateDetailsRow(MainEstimateDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ThardataDataSet ds = new ThardataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MainEstimateDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MainJobDetailsDataTable : global::System.Data.TypedTableBase<MainJobDetailsRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMethodOfWorking;
            
            private global::System.Data.DataColumn columnWorksPrinted;
            
            private global::System.Data.DataColumn columnMultipleProducts;
            
            private global::System.Data.DataColumn columnJobNo;
            
            private global::System.Data.DataColumn columnDatedb;
            
            private global::System.Data.DataColumn columnInvoiceID;
            
            private global::System.Data.DataColumn columnInvoiceCustomerCode;
            
            private global::System.Data.DataColumn columnInvoiceCustomerName;
            
            private global::System.Data.DataColumn columnInvoiceAddress;
            
            private global::System.Data.DataColumn columnInvoiceTown;
            
            private global::System.Data.DataColumn columnInvoiceCounty;
            
            private global::System.Data.DataColumn columnInvoicePostcode;
            
            private global::System.Data.DataColumn columnInvoiceCountry;
            
            private global::System.Data.DataColumn columnInvoiceContact;
            
            private global::System.Data.DataColumn columnInvoiceTel;
            
            private global::System.Data.DataColumn columnInvoiceFax;
            
            private global::System.Data.DataColumn columnInvoiceExchange;
            
            private global::System.Data.DataColumn columnDeliveryCustomerCode;
            
            private global::System.Data.DataColumn columnDeliveryCustomerName;
            
            private global::System.Data.DataColumn columnDeliveryAddress;
            
            private global::System.Data.DataColumn columnDeliveryTown;
            
            private global::System.Data.DataColumn columnDeliveryCounty;
            
            private global::System.Data.DataColumn columnDeliveryPostcode;
            
            private global::System.Data.DataColumn columnDeliveryCountry;
            
            private global::System.Data.DataColumn columnDeliveryContact;
            
            private global::System.Data.DataColumn columnDeliveryTel;
            
            private global::System.Data.DataColumn columnDeliveryFax;
            
            private global::System.Data.DataColumn columnPrevJob;
            
            private global::System.Data.DataColumn columnOrderNo;
            
            private global::System.Data.DataColumn columnQuantityOrdered;
            
            private global::System.Data.DataColumn columnQuantityDelivered;
            
            private global::System.Data.DataColumn columnQuantityInStock;
            
            private global::System.Data.DataColumn columnStockCode;
            
            private global::System.Data.DataColumn columnStockSize;
            
            private global::System.Data.DataColumn columnRef1;
            
            private global::System.Data.DataColumn columnRef2;
            
            private global::System.Data.DataColumn columnRef3;
            
            private global::System.Data.DataColumn columnRef4;
            
            private global::System.Data.DataColumn columnRef5;
            
            private global::System.Data.DataColumn columnRef6;
            
            private global::System.Data.DataColumn columnRef7;
            
            private global::System.Data.DataColumn columnRef8;
            
            private global::System.Data.DataColumn columnRef9;
            
            private global::System.Data.DataColumn columnRef10;
            
            private global::System.Data.DataColumn columnJobType;
            
            private global::System.Data.DataColumn columnVatCode;
            
            private global::System.Data.DataColumn columnPriceEst;
            
            private global::System.Data.DataColumn columnProfitEst;
            
            private global::System.Data.DataColumn columnProfitAct;
            
            private global::System.Data.DataColumn columnJobDesc;
            
            private global::System.Data.DataColumn columnOurOrderNo;
            
            private global::System.Data.DataColumn columnLastOpDate;
            
            private global::System.Data.DataColumn columnLastOpCode;
            
            private global::System.Data.DataColumn columnLastOpDesc;
            
            private global::System.Data.DataColumn columnJobCompleted;
            
            private global::System.Data.DataColumn columnJobCompletionDate;
            
            private global::System.Data.DataColumn columnEstimateHeaderRef;
            
            private global::System.Data.DataColumn columnEstimateID;
            
            private global::System.Data.DataColumn columnJobTypeDesc;
            
            private global::System.Data.DataColumn columnJobDept;
            
            private global::System.Data.DataColumn columnOrderLineID;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnCostCentre;
            
            private global::System.Data.DataColumn columnDepartment;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnQuantityInvoiced;
            
            private global::System.Data.DataColumn columnQuantityProduced;
            
            private global::System.Data.DataColumn columnInvoiceCompleted;
            
            private global::System.Data.DataColumn columnJobCancelled;
            
            private global::System.Data.DataColumn columnEstimator;
            
            private global::System.Data.DataColumn columnRequiredTime;
            
            private global::System.Data.DataColumn columnCustomerRef2;
            
            private global::System.Data.DataColumn columnCreateUserName;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnUpdateUserName;
            
            private global::System.Data.DataColumn columnUpdateDateTime;
            
            private global::System.Data.DataColumn columnOverHeadPercent;
            
            private global::System.Data.DataColumn columnIssueNumber;
            
            private global::System.Data.DataColumn columnDerived;
            
            private global::System.Data.DataColumn columnFinishedProductionDate;
            
            private global::System.Data.DataColumn columnPostingCode;
            
            private global::System.Data.DataColumn columnPostingContact;
            
            private global::System.Data.DataColumn columnOriginalEstimateHeaderRef;
            
            private global::System.Data.DataColumn columnOriginalEstimateID;
            
            private global::System.Data.DataColumn columnIsAltered;
            
            private global::System.Data.DataColumn columnOriginalEstimateQuantity;
            
            private global::System.Data.DataColumn columnParentJob;
            
            private global::System.Data.DataColumn columnOutOnProof;
            
            private global::System.Data.DataColumn columnProofSentDateTime;
            
            private global::System.Data.DataColumn columnProofReturnedDateTime;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnSSDModeOfTransport;
            
            private global::System.Data.DataColumn columnSSDNatureOfTransaction;
            
            private global::System.Data.DataColumn columnSSDDeliveryTerms;
            
            private global::System.Data.DataColumn columnCurrency;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnForeignTotal;
            
            private global::System.Data.DataColumn columnRoleInSeries;
            
            private global::System.Data.DataColumn columnSentToJDF;
            
            private global::System.Data.DataColumn columnInvoiceCountryOfOrigin;
            
            private global::System.Data.DataColumn columnDeliveryCountryOfOrigin;
            
            private global::System.Data.DataColumn columnIsInvoiced;
            
            private global::System.Data.DataColumn columnAgencyComPerc;
            
            private global::System.Data.DataColumn columnJDFStatus;
            
            private global::System.Data.DataColumn columnIsProductionJob;
            
            private global::System.Data.DataColumn columnOriginationOfJob;
            
            private global::System.Data.DataColumn columnJDFRef;
            
            private global::System.Data.DataColumn columnNewJDFAcknowledged;
            
            private global::System.Data.DataColumn columnMilestoneGroup;
            
            private global::System.Data.DataColumn columnMethodOfWorkingModified;
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnJobGanged;
            
            private global::System.Data.DataColumn columnDateModified;
            
            private global::System.Data.DataColumn columnModifiedByUserID;
            
            private global::System.Data.DataColumn columnSecurityGroupID;
            
            private global::System.Data.DataColumn columnLastMilestone;
            
            private global::System.Data.DataColumn columnIsAssemblyJob;
            
            private global::System.Data.DataColumn columnDespatchDate;
            
            private global::System.Data.DataColumn columnBOMRevision;
            
            private global::System.Data.DataColumn columndbTimeStamp;
            
            private global::System.Data.DataColumn columnSalesTaxCodeID;
            
            private global::System.Data.DataColumn columnSalesTaxItemID;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnCreatedStockType;
            
            private global::System.Data.DataColumn columnProductTypeID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainJobDetailsDataTable() {
                this.TableName = "MainJobDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MainJobDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MainJobDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MethodOfWorkingColumn {
                get {
                    return this.columnMethodOfWorking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorksPrintedColumn {
                get {
                    return this.columnWorksPrinted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MultipleProductsColumn {
                get {
                    return this.columnMultipleProducts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobNoColumn {
                get {
                    return this.columnJobNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatedbColumn {
                get {
                    return this.columnDatedb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceIDColumn {
                get {
                    return this.columnInvoiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceCustomerCodeColumn {
                get {
                    return this.columnInvoiceCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceCustomerNameColumn {
                get {
                    return this.columnInvoiceCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceAddressColumn {
                get {
                    return this.columnInvoiceAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceTownColumn {
                get {
                    return this.columnInvoiceTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceCountyColumn {
                get {
                    return this.columnInvoiceCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoicePostcodeColumn {
                get {
                    return this.columnInvoicePostcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceCountryColumn {
                get {
                    return this.columnInvoiceCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceContactColumn {
                get {
                    return this.columnInvoiceContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceTelColumn {
                get {
                    return this.columnInvoiceTel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceFaxColumn {
                get {
                    return this.columnInvoiceFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceExchangeColumn {
                get {
                    return this.columnInvoiceExchange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryCustomerCodeColumn {
                get {
                    return this.columnDeliveryCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryCustomerNameColumn {
                get {
                    return this.columnDeliveryCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryAddressColumn {
                get {
                    return this.columnDeliveryAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryTownColumn {
                get {
                    return this.columnDeliveryTown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryCountyColumn {
                get {
                    return this.columnDeliveryCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryPostcodeColumn {
                get {
                    return this.columnDeliveryPostcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryCountryColumn {
                get {
                    return this.columnDeliveryCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryContactColumn {
                get {
                    return this.columnDeliveryContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryTelColumn {
                get {
                    return this.columnDeliveryTel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryFaxColumn {
                get {
                    return this.columnDeliveryFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrevJobColumn {
                get {
                    return this.columnPrevJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderNoColumn {
                get {
                    return this.columnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityOrderedColumn {
                get {
                    return this.columnQuantityOrdered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityDeliveredColumn {
                get {
                    return this.columnQuantityDelivered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityInStockColumn {
                get {
                    return this.columnQuantityInStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockCodeColumn {
                get {
                    return this.columnStockCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockSizeColumn {
                get {
                    return this.columnStockSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref1Column {
                get {
                    return this.columnRef1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref2Column {
                get {
                    return this.columnRef2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref3Column {
                get {
                    return this.columnRef3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref4Column {
                get {
                    return this.columnRef4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref5Column {
                get {
                    return this.columnRef5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref6Column {
                get {
                    return this.columnRef6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref7Column {
                get {
                    return this.columnRef7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref8Column {
                get {
                    return this.columnRef8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref9Column {
                get {
                    return this.columnRef9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref10Column {
                get {
                    return this.columnRef10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobTypeColumn {
                get {
                    return this.columnJobType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VatCodeColumn {
                get {
                    return this.columnVatCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceEstColumn {
                get {
                    return this.columnPriceEst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProfitEstColumn {
                get {
                    return this.columnProfitEst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProfitActColumn {
                get {
                    return this.columnProfitAct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobDescColumn {
                get {
                    return this.columnJobDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OurOrderNoColumn {
                get {
                    return this.columnOurOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastOpDateColumn {
                get {
                    return this.columnLastOpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastOpCodeColumn {
                get {
                    return this.columnLastOpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastOpDescColumn {
                get {
                    return this.columnLastOpDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobCompletedColumn {
                get {
                    return this.columnJobCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobCompletionDateColumn {
                get {
                    return this.columnJobCompletionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimateHeaderRefColumn {
                get {
                    return this.columnEstimateHeaderRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimateIDColumn {
                get {
                    return this.columnEstimateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobTypeDescColumn {
                get {
                    return this.columnJobTypeDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobDeptColumn {
                get {
                    return this.columnJobDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderLineIDColumn {
                get {
                    return this.columnOrderLineID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostCentreColumn {
                get {
                    return this.columnCostCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityInvoicedColumn {
                get {
                    return this.columnQuantityInvoiced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityProducedColumn {
                get {
                    return this.columnQuantityProduced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceCompletedColumn {
                get {
                    return this.columnInvoiceCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobCancelledColumn {
                get {
                    return this.columnJobCancelled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimatorColumn {
                get {
                    return this.columnEstimator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredTimeColumn {
                get {
                    return this.columnRequiredTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerRef2Column {
                get {
                    return this.columnCustomerRef2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateUserNameColumn {
                get {
                    return this.columnCreateUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserNameColumn {
                get {
                    return this.columnUpdateUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDateTimeColumn {
                get {
                    return this.columnUpdateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverHeadPercentColumn {
                get {
                    return this.columnOverHeadPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IssueNumberColumn {
                get {
                    return this.columnIssueNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DerivedColumn {
                get {
                    return this.columnDerived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinishedProductionDateColumn {
                get {
                    return this.columnFinishedProductionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostingCodeColumn {
                get {
                    return this.columnPostingCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostingContactColumn {
                get {
                    return this.columnPostingContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalEstimateHeaderRefColumn {
                get {
                    return this.columnOriginalEstimateHeaderRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalEstimateIDColumn {
                get {
                    return this.columnOriginalEstimateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsAlteredColumn {
                get {
                    return this.columnIsAltered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalEstimateQuantityColumn {
                get {
                    return this.columnOriginalEstimateQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentJobColumn {
                get {
                    return this.columnParentJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutOnProofColumn {
                get {
                    return this.columnOutOnProof;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProofSentDateTimeColumn {
                get {
                    return this.columnProofSentDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProofReturnedDateTimeColumn {
                get {
                    return this.columnProofReturnedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSDModeOfTransportColumn {
                get {
                    return this.columnSSDModeOfTransport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSDNatureOfTransactionColumn {
                get {
                    return this.columnSSDNatureOfTransaction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSDDeliveryTermsColumn {
                get {
                    return this.columnSSDDeliveryTerms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignTotalColumn {
                get {
                    return this.columnForeignTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RoleInSeriesColumn {
                get {
                    return this.columnRoleInSeries;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SentToJDFColumn {
                get {
                    return this.columnSentToJDF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceCountryOfOriginColumn {
                get {
                    return this.columnInvoiceCountryOfOrigin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryCountryOfOriginColumn {
                get {
                    return this.columnDeliveryCountryOfOrigin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsInvoicedColumn {
                get {
                    return this.columnIsInvoiced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgencyComPercColumn {
                get {
                    return this.columnAgencyComPerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JDFStatusColumn {
                get {
                    return this.columnJDFStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsProductionJobColumn {
                get {
                    return this.columnIsProductionJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginationOfJobColumn {
                get {
                    return this.columnOriginationOfJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JDFRefColumn {
                get {
                    return this.columnJDFRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NewJDFAcknowledgedColumn {
                get {
                    return this.columnNewJDFAcknowledged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MilestoneGroupColumn {
                get {
                    return this.columnMilestoneGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MethodOfWorkingModifiedColumn {
                get {
                    return this.columnMethodOfWorkingModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobGangedColumn {
                get {
                    return this.columnJobGanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifiedColumn {
                get {
                    return this.columnDateModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedByUserIDColumn {
                get {
                    return this.columnModifiedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecurityGroupIDColumn {
                get {
                    return this.columnSecurityGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastMilestoneColumn {
                get {
                    return this.columnLastMilestone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsAssemblyJobColumn {
                get {
                    return this.columnIsAssemblyJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DespatchDateColumn {
                get {
                    return this.columnDespatchDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BOMRevisionColumn {
                get {
                    return this.columnBOMRevision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dbTimeStampColumn {
                get {
                    return this.columndbTimeStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTaxCodeIDColumn {
                get {
                    return this.columnSalesTaxCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTaxItemIDColumn {
                get {
                    return this.columnSalesTaxItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedStockTypeColumn {
                get {
                    return this.columnCreatedStockType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTypeIDColumn {
                get {
                    return this.columnProductTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainJobDetailsRow this[int index] {
                get {
                    return ((MainJobDetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MainJobDetailsRowChangeEventHandler MainJobDetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MainJobDetailsRowChangeEventHandler MainJobDetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MainJobDetailsRowChangeEventHandler MainJobDetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MainJobDetailsRowChangeEventHandler MainJobDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMainJobDetailsRow(MainJobDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainJobDetailsRow AddMainJobDetailsRow(
                        string MethodOfWorking, 
                        byte WorksPrinted, 
                        bool MultipleProducts, 
                        string JobNo, 
                        System.DateTime Datedb, 
                        int InvoiceID, 
                        string InvoiceCustomerCode, 
                        string InvoiceCustomerName, 
                        string InvoiceAddress, 
                        string InvoiceTown, 
                        string InvoiceCounty, 
                        string InvoicePostcode, 
                        string InvoiceCountry, 
                        string InvoiceContact, 
                        string InvoiceTel, 
                        string InvoiceFax, 
                        short InvoiceExchange, 
                        string DeliveryCustomerCode, 
                        string DeliveryCustomerName, 
                        string DeliveryAddress, 
                        string DeliveryTown, 
                        string DeliveryCounty, 
                        string DeliveryPostcode, 
                        string DeliveryCountry, 
                        string DeliveryContact, 
                        string DeliveryTel, 
                        string DeliveryFax, 
                        string PrevJob, 
                        string OrderNo, 
                        double QuantityOrdered, 
                        double QuantityDelivered, 
                        double QuantityInStock, 
                        string StockCode, 
                        string StockSize, 
                        string Ref1, 
                        string Ref2, 
                        string Ref3, 
                        string Ref4, 
                        string Ref5, 
                        string Ref6, 
                        string Ref7, 
                        string Ref8, 
                        string Ref9, 
                        string Ref10, 
                        string JobType, 
                        string VatCode, 
                        double PriceEst, 
                        double ProfitEst, 
                        double ProfitAct, 
                        string JobDesc, 
                        string OurOrderNo, 
                        System.DateTime LastOpDate, 
                        string LastOpCode, 
                        string LastOpDesc, 
                        bool JobCompleted, 
                        System.DateTime JobCompletionDate, 
                        string EstimateHeaderRef, 
                        int EstimateID, 
                        string JobTypeDesc, 
                        string JobDept, 
                        int OrderLineID, 
                        string Nominal, 
                        string CostCentre, 
                        string Department, 
                        double UnitPrice, 
                        double QuantityInvoiced, 
                        double QuantityProduced, 
                        bool InvoiceCompleted, 
                        bool JobCancelled, 
                        string Estimator, 
                        System.DateTime RequiredTime, 
                        string CustomerRef2, 
                        string CreateUserName, 
                        System.DateTime CreateDateTime, 
                        string UpdateUserName, 
                        System.DateTime UpdateDateTime, 
                        double OverHeadPercent, 
                        int IssueNumber, 
                        byte Derived, 
                        System.DateTime FinishedProductionDate, 
                        string PostingCode, 
                        string PostingContact, 
                        string OriginalEstimateHeaderRef, 
                        int OriginalEstimateID, 
                        bool IsAltered, 
                        double OriginalEstimateQuantity, 
                        string ParentJob, 
                        bool OutOnProof, 
                        System.DateTime ProofSentDateTime, 
                        System.DateTime ProofReturnedDateTime, 
                        double Weight, 
                        byte SSDModeOfTransport, 
                        byte SSDNatureOfTransaction, 
                        string SSDDeliveryTerms, 
                        int Currency, 
                        double ExchangeRate, 
                        double ForeignTotal, 
                        byte RoleInSeries, 
                        byte[] SentToJDF, 
                        string InvoiceCountryOfOrigin, 
                        string DeliveryCountryOfOrigin, 
                        bool IsInvoiced, 
                        double AgencyComPerc, 
                        string JDFStatus, 
                        bool IsProductionJob, 
                        byte OriginationOfJob, 
                        string JDFRef, 
                        bool NewJDFAcknowledged, 
                        string MilestoneGroup, 
                        bool MethodOfWorkingModified, 
                        int CompanyID, 
                        byte JobGanged, 
                        System.DateTime DateModified, 
                        int ModifiedByUserID, 
                        int SecurityGroupID, 
                        string LastMilestone, 
                        bool IsAssemblyJob, 
                        System.DateTime DespatchDate, 
                        int BOMRevision, 
                        byte[] dbTimeStamp, 
                        int SalesTaxCodeID, 
                        int SalesTaxItemID, 
                        string Email, 
                        byte CreatedStockType, 
                        int ProductTypeID) {
                MainJobDetailsRow rowMainJobDetailsRow = ((MainJobDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MethodOfWorking,
                        WorksPrinted,
                        MultipleProducts,
                        JobNo,
                        Datedb,
                        InvoiceID,
                        InvoiceCustomerCode,
                        InvoiceCustomerName,
                        InvoiceAddress,
                        InvoiceTown,
                        InvoiceCounty,
                        InvoicePostcode,
                        InvoiceCountry,
                        InvoiceContact,
                        InvoiceTel,
                        InvoiceFax,
                        InvoiceExchange,
                        DeliveryCustomerCode,
                        DeliveryCustomerName,
                        DeliveryAddress,
                        DeliveryTown,
                        DeliveryCounty,
                        DeliveryPostcode,
                        DeliveryCountry,
                        DeliveryContact,
                        DeliveryTel,
                        DeliveryFax,
                        PrevJob,
                        OrderNo,
                        QuantityOrdered,
                        QuantityDelivered,
                        QuantityInStock,
                        StockCode,
                        StockSize,
                        Ref1,
                        Ref2,
                        Ref3,
                        Ref4,
                        Ref5,
                        Ref6,
                        Ref7,
                        Ref8,
                        Ref9,
                        Ref10,
                        JobType,
                        VatCode,
                        PriceEst,
                        ProfitEst,
                        ProfitAct,
                        JobDesc,
                        OurOrderNo,
                        LastOpDate,
                        LastOpCode,
                        LastOpDesc,
                        JobCompleted,
                        JobCompletionDate,
                        EstimateHeaderRef,
                        EstimateID,
                        JobTypeDesc,
                        JobDept,
                        OrderLineID,
                        Nominal,
                        CostCentre,
                        Department,
                        UnitPrice,
                        QuantityInvoiced,
                        QuantityProduced,
                        InvoiceCompleted,
                        JobCancelled,
                        Estimator,
                        RequiredTime,
                        CustomerRef2,
                        CreateUserName,
                        CreateDateTime,
                        UpdateUserName,
                        UpdateDateTime,
                        OverHeadPercent,
                        IssueNumber,
                        Derived,
                        FinishedProductionDate,
                        PostingCode,
                        PostingContact,
                        OriginalEstimateHeaderRef,
                        OriginalEstimateID,
                        IsAltered,
                        OriginalEstimateQuantity,
                        ParentJob,
                        OutOnProof,
                        ProofSentDateTime,
                        ProofReturnedDateTime,
                        Weight,
                        SSDModeOfTransport,
                        SSDNatureOfTransaction,
                        SSDDeliveryTerms,
                        Currency,
                        ExchangeRate,
                        ForeignTotal,
                        RoleInSeries,
                        SentToJDF,
                        InvoiceCountryOfOrigin,
                        DeliveryCountryOfOrigin,
                        IsInvoiced,
                        AgencyComPerc,
                        JDFStatus,
                        IsProductionJob,
                        OriginationOfJob,
                        JDFRef,
                        NewJDFAcknowledged,
                        MilestoneGroup,
                        MethodOfWorkingModified,
                        CompanyID,
                        JobGanged,
                        DateModified,
                        ModifiedByUserID,
                        SecurityGroupID,
                        LastMilestone,
                        IsAssemblyJob,
                        DespatchDate,
                        BOMRevision,
                        dbTimeStamp,
                        SalesTaxCodeID,
                        SalesTaxItemID,
                        Email,
                        CreatedStockType,
                        ProductTypeID};
                rowMainJobDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMainJobDetailsRow);
                return rowMainJobDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainJobDetailsRow FindByID(int ID) {
                return ((MainJobDetailsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MainJobDetailsDataTable cln = ((MainJobDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MainJobDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMethodOfWorking = base.Columns["MethodOfWorking"];
                this.columnWorksPrinted = base.Columns["WorksPrinted"];
                this.columnMultipleProducts = base.Columns["MultipleProducts"];
                this.columnJobNo = base.Columns["JobNo"];
                this.columnDatedb = base.Columns["Datedb"];
                this.columnInvoiceID = base.Columns["InvoiceID"];
                this.columnInvoiceCustomerCode = base.Columns["InvoiceCustomerCode"];
                this.columnInvoiceCustomerName = base.Columns["InvoiceCustomerName"];
                this.columnInvoiceAddress = base.Columns["InvoiceAddress"];
                this.columnInvoiceTown = base.Columns["InvoiceTown"];
                this.columnInvoiceCounty = base.Columns["InvoiceCounty"];
                this.columnInvoicePostcode = base.Columns["InvoicePostcode"];
                this.columnInvoiceCountry = base.Columns["InvoiceCountry"];
                this.columnInvoiceContact = base.Columns["InvoiceContact"];
                this.columnInvoiceTel = base.Columns["InvoiceTel"];
                this.columnInvoiceFax = base.Columns["InvoiceFax"];
                this.columnInvoiceExchange = base.Columns["InvoiceExchange"];
                this.columnDeliveryCustomerCode = base.Columns["DeliveryCustomerCode"];
                this.columnDeliveryCustomerName = base.Columns["DeliveryCustomerName"];
                this.columnDeliveryAddress = base.Columns["DeliveryAddress"];
                this.columnDeliveryTown = base.Columns["DeliveryTown"];
                this.columnDeliveryCounty = base.Columns["DeliveryCounty"];
                this.columnDeliveryPostcode = base.Columns["DeliveryPostcode"];
                this.columnDeliveryCountry = base.Columns["DeliveryCountry"];
                this.columnDeliveryContact = base.Columns["DeliveryContact"];
                this.columnDeliveryTel = base.Columns["DeliveryTel"];
                this.columnDeliveryFax = base.Columns["DeliveryFax"];
                this.columnPrevJob = base.Columns["PrevJob"];
                this.columnOrderNo = base.Columns["OrderNo"];
                this.columnQuantityOrdered = base.Columns["QuantityOrdered"];
                this.columnQuantityDelivered = base.Columns["QuantityDelivered"];
                this.columnQuantityInStock = base.Columns["QuantityInStock"];
                this.columnStockCode = base.Columns["StockCode"];
                this.columnStockSize = base.Columns["StockSize"];
                this.columnRef1 = base.Columns["Ref1"];
                this.columnRef2 = base.Columns["Ref2"];
                this.columnRef3 = base.Columns["Ref3"];
                this.columnRef4 = base.Columns["Ref4"];
                this.columnRef5 = base.Columns["Ref5"];
                this.columnRef6 = base.Columns["Ref6"];
                this.columnRef7 = base.Columns["Ref7"];
                this.columnRef8 = base.Columns["Ref8"];
                this.columnRef9 = base.Columns["Ref9"];
                this.columnRef10 = base.Columns["Ref10"];
                this.columnJobType = base.Columns["JobType"];
                this.columnVatCode = base.Columns["VatCode"];
                this.columnPriceEst = base.Columns["PriceEst"];
                this.columnProfitEst = base.Columns["ProfitEst"];
                this.columnProfitAct = base.Columns["ProfitAct"];
                this.columnJobDesc = base.Columns["JobDesc"];
                this.columnOurOrderNo = base.Columns["OurOrderNo"];
                this.columnLastOpDate = base.Columns["LastOpDate"];
                this.columnLastOpCode = base.Columns["LastOpCode"];
                this.columnLastOpDesc = base.Columns["LastOpDesc"];
                this.columnJobCompleted = base.Columns["JobCompleted"];
                this.columnJobCompletionDate = base.Columns["JobCompletionDate"];
                this.columnEstimateHeaderRef = base.Columns["EstimateHeaderRef"];
                this.columnEstimateID = base.Columns["EstimateID"];
                this.columnJobTypeDesc = base.Columns["JobTypeDesc"];
                this.columnJobDept = base.Columns["JobDept"];
                this.columnOrderLineID = base.Columns["OrderLineID"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnCostCentre = base.Columns["CostCentre"];
                this.columnDepartment = base.Columns["Department"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnQuantityInvoiced = base.Columns["QuantityInvoiced"];
                this.columnQuantityProduced = base.Columns["QuantityProduced"];
                this.columnInvoiceCompleted = base.Columns["InvoiceCompleted"];
                this.columnJobCancelled = base.Columns["JobCancelled"];
                this.columnEstimator = base.Columns["Estimator"];
                this.columnRequiredTime = base.Columns["RequiredTime"];
                this.columnCustomerRef2 = base.Columns["CustomerRef2"];
                this.columnCreateUserName = base.Columns["CreateUserName"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnUpdateUserName = base.Columns["UpdateUserName"];
                this.columnUpdateDateTime = base.Columns["UpdateDateTime"];
                this.columnOverHeadPercent = base.Columns["OverHeadPercent"];
                this.columnIssueNumber = base.Columns["IssueNumber"];
                this.columnDerived = base.Columns["Derived"];
                this.columnFinishedProductionDate = base.Columns["FinishedProductionDate"];
                this.columnPostingCode = base.Columns["PostingCode"];
                this.columnPostingContact = base.Columns["PostingContact"];
                this.columnOriginalEstimateHeaderRef = base.Columns["OriginalEstimateHeaderRef"];
                this.columnOriginalEstimateID = base.Columns["OriginalEstimateID"];
                this.columnIsAltered = base.Columns["IsAltered"];
                this.columnOriginalEstimateQuantity = base.Columns["OriginalEstimateQuantity"];
                this.columnParentJob = base.Columns["ParentJob"];
                this.columnOutOnProof = base.Columns["OutOnProof"];
                this.columnProofSentDateTime = base.Columns["ProofSentDateTime"];
                this.columnProofReturnedDateTime = base.Columns["ProofReturnedDateTime"];
                this.columnWeight = base.Columns["Weight"];
                this.columnSSDModeOfTransport = base.Columns["SSDModeOfTransport"];
                this.columnSSDNatureOfTransaction = base.Columns["SSDNatureOfTransaction"];
                this.columnSSDDeliveryTerms = base.Columns["SSDDeliveryTerms"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnForeignTotal = base.Columns["ForeignTotal"];
                this.columnRoleInSeries = base.Columns["RoleInSeries"];
                this.columnSentToJDF = base.Columns["SentToJDF"];
                this.columnInvoiceCountryOfOrigin = base.Columns["InvoiceCountryOfOrigin"];
                this.columnDeliveryCountryOfOrigin = base.Columns["DeliveryCountryOfOrigin"];
                this.columnIsInvoiced = base.Columns["IsInvoiced"];
                this.columnAgencyComPerc = base.Columns["AgencyComPerc"];
                this.columnJDFStatus = base.Columns["JDFStatus"];
                this.columnIsProductionJob = base.Columns["IsProductionJob"];
                this.columnOriginationOfJob = base.Columns["OriginationOfJob"];
                this.columnJDFRef = base.Columns["JDFRef"];
                this.columnNewJDFAcknowledged = base.Columns["NewJDFAcknowledged"];
                this.columnMilestoneGroup = base.Columns["MilestoneGroup"];
                this.columnMethodOfWorkingModified = base.Columns["MethodOfWorkingModified"];
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnJobGanged = base.Columns["JobGanged"];
                this.columnDateModified = base.Columns["DateModified"];
                this.columnModifiedByUserID = base.Columns["ModifiedByUserID"];
                this.columnSecurityGroupID = base.Columns["SecurityGroupID"];
                this.columnLastMilestone = base.Columns["LastMilestone"];
                this.columnIsAssemblyJob = base.Columns["IsAssemblyJob"];
                this.columnDespatchDate = base.Columns["DespatchDate"];
                this.columnBOMRevision = base.Columns["BOMRevision"];
                this.columndbTimeStamp = base.Columns["dbTimeStamp"];
                this.columnSalesTaxCodeID = base.Columns["SalesTaxCodeID"];
                this.columnSalesTaxItemID = base.Columns["SalesTaxItemID"];
                this.columnEmail = base.Columns["Email"];
                this.columnCreatedStockType = base.Columns["CreatedStockType"];
                this.columnProductTypeID = base.Columns["ProductTypeID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMethodOfWorking = new global::System.Data.DataColumn("MethodOfWorking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodOfWorking);
                this.columnWorksPrinted = new global::System.Data.DataColumn("WorksPrinted", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorksPrinted);
                this.columnMultipleProducts = new global::System.Data.DataColumn("MultipleProducts", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultipleProducts);
                this.columnJobNo = new global::System.Data.DataColumn("JobNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobNo);
                this.columnDatedb = new global::System.Data.DataColumn("Datedb", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatedb);
                this.columnInvoiceID = new global::System.Data.DataColumn("InvoiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceID);
                this.columnInvoiceCustomerCode = new global::System.Data.DataColumn("InvoiceCustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceCustomerCode);
                this.columnInvoiceCustomerName = new global::System.Data.DataColumn("InvoiceCustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceCustomerName);
                this.columnInvoiceAddress = new global::System.Data.DataColumn("InvoiceAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAddress);
                this.columnInvoiceTown = new global::System.Data.DataColumn("InvoiceTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceTown);
                this.columnInvoiceCounty = new global::System.Data.DataColumn("InvoiceCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceCounty);
                this.columnInvoicePostcode = new global::System.Data.DataColumn("InvoicePostcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePostcode);
                this.columnInvoiceCountry = new global::System.Data.DataColumn("InvoiceCountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceCountry);
                this.columnInvoiceContact = new global::System.Data.DataColumn("InvoiceContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceContact);
                this.columnInvoiceTel = new global::System.Data.DataColumn("InvoiceTel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceTel);
                this.columnInvoiceFax = new global::System.Data.DataColumn("InvoiceFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceFax);
                this.columnInvoiceExchange = new global::System.Data.DataColumn("InvoiceExchange", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceExchange);
                this.columnDeliveryCustomerCode = new global::System.Data.DataColumn("DeliveryCustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryCustomerCode);
                this.columnDeliveryCustomerName = new global::System.Data.DataColumn("DeliveryCustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryCustomerName);
                this.columnDeliveryAddress = new global::System.Data.DataColumn("DeliveryAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryAddress);
                this.columnDeliveryTown = new global::System.Data.DataColumn("DeliveryTown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryTown);
                this.columnDeliveryCounty = new global::System.Data.DataColumn("DeliveryCounty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryCounty);
                this.columnDeliveryPostcode = new global::System.Data.DataColumn("DeliveryPostcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryPostcode);
                this.columnDeliveryCountry = new global::System.Data.DataColumn("DeliveryCountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryCountry);
                this.columnDeliveryContact = new global::System.Data.DataColumn("DeliveryContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryContact);
                this.columnDeliveryTel = new global::System.Data.DataColumn("DeliveryTel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryTel);
                this.columnDeliveryFax = new global::System.Data.DataColumn("DeliveryFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryFax);
                this.columnPrevJob = new global::System.Data.DataColumn("PrevJob", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevJob);
                this.columnOrderNo = new global::System.Data.DataColumn("OrderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNo);
                this.columnQuantityOrdered = new global::System.Data.DataColumn("QuantityOrdered", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityOrdered);
                this.columnQuantityDelivered = new global::System.Data.DataColumn("QuantityDelivered", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityDelivered);
                this.columnQuantityInStock = new global::System.Data.DataColumn("QuantityInStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityInStock);
                this.columnStockCode = new global::System.Data.DataColumn("StockCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockCode);
                this.columnStockSize = new global::System.Data.DataColumn("StockSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSize);
                this.columnRef1 = new global::System.Data.DataColumn("Ref1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef1);
                this.columnRef2 = new global::System.Data.DataColumn("Ref2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef2);
                this.columnRef3 = new global::System.Data.DataColumn("Ref3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef3);
                this.columnRef4 = new global::System.Data.DataColumn("Ref4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef4);
                this.columnRef5 = new global::System.Data.DataColumn("Ref5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef5);
                this.columnRef6 = new global::System.Data.DataColumn("Ref6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef6);
                this.columnRef7 = new global::System.Data.DataColumn("Ref7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef7);
                this.columnRef8 = new global::System.Data.DataColumn("Ref8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef8);
                this.columnRef9 = new global::System.Data.DataColumn("Ref9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef9);
                this.columnRef10 = new global::System.Data.DataColumn("Ref10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef10);
                this.columnJobType = new global::System.Data.DataColumn("JobType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobType);
                this.columnVatCode = new global::System.Data.DataColumn("VatCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatCode);
                this.columnPriceEst = new global::System.Data.DataColumn("PriceEst", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceEst);
                this.columnProfitEst = new global::System.Data.DataColumn("ProfitEst", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfitEst);
                this.columnProfitAct = new global::System.Data.DataColumn("ProfitAct", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfitAct);
                this.columnJobDesc = new global::System.Data.DataColumn("JobDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobDesc);
                this.columnOurOrderNo = new global::System.Data.DataColumn("OurOrderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOurOrderNo);
                this.columnLastOpDate = new global::System.Data.DataColumn("LastOpDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastOpDate);
                this.columnLastOpCode = new global::System.Data.DataColumn("LastOpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastOpCode);
                this.columnLastOpDesc = new global::System.Data.DataColumn("LastOpDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastOpDesc);
                this.columnJobCompleted = new global::System.Data.DataColumn("JobCompleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCompleted);
                this.columnJobCompletionDate = new global::System.Data.DataColumn("JobCompletionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCompletionDate);
                this.columnEstimateHeaderRef = new global::System.Data.DataColumn("EstimateHeaderRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateHeaderRef);
                this.columnEstimateID = new global::System.Data.DataColumn("EstimateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateID);
                this.columnJobTypeDesc = new global::System.Data.DataColumn("JobTypeDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobTypeDesc);
                this.columnJobDept = new global::System.Data.DataColumn("JobDept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobDept);
                this.columnOrderLineID = new global::System.Data.DataColumn("OrderLineID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderLineID);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnCostCentre = new global::System.Data.DataColumn("CostCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCentre);
                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnQuantityInvoiced = new global::System.Data.DataColumn("QuantityInvoiced", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityInvoiced);
                this.columnQuantityProduced = new global::System.Data.DataColumn("QuantityProduced", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityProduced);
                this.columnInvoiceCompleted = new global::System.Data.DataColumn("InvoiceCompleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceCompleted);
                this.columnJobCancelled = new global::System.Data.DataColumn("JobCancelled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCancelled);
                this.columnEstimator = new global::System.Data.DataColumn("Estimator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimator);
                this.columnRequiredTime = new global::System.Data.DataColumn("RequiredTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredTime);
                this.columnCustomerRef2 = new global::System.Data.DataColumn("CustomerRef2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerRef2);
                this.columnCreateUserName = new global::System.Data.DataColumn("CreateUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateUserName);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnUpdateUserName = new global::System.Data.DataColumn("UpdateUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUserName);
                this.columnUpdateDateTime = new global::System.Data.DataColumn("UpdateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDateTime);
                this.columnOverHeadPercent = new global::System.Data.DataColumn("OverHeadPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverHeadPercent);
                this.columnIssueNumber = new global::System.Data.DataColumn("IssueNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueNumber);
                this.columnDerived = new global::System.Data.DataColumn("Derived", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDerived);
                this.columnFinishedProductionDate = new global::System.Data.DataColumn("FinishedProductionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishedProductionDate);
                this.columnPostingCode = new global::System.Data.DataColumn("PostingCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostingCode);
                this.columnPostingContact = new global::System.Data.DataColumn("PostingContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostingContact);
                this.columnOriginalEstimateHeaderRef = new global::System.Data.DataColumn("OriginalEstimateHeaderRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalEstimateHeaderRef);
                this.columnOriginalEstimateID = new global::System.Data.DataColumn("OriginalEstimateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalEstimateID);
                this.columnIsAltered = new global::System.Data.DataColumn("IsAltered", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAltered);
                this.columnOriginalEstimateQuantity = new global::System.Data.DataColumn("OriginalEstimateQuantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalEstimateQuantity);
                this.columnParentJob = new global::System.Data.DataColumn("ParentJob", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentJob);
                this.columnOutOnProof = new global::System.Data.DataColumn("OutOnProof", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutOnProof);
                this.columnProofSentDateTime = new global::System.Data.DataColumn("ProofSentDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProofSentDateTime);
                this.columnProofReturnedDateTime = new global::System.Data.DataColumn("ProofReturnedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProofReturnedDateTime);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnSSDModeOfTransport = new global::System.Data.DataColumn("SSDModeOfTransport", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSDModeOfTransport);
                this.columnSSDNatureOfTransaction = new global::System.Data.DataColumn("SSDNatureOfTransaction", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSDNatureOfTransaction);
                this.columnSSDDeliveryTerms = new global::System.Data.DataColumn("SSDDeliveryTerms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSDDeliveryTerms);
                this.columnCurrency = new global::System.Data.DataColumn("Currency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnForeignTotal = new global::System.Data.DataColumn("ForeignTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignTotal);
                this.columnRoleInSeries = new global::System.Data.DataColumn("RoleInSeries", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoleInSeries);
                this.columnSentToJDF = new global::System.Data.DataColumn("SentToJDF", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSentToJDF);
                this.columnInvoiceCountryOfOrigin = new global::System.Data.DataColumn("InvoiceCountryOfOrigin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceCountryOfOrigin);
                this.columnDeliveryCountryOfOrigin = new global::System.Data.DataColumn("DeliveryCountryOfOrigin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryCountryOfOrigin);
                this.columnIsInvoiced = new global::System.Data.DataColumn("IsInvoiced", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsInvoiced);
                this.columnAgencyComPerc = new global::System.Data.DataColumn("AgencyComPerc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgencyComPerc);
                this.columnJDFStatus = new global::System.Data.DataColumn("JDFStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJDFStatus);
                this.columnIsProductionJob = new global::System.Data.DataColumn("IsProductionJob", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsProductionJob);
                this.columnOriginationOfJob = new global::System.Data.DataColumn("OriginationOfJob", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginationOfJob);
                this.columnJDFRef = new global::System.Data.DataColumn("JDFRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJDFRef);
                this.columnNewJDFAcknowledged = new global::System.Data.DataColumn("NewJDFAcknowledged", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewJDFAcknowledged);
                this.columnMilestoneGroup = new global::System.Data.DataColumn("MilestoneGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMilestoneGroup);
                this.columnMethodOfWorkingModified = new global::System.Data.DataColumn("MethodOfWorkingModified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethodOfWorkingModified);
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnJobGanged = new global::System.Data.DataColumn("JobGanged", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobGanged);
                this.columnDateModified = new global::System.Data.DataColumn("DateModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModified);
                this.columnModifiedByUserID = new global::System.Data.DataColumn("ModifiedByUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedByUserID);
                this.columnSecurityGroupID = new global::System.Data.DataColumn("SecurityGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecurityGroupID);
                this.columnLastMilestone = new global::System.Data.DataColumn("LastMilestone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastMilestone);
                this.columnIsAssemblyJob = new global::System.Data.DataColumn("IsAssemblyJob", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAssemblyJob);
                this.columnDespatchDate = new global::System.Data.DataColumn("DespatchDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDespatchDate);
                this.columnBOMRevision = new global::System.Data.DataColumn("BOMRevision", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOMRevision);
                this.columndbTimeStamp = new global::System.Data.DataColumn("dbTimeStamp", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndbTimeStamp);
                this.columnSalesTaxCodeID = new global::System.Data.DataColumn("SalesTaxCodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTaxCodeID);
                this.columnSalesTaxItemID = new global::System.Data.DataColumn("SalesTaxItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTaxItemID);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnCreatedStockType = new global::System.Data.DataColumn("CreatedStockType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedStockType);
                this.columnProductTypeID = new global::System.Data.DataColumn("ProductTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductTypeID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnMethodOfWorking.MaxLength = 2147483647;
                this.columnMultipleProducts.AllowDBNull = false;
                this.columnJobNo.AllowDBNull = false;
                this.columnJobNo.MaxLength = 32;
                this.columnInvoiceCustomerCode.MaxLength = 32;
                this.columnInvoiceCustomerName.MaxLength = 64;
                this.columnInvoiceAddress.MaxLength = 255;
                this.columnInvoiceTown.MaxLength = 64;
                this.columnInvoiceCounty.MaxLength = 64;
                this.columnInvoicePostcode.MaxLength = 10;
                this.columnInvoiceCountry.MaxLength = 64;
                this.columnInvoiceContact.MaxLength = 64;
                this.columnInvoiceTel.MaxLength = 32;
                this.columnInvoiceFax.MaxLength = 32;
                this.columnDeliveryCustomerCode.MaxLength = 32;
                this.columnDeliveryCustomerName.MaxLength = 64;
                this.columnDeliveryAddress.MaxLength = 255;
                this.columnDeliveryTown.MaxLength = 64;
                this.columnDeliveryCounty.MaxLength = 64;
                this.columnDeliveryPostcode.MaxLength = 10;
                this.columnDeliveryCountry.MaxLength = 64;
                this.columnDeliveryContact.MaxLength = 64;
                this.columnDeliveryTel.MaxLength = 32;
                this.columnDeliveryFax.MaxLength = 32;
                this.columnPrevJob.MaxLength = 32;
                this.columnOrderNo.MaxLength = 32;
                this.columnStockCode.MaxLength = 32;
                this.columnStockSize.MaxLength = 32;
                this.columnRef1.MaxLength = 32;
                this.columnRef2.MaxLength = 32;
                this.columnRef3.MaxLength = 32;
                this.columnRef4.MaxLength = 32;
                this.columnRef5.MaxLength = 32;
                this.columnRef6.MaxLength = 32;
                this.columnRef7.MaxLength = 32;
                this.columnRef8.MaxLength = 32;
                this.columnRef9.MaxLength = 32;
                this.columnRef10.MaxLength = 32;
                this.columnJobType.MaxLength = 32;
                this.columnVatCode.AllowDBNull = false;
                this.columnVatCode.MaxLength = 2;
                this.columnJobDesc.MaxLength = 255;
                this.columnOurOrderNo.MaxLength = 32;
                this.columnLastOpCode.MaxLength = 32;
                this.columnLastOpDesc.MaxLength = 64;
                this.columnJobCompleted.AllowDBNull = false;
                this.columnEstimateHeaderRef.MaxLength = 32;
                this.columnJobTypeDesc.MaxLength = 64;
                this.columnJobDept.MaxLength = 64;
                this.columnNominal.MaxLength = 32;
                this.columnCostCentre.MaxLength = 32;
                this.columnDepartment.MaxLength = 32;
                this.columnInvoiceCompleted.AllowDBNull = false;
                this.columnJobCancelled.AllowDBNull = false;
                this.columnEstimator.MaxLength = 64;
                this.columnCustomerRef2.MaxLength = 32;
                this.columnCreateUserName.MaxLength = 64;
                this.columnUpdateUserName.MaxLength = 64;
                this.columnPostingCode.MaxLength = 32;
                this.columnPostingContact.MaxLength = 64;
                this.columnOriginalEstimateHeaderRef.MaxLength = 32;
                this.columnIsAltered.AllowDBNull = false;
                this.columnParentJob.MaxLength = 32;
                this.columnOutOnProof.AllowDBNull = false;
                this.columnSSDModeOfTransport.AllowDBNull = false;
                this.columnSSDNatureOfTransaction.AllowDBNull = false;
                this.columnSSDDeliveryTerms.AllowDBNull = false;
                this.columnSSDDeliveryTerms.MaxLength = 3;
                this.columnCurrency.AllowDBNull = false;
                this.columnExchangeRate.AllowDBNull = false;
                this.columnForeignTotal.AllowDBNull = false;
                this.columnRoleInSeries.AllowDBNull = false;
                this.columnInvoiceCountryOfOrigin.MaxLength = 2;
                this.columnDeliveryCountryOfOrigin.MaxLength = 2;
                this.columnIsInvoiced.AllowDBNull = false;
                this.columnAgencyComPerc.AllowDBNull = false;
                this.columnJDFStatus.MaxLength = 255;
                this.columnIsProductionJob.AllowDBNull = false;
                this.columnOriginationOfJob.AllowDBNull = false;
                this.columnJDFRef.MaxLength = 255;
                this.columnNewJDFAcknowledged.AllowDBNull = false;
                this.columnMilestoneGroup.MaxLength = 32;
                this.columnMethodOfWorkingModified.AllowDBNull = false;
                this.columnCompanyID.AllowDBNull = false;
                this.columnJobGanged.AllowDBNull = false;
                this.columnLastMilestone.MaxLength = 512;
                this.columnIsAssemblyJob.AllowDBNull = false;
                this.columnBOMRevision.AllowDBNull = false;
                this.columndbTimeStamp.ReadOnly = true;
                this.columnSalesTaxCodeID.AllowDBNull = false;
                this.columnSalesTaxItemID.AllowDBNull = false;
                this.columnEmail.MaxLength = 255;
                this.columnCreatedStockType.AllowDBNull = false;
                this.columnProductTypeID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainJobDetailsRow NewMainJobDetailsRow() {
                return ((MainJobDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MainJobDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MainJobDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MainJobDetailsRowChanged != null)) {
                    this.MainJobDetailsRowChanged(this, new MainJobDetailsRowChangeEvent(((MainJobDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MainJobDetailsRowChanging != null)) {
                    this.MainJobDetailsRowChanging(this, new MainJobDetailsRowChangeEvent(((MainJobDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MainJobDetailsRowDeleted != null)) {
                    this.MainJobDetailsRowDeleted(this, new MainJobDetailsRowChangeEvent(((MainJobDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MainJobDetailsRowDeleting != null)) {
                    this.MainJobDetailsRowDeleting(this, new MainJobDetailsRowChangeEvent(((MainJobDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMainJobDetailsRow(MainJobDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ThardataDataSet ds = new ThardataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MainJobDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrderLineDataTable : global::System.Data.TypedTableBase<OrderLineRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnUseDiscountMatrix;
            
            private global::System.Data.DataColumn columnOrderNo;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnNettAmount;
            
            private global::System.Data.DataColumn columnVatCode;
            
            private global::System.Data.DataColumn columnVatAmount;
            
            private global::System.Data.DataColumn columnRequired;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnDeliveryCode;
            
            private global::System.Data.DataColumn columnDeliveryName;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnPricingunits;
            
            private global::System.Data.DataColumn columnNominalCode;
            
            private global::System.Data.DataColumn columnCostCentre;
            
            private global::System.Data.DataColumn columnDepartment;
            
            private global::System.Data.DataColumn columnQuantityDelivered;
            
            private global::System.Data.DataColumn columnQuantityInvoiced;
            
            private global::System.Data.DataColumn columnJobNo;
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnOriginalOrderLineID;
            
            private global::System.Data.DataColumn columnDiscountPerc;
            
            private global::System.Data.DataColumn columnCarriageVatCode;
            
            private global::System.Data.DataColumn columnCarriageNetAmount;
            
            private global::System.Data.DataColumn columnCarriageVatAmount;
            
            private global::System.Data.DataColumn columnCarriageNominal;
            
            private global::System.Data.DataColumn columnCarriageCostCentre;
            
            private global::System.Data.DataColumn columnCarriageDepartment;
            
            private global::System.Data.DataColumn columnLineNumber;
            
            private global::System.Data.DataColumn columnQuantityAllocated;
            
            private global::System.Data.DataColumn columnRef1;
            
            private global::System.Data.DataColumn columnRef2;
            
            private global::System.Data.DataColumn columnNumberOfDistributions;
            
            private global::System.Data.DataColumn columnForeignUnitPrice;
            
            private global::System.Data.DataColumn columnForeignNettAmount;
            
            private global::System.Data.DataColumn columnForeignVatAmount;
            
            private global::System.Data.DataColumn columnForeignCarriageNet;
            
            private global::System.Data.DataColumn columnForeignCarriageVat;
            
            private global::System.Data.DataColumn columnQuantityConfirmed;
            
            private global::System.Data.DataColumn columnInstructions;
            
            private global::System.Data.DataColumn columnTransRef;
            
            private global::System.Data.DataColumn columnTransJobNo;
            
            private global::System.Data.DataColumn columnTransSell;
            
            private global::System.Data.DataColumn columnDiscountType;
            
            private global::System.Data.DataColumn columnDiscountAmount;
            
            private global::System.Data.DataColumn columnPages;
            
            private global::System.Data.DataColumn columnW4PCStatus;
            
            private global::System.Data.DataColumn columnLeaves;
            
            private global::System.Data.DataColumn columnQuantityPicked;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnEstimateID;
            
            private global::System.Data.DataColumn columnQuantityPacked;
            
            private global::System.Data.DataColumn columnOrderID;
            
            private global::System.Data.DataColumn columnJDFJobName;
            
            private global::System.Data.DataColumn columnDateModified;
            
            private global::System.Data.DataColumn columnModifiedByUserID;
            
            private global::System.Data.DataColumn columnChiliDocumentID;
            
            private global::System.Data.DataColumn columnAssetID;
            
            private global::System.Data.DataColumn columnParentOrderLineID;
            
            private global::System.Data.DataColumn columnParentOrderID;
            
            private global::System.Data.DataColumn columnIsConfigurable;
            
            private global::System.Data.DataColumn columnSalesTaxCodeID;
            
            private global::System.Data.DataColumn columnSalesTaxItemID;
            
            private global::System.Data.DataColumn columnBOMRevision;
            
            private global::System.Data.DataColumn columnTransID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrderLineDataTable() {
                this.TableName = "OrderLine";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OrderLineDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OrderLineDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseDiscountMatrixColumn {
                get {
                    return this.columnUseDiscountMatrix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderNoColumn {
                get {
                    return this.columnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NettAmountColumn {
                get {
                    return this.columnNettAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VatCodeColumn {
                get {
                    return this.columnVatCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VatAmountColumn {
                get {
                    return this.columnVatAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredColumn {
                get {
                    return this.columnRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryCodeColumn {
                get {
                    return this.columnDeliveryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryNameColumn {
                get {
                    return this.columnDeliveryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PricingunitsColumn {
                get {
                    return this.columnPricingunits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalCodeColumn {
                get {
                    return this.columnNominalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostCentreColumn {
                get {
                    return this.columnCostCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityDeliveredColumn {
                get {
                    return this.columnQuantityDelivered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityInvoicedColumn {
                get {
                    return this.columnQuantityInvoiced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobNoColumn {
                get {
                    return this.columnJobNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalOrderLineIDColumn {
                get {
                    return this.columnOriginalOrderLineID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountPercColumn {
                get {
                    return this.columnDiscountPerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarriageVatCodeColumn {
                get {
                    return this.columnCarriageVatCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarriageNetAmountColumn {
                get {
                    return this.columnCarriageNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarriageVatAmountColumn {
                get {
                    return this.columnCarriageVatAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarriageNominalColumn {
                get {
                    return this.columnCarriageNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarriageCostCentreColumn {
                get {
                    return this.columnCarriageCostCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CarriageDepartmentColumn {
                get {
                    return this.columnCarriageDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LineNumberColumn {
                get {
                    return this.columnLineNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityAllocatedColumn {
                get {
                    return this.columnQuantityAllocated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref1Column {
                get {
                    return this.columnRef1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ref2Column {
                get {
                    return this.columnRef2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfDistributionsColumn {
                get {
                    return this.columnNumberOfDistributions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignUnitPriceColumn {
                get {
                    return this.columnForeignUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignNettAmountColumn {
                get {
                    return this.columnForeignNettAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignVatAmountColumn {
                get {
                    return this.columnForeignVatAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignCarriageNetColumn {
                get {
                    return this.columnForeignCarriageNet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignCarriageVatColumn {
                get {
                    return this.columnForeignCarriageVat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityConfirmedColumn {
                get {
                    return this.columnQuantityConfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstructionsColumn {
                get {
                    return this.columnInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransRefColumn {
                get {
                    return this.columnTransRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransJobNoColumn {
                get {
                    return this.columnTransJobNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransSellColumn {
                get {
                    return this.columnTransSell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountTypeColumn {
                get {
                    return this.columnDiscountType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountAmountColumn {
                get {
                    return this.columnDiscountAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PagesColumn {
                get {
                    return this.columnPages;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn W4PCStatusColumn {
                get {
                    return this.columnW4PCStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LeavesColumn {
                get {
                    return this.columnLeaves;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityPickedColumn {
                get {
                    return this.columnQuantityPicked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimateIDColumn {
                get {
                    return this.columnEstimateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityPackedColumn {
                get {
                    return this.columnQuantityPacked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderIDColumn {
                get {
                    return this.columnOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JDFJobNameColumn {
                get {
                    return this.columnJDFJobName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifiedColumn {
                get {
                    return this.columnDateModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedByUserIDColumn {
                get {
                    return this.columnModifiedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChiliDocumentIDColumn {
                get {
                    return this.columnChiliDocumentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssetIDColumn {
                get {
                    return this.columnAssetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentOrderLineIDColumn {
                get {
                    return this.columnParentOrderLineID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentOrderIDColumn {
                get {
                    return this.columnParentOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsConfigurableColumn {
                get {
                    return this.columnIsConfigurable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTaxCodeIDColumn {
                get {
                    return this.columnSalesTaxCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTaxItemIDColumn {
                get {
                    return this.columnSalesTaxItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BOMRevisionColumn {
                get {
                    return this.columnBOMRevision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransIDColumn {
                get {
                    return this.columnTransID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrderLineRow this[int index] {
                get {
                    return ((OrderLineRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrderLineRowChangeEventHandler OrderLineRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrderLineRowChangeEventHandler OrderLineRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrderLineRowChangeEventHandler OrderLineRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrderLineRowChangeEventHandler OrderLineRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOrderLineRow(OrderLineRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrderLineRow AddOrderLineRow(
                        byte UseDiscountMatrix, 
                        string OrderNo, 
                        string ProductCode, 
                        string Description, 
                        double Quantity, 
                        double NettAmount, 
                        string VatCode, 
                        double VatAmount, 
                        System.DateTime Required, 
                        double Total, 
                        string DeliveryCode, 
                        string DeliveryName, 
                        double UnitPrice, 
                        string Pricingunits, 
                        string NominalCode, 
                        string CostCentre, 
                        string Department, 
                        double QuantityDelivered, 
                        double QuantityInvoiced, 
                        string JobNo, 
                        int ProductID, 
                        int OriginalOrderLineID, 
                        double DiscountPerc, 
                        string CarriageVatCode, 
                        double CarriageNetAmount, 
                        double CarriageVatAmount, 
                        string CarriageNominal, 
                        string CarriageCostCentre, 
                        string CarriageDepartment, 
                        int LineNumber, 
                        double QuantityAllocated, 
                        string Ref1, 
                        string Ref2, 
                        short NumberOfDistributions, 
                        double ForeignUnitPrice, 
                        double ForeignNettAmount, 
                        double ForeignVatAmount, 
                        double ForeignCarriageNet, 
                        double ForeignCarriageVat, 
                        double QuantityConfirmed, 
                        string Instructions, 
                        string TransRef, 
                        string TransJobNo, 
                        double TransSell, 
                        int DiscountType, 
                        double DiscountAmount, 
                        string Pages, 
                        string W4PCStatus, 
                        int Leaves, 
                        double QuantityPicked, 
                        double Weight, 
                        int EstimateID, 
                        double QuantityPacked, 
                        int OrderID, 
                        string JDFJobName, 
                        System.DateTime DateModified, 
                        int ModifiedByUserID, 
                        string ChiliDocumentID, 
                        int AssetID, 
                        int ParentOrderLineID, 
                        int ParentOrderID, 
                        bool IsConfigurable, 
                        int SalesTaxCodeID, 
                        int SalesTaxItemID, 
                        int BOMRevision, 
                        int TransID) {
                OrderLineRow rowOrderLineRow = ((OrderLineRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UseDiscountMatrix,
                        OrderNo,
                        ProductCode,
                        Description,
                        Quantity,
                        NettAmount,
                        VatCode,
                        VatAmount,
                        Required,
                        Total,
                        DeliveryCode,
                        DeliveryName,
                        UnitPrice,
                        Pricingunits,
                        NominalCode,
                        CostCentre,
                        Department,
                        QuantityDelivered,
                        QuantityInvoiced,
                        JobNo,
                        ProductID,
                        OriginalOrderLineID,
                        DiscountPerc,
                        CarriageVatCode,
                        CarriageNetAmount,
                        CarriageVatAmount,
                        CarriageNominal,
                        CarriageCostCentre,
                        CarriageDepartment,
                        LineNumber,
                        QuantityAllocated,
                        Ref1,
                        Ref2,
                        NumberOfDistributions,
                        ForeignUnitPrice,
                        ForeignNettAmount,
                        ForeignVatAmount,
                        ForeignCarriageNet,
                        ForeignCarriageVat,
                        QuantityConfirmed,
                        Instructions,
                        TransRef,
                        TransJobNo,
                        TransSell,
                        DiscountType,
                        DiscountAmount,
                        Pages,
                        W4PCStatus,
                        Leaves,
                        QuantityPicked,
                        Weight,
                        EstimateID,
                        QuantityPacked,
                        OrderID,
                        JDFJobName,
                        DateModified,
                        ModifiedByUserID,
                        ChiliDocumentID,
                        AssetID,
                        ParentOrderLineID,
                        ParentOrderID,
                        IsConfigurable,
                        SalesTaxCodeID,
                        SalesTaxItemID,
                        BOMRevision,
                        TransID};
                rowOrderLineRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrderLineRow);
                return rowOrderLineRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrderLineRow FindByID(int ID) {
                return ((OrderLineRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OrderLineDataTable cln = ((OrderLineDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrderLineDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnUseDiscountMatrix = base.Columns["UseDiscountMatrix"];
                this.columnOrderNo = base.Columns["OrderNo"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnNettAmount = base.Columns["NettAmount"];
                this.columnVatCode = base.Columns["VatCode"];
                this.columnVatAmount = base.Columns["VatAmount"];
                this.columnRequired = base.Columns["Required"];
                this.columnTotal = base.Columns["Total"];
                this.columnDeliveryCode = base.Columns["DeliveryCode"];
                this.columnDeliveryName = base.Columns["DeliveryName"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnPricingunits = base.Columns["Pricingunits"];
                this.columnNominalCode = base.Columns["NominalCode"];
                this.columnCostCentre = base.Columns["CostCentre"];
                this.columnDepartment = base.Columns["Department"];
                this.columnQuantityDelivered = base.Columns["QuantityDelivered"];
                this.columnQuantityInvoiced = base.Columns["QuantityInvoiced"];
                this.columnJobNo = base.Columns["JobNo"];
                this.columnProductID = base.Columns["ProductID"];
                this.columnOriginalOrderLineID = base.Columns["OriginalOrderLineID"];
                this.columnDiscountPerc = base.Columns["DiscountPerc"];
                this.columnCarriageVatCode = base.Columns["CarriageVatCode"];
                this.columnCarriageNetAmount = base.Columns["CarriageNetAmount"];
                this.columnCarriageVatAmount = base.Columns["CarriageVatAmount"];
                this.columnCarriageNominal = base.Columns["CarriageNominal"];
                this.columnCarriageCostCentre = base.Columns["CarriageCostCentre"];
                this.columnCarriageDepartment = base.Columns["CarriageDepartment"];
                this.columnLineNumber = base.Columns["LineNumber"];
                this.columnQuantityAllocated = base.Columns["QuantityAllocated"];
                this.columnRef1 = base.Columns["Ref1"];
                this.columnRef2 = base.Columns["Ref2"];
                this.columnNumberOfDistributions = base.Columns["NumberOfDistributions"];
                this.columnForeignUnitPrice = base.Columns["ForeignUnitPrice"];
                this.columnForeignNettAmount = base.Columns["ForeignNettAmount"];
                this.columnForeignVatAmount = base.Columns["ForeignVatAmount"];
                this.columnForeignCarriageNet = base.Columns["ForeignCarriageNet"];
                this.columnForeignCarriageVat = base.Columns["ForeignCarriageVat"];
                this.columnQuantityConfirmed = base.Columns["QuantityConfirmed"];
                this.columnInstructions = base.Columns["Instructions"];
                this.columnTransRef = base.Columns["TransRef"];
                this.columnTransJobNo = base.Columns["TransJobNo"];
                this.columnTransSell = base.Columns["TransSell"];
                this.columnDiscountType = base.Columns["DiscountType"];
                this.columnDiscountAmount = base.Columns["DiscountAmount"];
                this.columnPages = base.Columns["Pages"];
                this.columnW4PCStatus = base.Columns["W4PCStatus"];
                this.columnLeaves = base.Columns["Leaves"];
                this.columnQuantityPicked = base.Columns["QuantityPicked"];
                this.columnWeight = base.Columns["Weight"];
                this.columnEstimateID = base.Columns["EstimateID"];
                this.columnQuantityPacked = base.Columns["QuantityPacked"];
                this.columnOrderID = base.Columns["OrderID"];
                this.columnJDFJobName = base.Columns["JDFJobName"];
                this.columnDateModified = base.Columns["DateModified"];
                this.columnModifiedByUserID = base.Columns["ModifiedByUserID"];
                this.columnChiliDocumentID = base.Columns["ChiliDocumentID"];
                this.columnAssetID = base.Columns["AssetID"];
                this.columnParentOrderLineID = base.Columns["ParentOrderLineID"];
                this.columnParentOrderID = base.Columns["ParentOrderID"];
                this.columnIsConfigurable = base.Columns["IsConfigurable"];
                this.columnSalesTaxCodeID = base.Columns["SalesTaxCodeID"];
                this.columnSalesTaxItemID = base.Columns["SalesTaxItemID"];
                this.columnBOMRevision = base.Columns["BOMRevision"];
                this.columnTransID = base.Columns["TransID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnUseDiscountMatrix = new global::System.Data.DataColumn("UseDiscountMatrix", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseDiscountMatrix);
                this.columnOrderNo = new global::System.Data.DataColumn("OrderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNo);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnNettAmount = new global::System.Data.DataColumn("NettAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNettAmount);
                this.columnVatCode = new global::System.Data.DataColumn("VatCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatCode);
                this.columnVatAmount = new global::System.Data.DataColumn("VatAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatAmount);
                this.columnRequired = new global::System.Data.DataColumn("Required", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequired);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnDeliveryCode = new global::System.Data.DataColumn("DeliveryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryCode);
                this.columnDeliveryName = new global::System.Data.DataColumn("DeliveryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryName);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnPricingunits = new global::System.Data.DataColumn("Pricingunits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPricingunits);
                this.columnNominalCode = new global::System.Data.DataColumn("NominalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalCode);
                this.columnCostCentre = new global::System.Data.DataColumn("CostCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCentre);
                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnQuantityDelivered = new global::System.Data.DataColumn("QuantityDelivered", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityDelivered);
                this.columnQuantityInvoiced = new global::System.Data.DataColumn("QuantityInvoiced", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityInvoiced);
                this.columnJobNo = new global::System.Data.DataColumn("JobNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobNo);
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnOriginalOrderLineID = new global::System.Data.DataColumn("OriginalOrderLineID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalOrderLineID);
                this.columnDiscountPerc = new global::System.Data.DataColumn("DiscountPerc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountPerc);
                this.columnCarriageVatCode = new global::System.Data.DataColumn("CarriageVatCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarriageVatCode);
                this.columnCarriageNetAmount = new global::System.Data.DataColumn("CarriageNetAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarriageNetAmount);
                this.columnCarriageVatAmount = new global::System.Data.DataColumn("CarriageVatAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarriageVatAmount);
                this.columnCarriageNominal = new global::System.Data.DataColumn("CarriageNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarriageNominal);
                this.columnCarriageCostCentre = new global::System.Data.DataColumn("CarriageCostCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarriageCostCentre);
                this.columnCarriageDepartment = new global::System.Data.DataColumn("CarriageDepartment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarriageDepartment);
                this.columnLineNumber = new global::System.Data.DataColumn("LineNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineNumber);
                this.columnQuantityAllocated = new global::System.Data.DataColumn("QuantityAllocated", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityAllocated);
                this.columnRef1 = new global::System.Data.DataColumn("Ref1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef1);
                this.columnRef2 = new global::System.Data.DataColumn("Ref2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef2);
                this.columnNumberOfDistributions = new global::System.Data.DataColumn("NumberOfDistributions", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfDistributions);
                this.columnForeignUnitPrice = new global::System.Data.DataColumn("ForeignUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignUnitPrice);
                this.columnForeignNettAmount = new global::System.Data.DataColumn("ForeignNettAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignNettAmount);
                this.columnForeignVatAmount = new global::System.Data.DataColumn("ForeignVatAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignVatAmount);
                this.columnForeignCarriageNet = new global::System.Data.DataColumn("ForeignCarriageNet", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignCarriageNet);
                this.columnForeignCarriageVat = new global::System.Data.DataColumn("ForeignCarriageVat", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignCarriageVat);
                this.columnQuantityConfirmed = new global::System.Data.DataColumn("QuantityConfirmed", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityConfirmed);
                this.columnInstructions = new global::System.Data.DataColumn("Instructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstructions);
                this.columnTransRef = new global::System.Data.DataColumn("TransRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransRef);
                this.columnTransJobNo = new global::System.Data.DataColumn("TransJobNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransJobNo);
                this.columnTransSell = new global::System.Data.DataColumn("TransSell", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransSell);
                this.columnDiscountType = new global::System.Data.DataColumn("DiscountType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountType);
                this.columnDiscountAmount = new global::System.Data.DataColumn("DiscountAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmount);
                this.columnPages = new global::System.Data.DataColumn("Pages", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPages);
                this.columnW4PCStatus = new global::System.Data.DataColumn("W4PCStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW4PCStatus);
                this.columnLeaves = new global::System.Data.DataColumn("Leaves", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaves);
                this.columnQuantityPicked = new global::System.Data.DataColumn("QuantityPicked", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityPicked);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnEstimateID = new global::System.Data.DataColumn("EstimateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateID);
                this.columnQuantityPacked = new global::System.Data.DataColumn("QuantityPacked", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityPacked);
                this.columnOrderID = new global::System.Data.DataColumn("OrderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderID);
                this.columnJDFJobName = new global::System.Data.DataColumn("JDFJobName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJDFJobName);
                this.columnDateModified = new global::System.Data.DataColumn("DateModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModified);
                this.columnModifiedByUserID = new global::System.Data.DataColumn("ModifiedByUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedByUserID);
                this.columnChiliDocumentID = new global::System.Data.DataColumn("ChiliDocumentID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChiliDocumentID);
                this.columnAssetID = new global::System.Data.DataColumn("AssetID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetID);
                this.columnParentOrderLineID = new global::System.Data.DataColumn("ParentOrderLineID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentOrderLineID);
                this.columnParentOrderID = new global::System.Data.DataColumn("ParentOrderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentOrderID);
                this.columnIsConfigurable = new global::System.Data.DataColumn("IsConfigurable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsConfigurable);
                this.columnSalesTaxCodeID = new global::System.Data.DataColumn("SalesTaxCodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTaxCodeID);
                this.columnSalesTaxItemID = new global::System.Data.DataColumn("SalesTaxItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTaxItemID);
                this.columnBOMRevision = new global::System.Data.DataColumn("BOMRevision", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOMRevision);
                this.columnTransID = new global::System.Data.DataColumn("TransID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnUseDiscountMatrix.AllowDBNull = false;
                this.columnOrderNo.AllowDBNull = false;
                this.columnOrderNo.MaxLength = 32;
                this.columnProductCode.MaxLength = 32;
                this.columnDescription.MaxLength = 255;
                this.columnQuantity.AllowDBNull = false;
                this.columnNettAmount.AllowDBNull = false;
                this.columnVatCode.MaxLength = 2;
                this.columnVatAmount.AllowDBNull = false;
                this.columnTotal.AllowDBNull = false;
                this.columnDeliveryCode.MaxLength = 32;
                this.columnDeliveryName.MaxLength = 64;
                this.columnUnitPrice.AllowDBNull = false;
                this.columnPricingunits.MaxLength = 32;
                this.columnNominalCode.MaxLength = 32;
                this.columnCostCentre.MaxLength = 32;
                this.columnDepartment.MaxLength = 32;
                this.columnQuantityDelivered.AllowDBNull = false;
                this.columnQuantityInvoiced.AllowDBNull = false;
                this.columnJobNo.MaxLength = 32;
                this.columnProductID.AllowDBNull = false;
                this.columnOriginalOrderLineID.AllowDBNull = false;
                this.columnDiscountPerc.AllowDBNull = false;
                this.columnCarriageVatCode.MaxLength = 2;
                this.columnCarriageNetAmount.AllowDBNull = false;
                this.columnCarriageVatAmount.AllowDBNull = false;
                this.columnCarriageNominal.MaxLength = 32;
                this.columnCarriageCostCentre.MaxLength = 32;
                this.columnCarriageDepartment.MaxLength = 32;
                this.columnLineNumber.AllowDBNull = false;
                this.columnQuantityAllocated.AllowDBNull = false;
                this.columnRef1.MaxLength = 128;
                this.columnRef2.MaxLength = 128;
                this.columnNumberOfDistributions.AllowDBNull = false;
                this.columnForeignUnitPrice.AllowDBNull = false;
                this.columnForeignNettAmount.AllowDBNull = false;
                this.columnForeignVatAmount.AllowDBNull = false;
                this.columnForeignCarriageNet.AllowDBNull = false;
                this.columnForeignCarriageVat.AllowDBNull = false;
                this.columnQuantityConfirmed.AllowDBNull = false;
                this.columnInstructions.MaxLength = 1024;
                this.columnTransRef.MaxLength = 32;
                this.columnTransJobNo.MaxLength = 32;
                this.columnTransSell.AllowDBNull = false;
                this.columnDiscountType.AllowDBNull = false;
                this.columnDiscountAmount.AllowDBNull = false;
                this.columnPages.MaxLength = 16;
                this.columnW4PCStatus.MaxLength = 16;
                this.columnLeaves.AllowDBNull = false;
                this.columnQuantityPicked.AllowDBNull = false;
                this.columnWeight.AllowDBNull = false;
                this.columnEstimateID.AllowDBNull = false;
                this.columnQuantityPacked.AllowDBNull = false;
                this.columnOrderID.AllowDBNull = false;
                this.columnJDFJobName.MaxLength = 255;
                this.columnChiliDocumentID.MaxLength = 255;
                this.columnParentOrderLineID.AllowDBNull = false;
                this.columnParentOrderID.AllowDBNull = false;
                this.columnIsConfigurable.AllowDBNull = false;
                this.columnSalesTaxCodeID.AllowDBNull = false;
                this.columnSalesTaxItemID.AllowDBNull = false;
                this.columnBOMRevision.AllowDBNull = false;
                this.columnTransID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrderLineRow NewOrderLineRow() {
                return ((OrderLineRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrderLineRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OrderLineRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrderLineRowChanged != null)) {
                    this.OrderLineRowChanged(this, new OrderLineRowChangeEvent(((OrderLineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrderLineRowChanging != null)) {
                    this.OrderLineRowChanging(this, new OrderLineRowChangeEvent(((OrderLineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrderLineRowDeleted != null)) {
                    this.OrderLineRowDeleted(this, new OrderLineRowChangeEvent(((OrderLineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrderLineRowDeleting != null)) {
                    this.OrderLineRowDeleting(this, new OrderLineRowChangeEvent(((OrderLineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOrderLineRow(OrderLineRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ThardataDataSet ds = new ThardataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrderLineDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OriginationMaterialInputDataTable : global::System.Data.TypedTableBase<OriginationMaterialInputRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnIsAutoPrintingEntry;
            
            private global::System.Data.DataColumn columnIsAutoManuallyChanged;
            
            private global::System.Data.DataColumn columnPermFixed;
            
            private global::System.Data.DataColumn columnQuantFixed;
            
            private global::System.Data.DataColumn columnPriceFixed;
            
            private global::System.Data.DataColumn columnEstimateID;
            
            private global::System.Data.DataColumn columnPaperRef;
            
            private global::System.Data.DataColumn columnUniquePaperNumber;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnValuedb;
            
            private global::System.Data.DataColumn columnRunOn;
            
            private global::System.Data.DataColumn columnUnits;
            
            private global::System.Data.DataColumn columnUseMinCharge;
            
            private global::System.Data.DataColumn columnMinCharge;
            
            private global::System.Data.DataColumn columnEstimateHeaderRef;
            
            private global::System.Data.DataColumn columnAnalysisCode;
            
            private global::System.Data.DataColumn columnOperationNo;
            
            private global::System.Data.DataColumn columnCostCentre;
            
            private global::System.Data.DataColumn columnForeignCurrency;
            
            private global::System.Data.DataColumn columnForeignValue;
            
            private global::System.Data.DataColumn columnComponentID;
            
            private global::System.Data.DataColumn columnUniqueComponentNumber;
            
            private global::System.Data.DataColumn columnSellingRate;
            
            private global::System.Data.DataColumn columnSellingValue;
            
            private global::System.Data.DataColumn columnSellingRunOn;
            
            private global::System.Data.DataColumn columnSellingPriceLocked;
            
            private global::System.Data.DataColumn columnSizeCode;
            
            private global::System.Data.DataColumn columnLineNumber;
            
            private global::System.Data.DataColumn columnProcessTypeOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OriginationMaterialInputDataTable() {
                this.TableName = "OriginationMaterialInput";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OriginationMaterialInputDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OriginationMaterialInputDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsAutoPrintingEntryColumn {
                get {
                    return this.columnIsAutoPrintingEntry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsAutoManuallyChangedColumn {
                get {
                    return this.columnIsAutoManuallyChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PermFixedColumn {
                get {
                    return this.columnPermFixed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantFixedColumn {
                get {
                    return this.columnQuantFixed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceFixedColumn {
                get {
                    return this.columnPriceFixed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimateIDColumn {
                get {
                    return this.columnEstimateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaperRefColumn {
                get {
                    return this.columnPaperRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UniquePaperNumberColumn {
                get {
                    return this.columnUniquePaperNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValuedbColumn {
                get {
                    return this.columnValuedb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RunOnColumn {
                get {
                    return this.columnRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitsColumn {
                get {
                    return this.columnUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseMinChargeColumn {
                get {
                    return this.columnUseMinCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinChargeColumn {
                get {
                    return this.columnMinCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimateHeaderRefColumn {
                get {
                    return this.columnEstimateHeaderRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnalysisCodeColumn {
                get {
                    return this.columnAnalysisCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OperationNoColumn {
                get {
                    return this.columnOperationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostCentreColumn {
                get {
                    return this.columnCostCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignCurrencyColumn {
                get {
                    return this.columnForeignCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForeignValueColumn {
                get {
                    return this.columnForeignValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComponentIDColumn {
                get {
                    return this.columnComponentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UniqueComponentNumberColumn {
                get {
                    return this.columnUniqueComponentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellingRateColumn {
                get {
                    return this.columnSellingRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellingValueColumn {
                get {
                    return this.columnSellingValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellingRunOnColumn {
                get {
                    return this.columnSellingRunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellingPriceLockedColumn {
                get {
                    return this.columnSellingPriceLocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SizeCodeColumn {
                get {
                    return this.columnSizeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LineNumberColumn {
                get {
                    return this.columnLineNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessTypeOrderColumn {
                get {
                    return this.columnProcessTypeOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OriginationMaterialInputRow this[int index] {
                get {
                    return ((OriginationMaterialInputRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OriginationMaterialInputRowChangeEventHandler OriginationMaterialInputRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OriginationMaterialInputRowChangeEventHandler OriginationMaterialInputRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OriginationMaterialInputRowChangeEventHandler OriginationMaterialInputRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OriginationMaterialInputRowChangeEventHandler OriginationMaterialInputRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOriginationMaterialInputRow(OriginationMaterialInputRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OriginationMaterialInputRow AddOriginationMaterialInputRow(
                        bool IsAutoPrintingEntry, 
                        bool IsAutoManuallyChanged, 
                        bool PermFixed, 
                        bool QuantFixed, 
                        bool PriceFixed, 
                        MainEstimateDetailsRow parentMainEstimateDetailsRowByFK_OriginationMaterialInput_MainEstimateDetails, 
                        string PaperRef, 
                        int UniquePaperNumber, 
                        string Code, 
                        string Description, 
                        double Quantity, 
                        double Price, 
                        double Valuedb, 
                        double RunOn, 
                        string Units, 
                        bool UseMinCharge, 
                        double MinCharge, 
                        string EstimateHeaderRef, 
                        string AnalysisCode, 
                        short OperationNo, 
                        string CostCentre, 
                        int ForeignCurrency, 
                        double ForeignValue, 
                        int ComponentID, 
                        int UniqueComponentNumber, 
                        double SellingRate, 
                        double SellingValue, 
                        double SellingRunOn, 
                        byte SellingPriceLocked, 
                        string SizeCode, 
                        short LineNumber, 
                        short ProcessTypeOrder) {
                OriginationMaterialInputRow rowOriginationMaterialInputRow = ((OriginationMaterialInputRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        IsAutoPrintingEntry,
                        IsAutoManuallyChanged,
                        PermFixed,
                        QuantFixed,
                        PriceFixed,
                        null,
                        PaperRef,
                        UniquePaperNumber,
                        Code,
                        Description,
                        Quantity,
                        Price,
                        Valuedb,
                        RunOn,
                        Units,
                        UseMinCharge,
                        MinCharge,
                        EstimateHeaderRef,
                        AnalysisCode,
                        OperationNo,
                        CostCentre,
                        ForeignCurrency,
                        ForeignValue,
                        ComponentID,
                        UniqueComponentNumber,
                        SellingRate,
                        SellingValue,
                        SellingRunOn,
                        SellingPriceLocked,
                        SizeCode,
                        LineNumber,
                        ProcessTypeOrder};
                if ((parentMainEstimateDetailsRowByFK_OriginationMaterialInput_MainEstimateDetails != null)) {
                    columnValuesArray[6] = parentMainEstimateDetailsRowByFK_OriginationMaterialInput_MainEstimateDetails[0];
                }
                rowOriginationMaterialInputRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOriginationMaterialInputRow);
                return rowOriginationMaterialInputRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OriginationMaterialInputRow FindByID(int ID) {
                return ((OriginationMaterialInputRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OriginationMaterialInputDataTable cln = ((OriginationMaterialInputDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OriginationMaterialInputDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnIsAutoPrintingEntry = base.Columns["IsAutoPrintingEntry"];
                this.columnIsAutoManuallyChanged = base.Columns["IsAutoManuallyChanged"];
                this.columnPermFixed = base.Columns["PermFixed"];
                this.columnQuantFixed = base.Columns["QuantFixed"];
                this.columnPriceFixed = base.Columns["PriceFixed"];
                this.columnEstimateID = base.Columns["EstimateID"];
                this.columnPaperRef = base.Columns["PaperRef"];
                this.columnUniquePaperNumber = base.Columns["UniquePaperNumber"];
                this.columnCode = base.Columns["Code"];
                this.columnDescription = base.Columns["Description"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnPrice = base.Columns["Price"];
                this.columnValuedb = base.Columns["Valuedb"];
                this.columnRunOn = base.Columns["RunOn"];
                this.columnUnits = base.Columns["Units"];
                this.columnUseMinCharge = base.Columns["UseMinCharge"];
                this.columnMinCharge = base.Columns["MinCharge"];
                this.columnEstimateHeaderRef = base.Columns["EstimateHeaderRef"];
                this.columnAnalysisCode = base.Columns["AnalysisCode"];
                this.columnOperationNo = base.Columns["OperationNo"];
                this.columnCostCentre = base.Columns["CostCentre"];
                this.columnForeignCurrency = base.Columns["ForeignCurrency"];
                this.columnForeignValue = base.Columns["ForeignValue"];
                this.columnComponentID = base.Columns["ComponentID"];
                this.columnUniqueComponentNumber = base.Columns["UniqueComponentNumber"];
                this.columnSellingRate = base.Columns["SellingRate"];
                this.columnSellingValue = base.Columns["SellingValue"];
                this.columnSellingRunOn = base.Columns["SellingRunOn"];
                this.columnSellingPriceLocked = base.Columns["SellingPriceLocked"];
                this.columnSizeCode = base.Columns["SizeCode"];
                this.columnLineNumber = base.Columns["LineNumber"];
                this.columnProcessTypeOrder = base.Columns["ProcessTypeOrder"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIsAutoPrintingEntry = new global::System.Data.DataColumn("IsAutoPrintingEntry", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAutoPrintingEntry);
                this.columnIsAutoManuallyChanged = new global::System.Data.DataColumn("IsAutoManuallyChanged", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAutoManuallyChanged);
                this.columnPermFixed = new global::System.Data.DataColumn("PermFixed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermFixed);
                this.columnQuantFixed = new global::System.Data.DataColumn("QuantFixed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantFixed);
                this.columnPriceFixed = new global::System.Data.DataColumn("PriceFixed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceFixed);
                this.columnEstimateID = new global::System.Data.DataColumn("EstimateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateID);
                this.columnPaperRef = new global::System.Data.DataColumn("PaperRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaperRef);
                this.columnUniquePaperNumber = new global::System.Data.DataColumn("UniquePaperNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUniquePaperNumber);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnValuedb = new global::System.Data.DataColumn("Valuedb", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValuedb);
                this.columnRunOn = new global::System.Data.DataColumn("RunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunOn);
                this.columnUnits = new global::System.Data.DataColumn("Units", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnits);
                this.columnUseMinCharge = new global::System.Data.DataColumn("UseMinCharge", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseMinCharge);
                this.columnMinCharge = new global::System.Data.DataColumn("MinCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinCharge);
                this.columnEstimateHeaderRef = new global::System.Data.DataColumn("EstimateHeaderRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateHeaderRef);
                this.columnAnalysisCode = new global::System.Data.DataColumn("AnalysisCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnalysisCode);
                this.columnOperationNo = new global::System.Data.DataColumn("OperationNo", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationNo);
                this.columnCostCentre = new global::System.Data.DataColumn("CostCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCentre);
                this.columnForeignCurrency = new global::System.Data.DataColumn("ForeignCurrency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignCurrency);
                this.columnForeignValue = new global::System.Data.DataColumn("ForeignValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignValue);
                this.columnComponentID = new global::System.Data.DataColumn("ComponentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComponentID);
                this.columnUniqueComponentNumber = new global::System.Data.DataColumn("UniqueComponentNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUniqueComponentNumber);
                this.columnSellingRate = new global::System.Data.DataColumn("SellingRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingRate);
                this.columnSellingValue = new global::System.Data.DataColumn("SellingValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingValue);
                this.columnSellingRunOn = new global::System.Data.DataColumn("SellingRunOn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingRunOn);
                this.columnSellingPriceLocked = new global::System.Data.DataColumn("SellingPriceLocked", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingPriceLocked);
                this.columnSizeCode = new global::System.Data.DataColumn("SizeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeCode);
                this.columnLineNumber = new global::System.Data.DataColumn("LineNumber", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineNumber);
                this.columnProcessTypeOrder = new global::System.Data.DataColumn("ProcessTypeOrder", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessTypeOrder);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnIsAutoPrintingEntry.AllowDBNull = false;
                this.columnIsAutoManuallyChanged.AllowDBNull = false;
                this.columnPermFixed.AllowDBNull = false;
                this.columnQuantFixed.AllowDBNull = false;
                this.columnPriceFixed.AllowDBNull = false;
                this.columnPaperRef.MaxLength = 32;
                this.columnCode.MaxLength = 32;
                this.columnDescription.MaxLength = 128;
                this.columnUnits.MaxLength = 32;
                this.columnUseMinCharge.AllowDBNull = false;
                this.columnEstimateHeaderRef.MaxLength = 32;
                this.columnAnalysisCode.MaxLength = 32;
                this.columnCostCentre.MaxLength = 32;
                this.columnForeignCurrency.AllowDBNull = false;
                this.columnSizeCode.MaxLength = 32;
                this.columnProcessTypeOrder.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OriginationMaterialInputRow NewOriginationMaterialInputRow() {
                return ((OriginationMaterialInputRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OriginationMaterialInputRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OriginationMaterialInputRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OriginationMaterialInputRowChanged != null)) {
                    this.OriginationMaterialInputRowChanged(this, new OriginationMaterialInputRowChangeEvent(((OriginationMaterialInputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OriginationMaterialInputRowChanging != null)) {
                    this.OriginationMaterialInputRowChanging(this, new OriginationMaterialInputRowChangeEvent(((OriginationMaterialInputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OriginationMaterialInputRowDeleted != null)) {
                    this.OriginationMaterialInputRowDeleted(this, new OriginationMaterialInputRowChangeEvent(((OriginationMaterialInputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OriginationMaterialInputRowDeleting != null)) {
                    this.OriginationMaterialInputRowDeleting(this, new OriginationMaterialInputRowChangeEvent(((OriginationMaterialInputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOriginationMaterialInputRow(OriginationMaterialInputRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ThardataDataSet ds = new ThardataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OriginationMaterialInputDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductDataTable : global::System.Data.TypedTableBase<ProductRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnManufacturedProduct;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnColour;
            
            private global::System.Data.DataColumn columndbGroup;
            
            private global::System.Data.DataColumn columnAnalysisType;
            
            private global::System.Data.DataColumn columnManufacturer;
            
            private global::System.Data.DataColumn columnReOrderQuantity;
            
            private global::System.Data.DataColumn columnNormalOrder;
            
            private global::System.Data.DataColumn columnPricingType;
            
            private global::System.Data.DataColumn columnAvailable;
            
            private global::System.Data.DataColumn columnSizeCode;
            
            private global::System.Data.DataColumn columnDepthMM;
            
            private global::System.Data.DataColumn columnWidthMM;
            
            private global::System.Data.DataColumn columnIgnoreStockLevels;
            
            private global::System.Data.DataColumn columnPacked;
            
            private global::System.Data.DataColumn columnLastChanged;
            
            private global::System.Data.DataColumn columnMinCharge;
            
            private global::System.Data.DataColumn columnEstType;
            
            private global::System.Data.DataColumn columnEstUnits;
            
            private global::System.Data.DataColumn columnEstTonnePrice;
            
            private global::System.Data.DataColumn columnCopier;
            
            private global::System.Data.DataColumn columnStockLocation;
            
            private global::System.Data.DataColumn columnEstAnalysisCode;
            
            private global::System.Data.DataColumn columnVatCode;
            
            private global::System.Data.DataColumn columnSupplierVatCode;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnCostCentre;
            
            private global::System.Data.DataColumn columnDepartment;
            
            private global::System.Data.DataColumn columnSellingPrice;
            
            private global::System.Data.DataColumn columnExtraFlags;
            
            private global::System.Data.DataColumn columnPNominal;
            
            private global::System.Data.DataColumn columnPCostCentre;
            
            private global::System.Data.DataColumn columnPDepartment;
            
            private global::System.Data.DataColumn columnCurrentCost;
            
            private global::System.Data.DataColumn columnExcludeRequisitions;
            
            private global::System.Data.DataColumn columnStkRef1;
            
            private global::System.Data.DataColumn columnStkRef2;
            
            private global::System.Data.DataColumn columnStkRef3;
            
            private global::System.Data.DataColumn columnStkRef4;
            
            private global::System.Data.DataColumn columnStkRef5;
            
            private global::System.Data.DataColumn columnStkRef6;
            
            private global::System.Data.DataColumn columnStkRef7;
            
            private global::System.Data.DataColumn columnStkRef8;
            
            private global::System.Data.DataColumn columnStkRef9;
            
            private global::System.Data.DataColumn columnStkRef10;
            
            private global::System.Data.DataColumn columnIsRollLabel;
            
            private global::System.Data.DataColumn columnInvoiceBalance;
            
            private global::System.Data.DataColumn columnSupplierRef;
            
            private global::System.Data.DataColumn columnLeadTime;
            
            private global::System.Data.DataColumn columnSupplierCode;
            
            private global::System.Data.DataColumn columnWebURL;
            
            private global::System.Data.DataColumn columnPurchaseUnits;
            
            private global::System.Data.DataColumn columnSupplierCost;
            
            private global::System.Data.DataColumn columnLastDocumentNumber;
            
            private global::System.Data.DataColumn columnIsCallOffItem;
            
            private global::System.Data.DataColumn columnInvoiceCostPrice;
            
            private global::System.Data.DataColumn columnExtraInfo;
            
            private global::System.Data.DataColumn columnSOPLeadTime;
            
            private global::System.Data.DataColumn columnNoHistory;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnSuppDescUnits;
            
            private global::System.Data.DataColumn columnLongestEdge;
            
            private global::System.Data.DataColumn columnCommodityCode;
            
            private global::System.Data.DataColumn columnCountryOfOrigin;
            
            private global::System.Data.DataColumn columnPurchaseCurrency;
            
            private global::System.Data.DataColumn columnSellingCurrency;
            
            private global::System.Data.DataColumn columnEstimateID;
            
            private global::System.Data.DataColumn columnLastSupplierCode;
            
            private global::System.Data.DataColumn columnLastReceivedQuantity;
            
            private global::System.Data.DataColumn columnLastPurchasePrice;
            
            private global::System.Data.DataColumn columnLastPurchaseDate;
            
            private global::System.Data.DataColumn columnLinkedOperationID;
            
            private global::System.Data.DataColumn columnLinkedOperatorID;
            
            private global::System.Data.DataColumn columnExpiryStatus;
            
            private global::System.Data.DataColumn columnExpiresOnDate;
            
            private global::System.Data.DataColumn columnAlternativeProduct;
            
            private global::System.Data.DataColumn columnAlternativeProductSize;
            
            private global::System.Data.DataColumn columnSecondAltProduct;
            
            private global::System.Data.DataColumn columnSecondAltProductSize;
            
            private global::System.Data.DataColumn columnGeneric;
            
            private global::System.Data.DataColumn columnIsComposite;
            
            private global::System.Data.DataColumn columnHeightMM;
            
            private global::System.Data.DataColumn columnPalletDepth;
            
            private global::System.Data.DataColumn columnPalletWidth;
            
            private global::System.Data.DataColumn columnPalletHeight;
            
            private global::System.Data.DataColumn columnPalletPacked;
            
            private global::System.Data.DataColumn columnPalletWeight;
            
            private global::System.Data.DataColumn columnLocationGroup;
            
            private global::System.Data.DataColumn columnUseFullPack;
            
            private global::System.Data.DataColumn columnPopulatedQuantity;
            
            private global::System.Data.DataColumn columnPopulatedWeight;
            
            private global::System.Data.DataColumn columnPackedHeight;
            
            private global::System.Data.DataColumn columnPackedDepth;
            
            private global::System.Data.DataColumn columnPackedWidth;
            
            private global::System.Data.DataColumn columnPackedWeight;
            
            private global::System.Data.DataColumn columnBoxedIn;
            
            private global::System.Data.DataColumn columnEstDescriptionContentID;
            
            private global::System.Data.DataColumn columnPOAuthorityTypeID;
            
            private global::System.Data.DataColumn columnAutoPost;
            
            private global::System.Data.DataColumn columnCertificationID;
            
            private global::System.Data.DataColumn columnClaim;
            
            private global::System.Data.DataColumn columnCodeAlias;
            
            private global::System.Data.DataColumn columnBoardCode;
            
            private global::System.Data.DataColumn columnGrainDirection;
            
            private global::System.Data.DataColumn columnAllowCustomSize;
            
            private global::System.Data.DataColumn columnBasketAuthorityTypeID;
            
            private global::System.Data.DataColumn columnParentJob;
            
            private global::System.Data.DataColumn columnNumberControlled;
            
            private global::System.Data.DataColumn columnOnDemand;
            
            private global::System.Data.DataColumn columnGradeID;
            
            private global::System.Data.DataColumn columnMinQty;
            
            private global::System.Data.DataColumn columnMaxQty;
            
            private global::System.Data.DataColumn columnInactive;
            
            private global::System.Data.DataColumn columnAutomationRule;
            
            private global::System.Data.DataColumn columnFileUpload;
            
            private global::System.Data.DataColumn columnDateModified;
            
            private global::System.Data.DataColumn columnModifiedByUserID;
            
            private global::System.Data.DataColumn columnReplacementMaterial;
            
            private global::System.Data.DataColumn columnListAlias;
            
            private global::System.Data.DataColumn columnForceLocation;
            
            private global::System.Data.DataColumn columnIssueAtCost;
            
            private global::System.Data.DataColumn columnHeightMarginMM;
            
            private global::System.Data.DataColumn columnWidthMarginMM;
            
            private global::System.Data.DataColumn columnXPosition;
            
            private global::System.Data.DataColumn columnYPosition;
            
            private global::System.Data.DataColumn columnUseLeastCost;
            
            private global::System.Data.DataColumn columnCycleCount;
            
            private global::System.Data.DataColumn columnProductTypes_ID;
            
            private global::System.Data.DataColumn columnIsConfigurable;
            
            private global::System.Data.DataColumn columnMinimumQuantity;
            
            private global::System.Data.DataColumn columnIsCoatedOneSide;
            
            private global::System.Data.DataColumn columnBasicSizesID;
            
            private global::System.Data.DataColumn columnSalesTaxCodeID;
            
            private global::System.Data.DataColumn columnUseTaxCodeID;
            
            private global::System.Data.DataColumn columnConsignmentBalance;
            
            private global::System.Data.DataColumn columnBOMRevision;
            
            private global::System.Data.DataColumn columnPriceListMaterialGroupID;
            
            private global::System.Data.DataColumn columnAltWeight;
            
            private global::System.Data.DataColumn columnCanOverridePackQuantity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductDataTable() {
                this.TableName = "Product";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManufacturedProductColumn {
                get {
                    return this.columnManufacturedProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColourColumn {
                get {
                    return this.columnColour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dbGroupColumn {
                get {
                    return this.columndbGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnalysisTypeColumn {
                get {
                    return this.columnAnalysisType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManufacturerColumn {
                get {
                    return this.columnManufacturer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReOrderQuantityColumn {
                get {
                    return this.columnReOrderQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NormalOrderColumn {
                get {
                    return this.columnNormalOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PricingTypeColumn {
                get {
                    return this.columnPricingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AvailableColumn {
                get {
                    return this.columnAvailable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SizeCodeColumn {
                get {
                    return this.columnSizeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepthMMColumn {
                get {
                    return this.columnDepthMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WidthMMColumn {
                get {
                    return this.columnWidthMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IgnoreStockLevelsColumn {
                get {
                    return this.columnIgnoreStockLevels;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackedColumn {
                get {
                    return this.columnPacked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastChangedColumn {
                get {
                    return this.columnLastChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinChargeColumn {
                get {
                    return this.columnMinCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstTypeColumn {
                get {
                    return this.columnEstType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstUnitsColumn {
                get {
                    return this.columnEstUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstTonnePriceColumn {
                get {
                    return this.columnEstTonnePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CopierColumn {
                get {
                    return this.columnCopier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockLocationColumn {
                get {
                    return this.columnStockLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstAnalysisCodeColumn {
                get {
                    return this.columnEstAnalysisCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VatCodeColumn {
                get {
                    return this.columnVatCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierVatCodeColumn {
                get {
                    return this.columnSupplierVatCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CostCentreColumn {
                get {
                    return this.columnCostCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellingPriceColumn {
                get {
                    return this.columnSellingPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtraFlagsColumn {
                get {
                    return this.columnExtraFlags;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNominalColumn {
                get {
                    return this.columnPNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCostCentreColumn {
                get {
                    return this.columnPCostCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PDepartmentColumn {
                get {
                    return this.columnPDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentCostColumn {
                get {
                    return this.columnCurrentCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcludeRequisitionsColumn {
                get {
                    return this.columnExcludeRequisitions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StkRef1Column {
                get {
                    return this.columnStkRef1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StkRef2Column {
                get {
                    return this.columnStkRef2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StkRef3Column {
                get {
                    return this.columnStkRef3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StkRef4Column {
                get {
                    return this.columnStkRef4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StkRef5Column {
                get {
                    return this.columnStkRef5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StkRef6Column {
                get {
                    return this.columnStkRef6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StkRef7Column {
                get {
                    return this.columnStkRef7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StkRef8Column {
                get {
                    return this.columnStkRef8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StkRef9Column {
                get {
                    return this.columnStkRef9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StkRef10Column {
                get {
                    return this.columnStkRef10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsRollLabelColumn {
                get {
                    return this.columnIsRollLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceBalanceColumn {
                get {
                    return this.columnInvoiceBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierRefColumn {
                get {
                    return this.columnSupplierRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LeadTimeColumn {
                get {
                    return this.columnLeadTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierCodeColumn {
                get {
                    return this.columnSupplierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WebURLColumn {
                get {
                    return this.columnWebURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchaseUnitsColumn {
                get {
                    return this.columnPurchaseUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierCostColumn {
                get {
                    return this.columnSupplierCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastDocumentNumberColumn {
                get {
                    return this.columnLastDocumentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCallOffItemColumn {
                get {
                    return this.columnIsCallOffItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceCostPriceColumn {
                get {
                    return this.columnInvoiceCostPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtraInfoColumn {
                get {
                    return this.columnExtraInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SOPLeadTimeColumn {
                get {
                    return this.columnSOPLeadTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoHistoryColumn {
                get {
                    return this.columnNoHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuppDescUnitsColumn {
                get {
                    return this.columnSuppDescUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LongestEdgeColumn {
                get {
                    return this.columnLongestEdge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommodityCodeColumn {
                get {
                    return this.columnCommodityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryOfOriginColumn {
                get {
                    return this.columnCountryOfOrigin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchaseCurrencyColumn {
                get {
                    return this.columnPurchaseCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellingCurrencyColumn {
                get {
                    return this.columnSellingCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstimateIDColumn {
                get {
                    return this.columnEstimateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSupplierCodeColumn {
                get {
                    return this.columnLastSupplierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastReceivedQuantityColumn {
                get {
                    return this.columnLastReceivedQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastPurchasePriceColumn {
                get {
                    return this.columnLastPurchasePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastPurchaseDateColumn {
                get {
                    return this.columnLastPurchaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkedOperationIDColumn {
                get {
                    return this.columnLinkedOperationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LinkedOperatorIDColumn {
                get {
                    return this.columnLinkedOperatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpiryStatusColumn {
                get {
                    return this.columnExpiryStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpiresOnDateColumn {
                get {
                    return this.columnExpiresOnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternativeProductColumn {
                get {
                    return this.columnAlternativeProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternativeProductSizeColumn {
                get {
                    return this.columnAlternativeProductSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecondAltProductColumn {
                get {
                    return this.columnSecondAltProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecondAltProductSizeColumn {
                get {
                    return this.columnSecondAltProductSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenericColumn {
                get {
                    return this.columnGeneric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCompositeColumn {
                get {
                    return this.columnIsComposite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeightMMColumn {
                get {
                    return this.columnHeightMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PalletDepthColumn {
                get {
                    return this.columnPalletDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PalletWidthColumn {
                get {
                    return this.columnPalletWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PalletHeightColumn {
                get {
                    return this.columnPalletHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PalletPackedColumn {
                get {
                    return this.columnPalletPacked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PalletWeightColumn {
                get {
                    return this.columnPalletWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationGroupColumn {
                get {
                    return this.columnLocationGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseFullPackColumn {
                get {
                    return this.columnUseFullPack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PopulatedQuantityColumn {
                get {
                    return this.columnPopulatedQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PopulatedWeightColumn {
                get {
                    return this.columnPopulatedWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackedHeightColumn {
                get {
                    return this.columnPackedHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackedDepthColumn {
                get {
                    return this.columnPackedDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackedWidthColumn {
                get {
                    return this.columnPackedWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackedWeightColumn {
                get {
                    return this.columnPackedWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoxedInColumn {
                get {
                    return this.columnBoxedIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstDescriptionContentIDColumn {
                get {
                    return this.columnEstDescriptionContentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn POAuthorityTypeIDColumn {
                get {
                    return this.columnPOAuthorityTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutoPostColumn {
                get {
                    return this.columnAutoPost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CertificationIDColumn {
                get {
                    return this.columnCertificationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClaimColumn {
                get {
                    return this.columnClaim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeAliasColumn {
                get {
                    return this.columnCodeAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoardCodeColumn {
                get {
                    return this.columnBoardCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrainDirectionColumn {
                get {
                    return this.columnGrainDirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowCustomSizeColumn {
                get {
                    return this.columnAllowCustomSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BasketAuthorityTypeIDColumn {
                get {
                    return this.columnBasketAuthorityTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentJobColumn {
                get {
                    return this.columnParentJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberControlledColumn {
                get {
                    return this.columnNumberControlled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OnDemandColumn {
                get {
                    return this.columnOnDemand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GradeIDColumn {
                get {
                    return this.columnGradeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinQtyColumn {
                get {
                    return this.columnMinQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxQtyColumn {
                get {
                    return this.columnMaxQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InactiveColumn {
                get {
                    return this.columnInactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AutomationRuleColumn {
                get {
                    return this.columnAutomationRule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileUploadColumn {
                get {
                    return this.columnFileUpload;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifiedColumn {
                get {
                    return this.columnDateModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedByUserIDColumn {
                get {
                    return this.columnModifiedByUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReplacementMaterialColumn {
                get {
                    return this.columnReplacementMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ListAliasColumn {
                get {
                    return this.columnListAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForceLocationColumn {
                get {
                    return this.columnForceLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IssueAtCostColumn {
                get {
                    return this.columnIssueAtCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeightMarginMMColumn {
                get {
                    return this.columnHeightMarginMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WidthMarginMMColumn {
                get {
                    return this.columnWidthMarginMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn XPositionColumn {
                get {
                    return this.columnXPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YPositionColumn {
                get {
                    return this.columnYPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseLeastCostColumn {
                get {
                    return this.columnUseLeastCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleCountColumn {
                get {
                    return this.columnCycleCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTypes_IDColumn {
                get {
                    return this.columnProductTypes_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsConfigurableColumn {
                get {
                    return this.columnIsConfigurable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinimumQuantityColumn {
                get {
                    return this.columnMinimumQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCoatedOneSideColumn {
                get {
                    return this.columnIsCoatedOneSide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BasicSizesIDColumn {
                get {
                    return this.columnBasicSizesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesTaxCodeIDColumn {
                get {
                    return this.columnSalesTaxCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseTaxCodeIDColumn {
                get {
                    return this.columnUseTaxCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsignmentBalanceColumn {
                get {
                    return this.columnConsignmentBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BOMRevisionColumn {
                get {
                    return this.columnBOMRevision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceListMaterialGroupIDColumn {
                get {
                    return this.columnPriceListMaterialGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AltWeightColumn {
                get {
                    return this.columnAltWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CanOverridePackQuantityColumn {
                get {
                    return this.columnCanOverridePackQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow this[int index] {
                get {
                    return ((ProductRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProductRow(ProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow AddProductRow(
                        bool ManufacturedProduct, 
                        string Code, 
                        string Description, 
                        double Balance, 
                        byte Type, 
                        double UnitPrice, 
                        string Colour, 
                        string dbGroup, 
                        string AnalysisType, 
                        string Manufacturer, 
                        double ReOrderQuantity, 
                        double NormalOrder, 
                        string PricingType, 
                        double Available, 
                        string SizeCode, 
                        double DepthMM, 
                        double WidthMM, 
                        bool IgnoreStockLevels, 
                        double Packed, 
                        System.DateTime LastChanged, 
                        double MinCharge, 
                        byte EstType, 
                        string EstUnits, 
                        double EstTonnePrice, 
                        bool Copier, 
                        string StockLocation, 
                        string EstAnalysisCode, 
                        string VatCode, 
                        string SupplierVatCode, 
                        string Nominal, 
                        string CostCentre, 
                        string Department, 
                        double SellingPrice, 
                        bool ExtraFlags, 
                        string PNominal, 
                        string PCostCentre, 
                        string PDepartment, 
                        double CurrentCost, 
                        bool ExcludeRequisitions, 
                        string StkRef1, 
                        string StkRef2, 
                        string StkRef3, 
                        string StkRef4, 
                        string StkRef5, 
                        string StkRef6, 
                        string StkRef7, 
                        string StkRef8, 
                        string StkRef9, 
                        string StkRef10, 
                        bool IsRollLabel, 
                        double InvoiceBalance, 
                        string SupplierRef, 
                        short LeadTime, 
                        string SupplierCode, 
                        string WebURL, 
                        string PurchaseUnits, 
                        double SupplierCost, 
                        int LastDocumentNumber, 
                        bool IsCallOffItem, 
                        bool InvoiceCostPrice, 
                        string ExtraInfo, 
                        short SOPLeadTime, 
                        bool NoHistory, 
                        double Weight, 
                        string SuppDescUnits, 
                        bool LongestEdge, 
                        string CommodityCode, 
                        string CountryOfOrigin, 
                        int PurchaseCurrency, 
                        int SellingCurrency, 
                        int EstimateID, 
                        string LastSupplierCode, 
                        double LastReceivedQuantity, 
                        double LastPurchasePrice, 
                        System.DateTime LastPurchaseDate, 
                        int LinkedOperationID, 
                        int LinkedOperatorID, 
                        byte ExpiryStatus, 
                        System.DateTime ExpiresOnDate, 
                        string AlternativeProduct, 
                        string AlternativeProductSize, 
                        string SecondAltProduct, 
                        string SecondAltProductSize, 
                        byte Generic, 
                        bool IsComposite, 
                        double HeightMM, 
                        double PalletDepth, 
                        double PalletWidth, 
                        double PalletHeight, 
                        double PalletPacked, 
                        double PalletWeight, 
                        string LocationGroup, 
                        bool UseFullPack, 
                        int PopulatedQuantity, 
                        double PopulatedWeight, 
                        double PackedHeight, 
                        double PackedDepth, 
                        double PackedWidth, 
                        double PackedWeight, 
                        double BoxedIn, 
                        int EstDescriptionContentID, 
                        int POAuthorityTypeID, 
                        bool AutoPost, 
                        int CertificationID, 
                        string Claim, 
                        string CodeAlias, 
                        string BoardCode, 
                        byte GrainDirection, 
                        bool AllowCustomSize, 
                        int BasketAuthorityTypeID, 
                        string ParentJob, 
                        bool NumberControlled, 
                        byte OnDemand, 
                        int GradeID, 
                        double MinQty, 
                        double MaxQty, 
                        byte Inactive, 
                        byte AutomationRule, 
                        byte FileUpload, 
                        System.DateTime DateModified, 
                        int ModifiedByUserID, 
                        bool ReplacementMaterial, 
                        string ListAlias, 
                        bool ForceLocation, 
                        bool IssueAtCost, 
                        double HeightMarginMM, 
                        double WidthMarginMM, 
                        double XPosition, 
                        double YPosition, 
                        bool UseLeastCost, 
                        int CycleCount, 
                        int ProductTypes_ID, 
                        bool IsConfigurable, 
                        double MinimumQuantity, 
                        bool IsCoatedOneSide, 
                        int BasicSizesID, 
                        int SalesTaxCodeID, 
                        int UseTaxCodeID, 
                        double ConsignmentBalance, 
                        int BOMRevision, 
                        int PriceListMaterialGroupID, 
                        double AltWeight, 
                        bool CanOverridePackQuantity) {
                ProductRow rowProductRow = ((ProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ManufacturedProduct,
                        Code,
                        Description,
                        Balance,
                        Type,
                        UnitPrice,
                        Colour,
                        dbGroup,
                        AnalysisType,
                        Manufacturer,
                        ReOrderQuantity,
                        NormalOrder,
                        PricingType,
                        Available,
                        SizeCode,
                        DepthMM,
                        WidthMM,
                        IgnoreStockLevels,
                        Packed,
                        LastChanged,
                        MinCharge,
                        EstType,
                        EstUnits,
                        EstTonnePrice,
                        Copier,
                        StockLocation,
                        EstAnalysisCode,
                        VatCode,
                        SupplierVatCode,
                        Nominal,
                        CostCentre,
                        Department,
                        SellingPrice,
                        ExtraFlags,
                        PNominal,
                        PCostCentre,
                        PDepartment,
                        CurrentCost,
                        ExcludeRequisitions,
                        StkRef1,
                        StkRef2,
                        StkRef3,
                        StkRef4,
                        StkRef5,
                        StkRef6,
                        StkRef7,
                        StkRef8,
                        StkRef9,
                        StkRef10,
                        IsRollLabel,
                        InvoiceBalance,
                        SupplierRef,
                        LeadTime,
                        SupplierCode,
                        WebURL,
                        PurchaseUnits,
                        SupplierCost,
                        LastDocumentNumber,
                        IsCallOffItem,
                        InvoiceCostPrice,
                        ExtraInfo,
                        SOPLeadTime,
                        NoHistory,
                        Weight,
                        SuppDescUnits,
                        LongestEdge,
                        CommodityCode,
                        CountryOfOrigin,
                        PurchaseCurrency,
                        SellingCurrency,
                        EstimateID,
                        LastSupplierCode,
                        LastReceivedQuantity,
                        LastPurchasePrice,
                        LastPurchaseDate,
                        LinkedOperationID,
                        LinkedOperatorID,
                        ExpiryStatus,
                        ExpiresOnDate,
                        AlternativeProduct,
                        AlternativeProductSize,
                        SecondAltProduct,
                        SecondAltProductSize,
                        Generic,
                        IsComposite,
                        HeightMM,
                        PalletDepth,
                        PalletWidth,
                        PalletHeight,
                        PalletPacked,
                        PalletWeight,
                        LocationGroup,
                        UseFullPack,
                        PopulatedQuantity,
                        PopulatedWeight,
                        PackedHeight,
                        PackedDepth,
                        PackedWidth,
                        PackedWeight,
                        BoxedIn,
                        EstDescriptionContentID,
                        POAuthorityTypeID,
                        AutoPost,
                        CertificationID,
                        Claim,
                        CodeAlias,
                        BoardCode,
                        GrainDirection,
                        AllowCustomSize,
                        BasketAuthorityTypeID,
                        ParentJob,
                        NumberControlled,
                        OnDemand,
                        GradeID,
                        MinQty,
                        MaxQty,
                        Inactive,
                        AutomationRule,
                        FileUpload,
                        DateModified,
                        ModifiedByUserID,
                        ReplacementMaterial,
                        ListAlias,
                        ForceLocation,
                        IssueAtCost,
                        HeightMarginMM,
                        WidthMarginMM,
                        XPosition,
                        YPosition,
                        UseLeastCost,
                        CycleCount,
                        ProductTypes_ID,
                        IsConfigurable,
                        MinimumQuantity,
                        IsCoatedOneSide,
                        BasicSizesID,
                        SalesTaxCodeID,
                        UseTaxCodeID,
                        ConsignmentBalance,
                        BOMRevision,
                        PriceListMaterialGroupID,
                        AltWeight,
                        CanOverridePackQuantity};
                rowProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductRow);
                return rowProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow FindByID(int ID) {
                return ((ProductRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProductDataTable cln = ((ProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnManufacturedProduct = base.Columns["ManufacturedProduct"];
                this.columnCode = base.Columns["Code"];
                this.columnDescription = base.Columns["Description"];
                this.columnBalance = base.Columns["Balance"];
                this.columnType = base.Columns["Type"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnColour = base.Columns["Colour"];
                this.columndbGroup = base.Columns["dbGroup"];
                this.columnAnalysisType = base.Columns["AnalysisType"];
                this.columnManufacturer = base.Columns["Manufacturer"];
                this.columnReOrderQuantity = base.Columns["ReOrderQuantity"];
                this.columnNormalOrder = base.Columns["NormalOrder"];
                this.columnPricingType = base.Columns["PricingType"];
                this.columnAvailable = base.Columns["Available"];
                this.columnSizeCode = base.Columns["SizeCode"];
                this.columnDepthMM = base.Columns["DepthMM"];
                this.columnWidthMM = base.Columns["WidthMM"];
                this.columnIgnoreStockLevels = base.Columns["IgnoreStockLevels"];
                this.columnPacked = base.Columns["Packed"];
                this.columnLastChanged = base.Columns["LastChanged"];
                this.columnMinCharge = base.Columns["MinCharge"];
                this.columnEstType = base.Columns["EstType"];
                this.columnEstUnits = base.Columns["EstUnits"];
                this.columnEstTonnePrice = base.Columns["EstTonnePrice"];
                this.columnCopier = base.Columns["Copier"];
                this.columnStockLocation = base.Columns["StockLocation"];
                this.columnEstAnalysisCode = base.Columns["EstAnalysisCode"];
                this.columnVatCode = base.Columns["VatCode"];
                this.columnSupplierVatCode = base.Columns["SupplierVatCode"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnCostCentre = base.Columns["CostCentre"];
                this.columnDepartment = base.Columns["Department"];
                this.columnSellingPrice = base.Columns["SellingPrice"];
                this.columnExtraFlags = base.Columns["ExtraFlags"];
                this.columnPNominal = base.Columns["PNominal"];
                this.columnPCostCentre = base.Columns["PCostCentre"];
                this.columnPDepartment = base.Columns["PDepartment"];
                this.columnCurrentCost = base.Columns["CurrentCost"];
                this.columnExcludeRequisitions = base.Columns["ExcludeRequisitions"];
                this.columnStkRef1 = base.Columns["StkRef1"];
                this.columnStkRef2 = base.Columns["StkRef2"];
                this.columnStkRef3 = base.Columns["StkRef3"];
                this.columnStkRef4 = base.Columns["StkRef4"];
                this.columnStkRef5 = base.Columns["StkRef5"];
                this.columnStkRef6 = base.Columns["StkRef6"];
                this.columnStkRef7 = base.Columns["StkRef7"];
                this.columnStkRef8 = base.Columns["StkRef8"];
                this.columnStkRef9 = base.Columns["StkRef9"];
                this.columnStkRef10 = base.Columns["StkRef10"];
                this.columnIsRollLabel = base.Columns["IsRollLabel"];
                this.columnInvoiceBalance = base.Columns["InvoiceBalance"];
                this.columnSupplierRef = base.Columns["SupplierRef"];
                this.columnLeadTime = base.Columns["LeadTime"];
                this.columnSupplierCode = base.Columns["SupplierCode"];
                this.columnWebURL = base.Columns["WebURL"];
                this.columnPurchaseUnits = base.Columns["PurchaseUnits"];
                this.columnSupplierCost = base.Columns["SupplierCost"];
                this.columnLastDocumentNumber = base.Columns["LastDocumentNumber"];
                this.columnIsCallOffItem = base.Columns["IsCallOffItem"];
                this.columnInvoiceCostPrice = base.Columns["InvoiceCostPrice"];
                this.columnExtraInfo = base.Columns["ExtraInfo"];
                this.columnSOPLeadTime = base.Columns["SOPLeadTime"];
                this.columnNoHistory = base.Columns["NoHistory"];
                this.columnWeight = base.Columns["Weight"];
                this.columnSuppDescUnits = base.Columns["SuppDescUnits"];
                this.columnLongestEdge = base.Columns["LongestEdge"];
                this.columnCommodityCode = base.Columns["CommodityCode"];
                this.columnCountryOfOrigin = base.Columns["CountryOfOrigin"];
                this.columnPurchaseCurrency = base.Columns["PurchaseCurrency"];
                this.columnSellingCurrency = base.Columns["SellingCurrency"];
                this.columnEstimateID = base.Columns["EstimateID"];
                this.columnLastSupplierCode = base.Columns["LastSupplierCode"];
                this.columnLastReceivedQuantity = base.Columns["LastReceivedQuantity"];
                this.columnLastPurchasePrice = base.Columns["LastPurchasePrice"];
                this.columnLastPurchaseDate = base.Columns["LastPurchaseDate"];
                this.columnLinkedOperationID = base.Columns["LinkedOperationID"];
                this.columnLinkedOperatorID = base.Columns["LinkedOperatorID"];
                this.columnExpiryStatus = base.Columns["ExpiryStatus"];
                this.columnExpiresOnDate = base.Columns["ExpiresOnDate"];
                this.columnAlternativeProduct = base.Columns["AlternativeProduct"];
                this.columnAlternativeProductSize = base.Columns["AlternativeProductSize"];
                this.columnSecondAltProduct = base.Columns["SecondAltProduct"];
                this.columnSecondAltProductSize = base.Columns["SecondAltProductSize"];
                this.columnGeneric = base.Columns["Generic"];
                this.columnIsComposite = base.Columns["IsComposite"];
                this.columnHeightMM = base.Columns["HeightMM"];
                this.columnPalletDepth = base.Columns["PalletDepth"];
                this.columnPalletWidth = base.Columns["PalletWidth"];
                this.columnPalletHeight = base.Columns["PalletHeight"];
                this.columnPalletPacked = base.Columns["PalletPacked"];
                this.columnPalletWeight = base.Columns["PalletWeight"];
                this.columnLocationGroup = base.Columns["LocationGroup"];
                this.columnUseFullPack = base.Columns["UseFullPack"];
                this.columnPopulatedQuantity = base.Columns["PopulatedQuantity"];
                this.columnPopulatedWeight = base.Columns["PopulatedWeight"];
                this.columnPackedHeight = base.Columns["PackedHeight"];
                this.columnPackedDepth = base.Columns["PackedDepth"];
                this.columnPackedWidth = base.Columns["PackedWidth"];
                this.columnPackedWeight = base.Columns["PackedWeight"];
                this.columnBoxedIn = base.Columns["BoxedIn"];
                this.columnEstDescriptionContentID = base.Columns["EstDescriptionContentID"];
                this.columnPOAuthorityTypeID = base.Columns["POAuthorityTypeID"];
                this.columnAutoPost = base.Columns["AutoPost"];
                this.columnCertificationID = base.Columns["CertificationID"];
                this.columnClaim = base.Columns["Claim"];
                this.columnCodeAlias = base.Columns["CodeAlias"];
                this.columnBoardCode = base.Columns["BoardCode"];
                this.columnGrainDirection = base.Columns["GrainDirection"];
                this.columnAllowCustomSize = base.Columns["AllowCustomSize"];
                this.columnBasketAuthorityTypeID = base.Columns["BasketAuthorityTypeID"];
                this.columnParentJob = base.Columns["ParentJob"];
                this.columnNumberControlled = base.Columns["NumberControlled"];
                this.columnOnDemand = base.Columns["OnDemand"];
                this.columnGradeID = base.Columns["GradeID"];
                this.columnMinQty = base.Columns["MinQty"];
                this.columnMaxQty = base.Columns["MaxQty"];
                this.columnInactive = base.Columns["Inactive"];
                this.columnAutomationRule = base.Columns["AutomationRule"];
                this.columnFileUpload = base.Columns["FileUpload"];
                this.columnDateModified = base.Columns["DateModified"];
                this.columnModifiedByUserID = base.Columns["ModifiedByUserID"];
                this.columnReplacementMaterial = base.Columns["ReplacementMaterial"];
                this.columnListAlias = base.Columns["ListAlias"];
                this.columnForceLocation = base.Columns["ForceLocation"];
                this.columnIssueAtCost = base.Columns["IssueAtCost"];
                this.columnHeightMarginMM = base.Columns["HeightMarginMM"];
                this.columnWidthMarginMM = base.Columns["WidthMarginMM"];
                this.columnXPosition = base.Columns["XPosition"];
                this.columnYPosition = base.Columns["YPosition"];
                this.columnUseLeastCost = base.Columns["UseLeastCost"];
                this.columnCycleCount = base.Columns["CycleCount"];
                this.columnProductTypes_ID = base.Columns["ProductTypes_ID"];
                this.columnIsConfigurable = base.Columns["IsConfigurable"];
                this.columnMinimumQuantity = base.Columns["MinimumQuantity"];
                this.columnIsCoatedOneSide = base.Columns["IsCoatedOneSide"];
                this.columnBasicSizesID = base.Columns["BasicSizesID"];
                this.columnSalesTaxCodeID = base.Columns["SalesTaxCodeID"];
                this.columnUseTaxCodeID = base.Columns["UseTaxCodeID"];
                this.columnConsignmentBalance = base.Columns["ConsignmentBalance"];
                this.columnBOMRevision = base.Columns["BOMRevision"];
                this.columnPriceListMaterialGroupID = base.Columns["PriceListMaterialGroupID"];
                this.columnAltWeight = base.Columns["AltWeight"];
                this.columnCanOverridePackQuantity = base.Columns["CanOverridePackQuantity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnManufacturedProduct = new global::System.Data.DataColumn("ManufacturedProduct", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturedProduct);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnColour = new global::System.Data.DataColumn("Colour", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColour);
                this.columndbGroup = new global::System.Data.DataColumn("dbGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndbGroup);
                this.columnAnalysisType = new global::System.Data.DataColumn("AnalysisType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnalysisType);
                this.columnManufacturer = new global::System.Data.DataColumn("Manufacturer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturer);
                this.columnReOrderQuantity = new global::System.Data.DataColumn("ReOrderQuantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReOrderQuantity);
                this.columnNormalOrder = new global::System.Data.DataColumn("NormalOrder", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormalOrder);
                this.columnPricingType = new global::System.Data.DataColumn("PricingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPricingType);
                this.columnAvailable = new global::System.Data.DataColumn("Available", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvailable);
                this.columnSizeCode = new global::System.Data.DataColumn("SizeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeCode);
                this.columnDepthMM = new global::System.Data.DataColumn("DepthMM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepthMM);
                this.columnWidthMM = new global::System.Data.DataColumn("WidthMM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWidthMM);
                this.columnIgnoreStockLevels = new global::System.Data.DataColumn("IgnoreStockLevels", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIgnoreStockLevels);
                this.columnPacked = new global::System.Data.DataColumn("Packed", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPacked);
                this.columnLastChanged = new global::System.Data.DataColumn("LastChanged", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastChanged);
                this.columnMinCharge = new global::System.Data.DataColumn("MinCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinCharge);
                this.columnEstType = new global::System.Data.DataColumn("EstType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstType);
                this.columnEstUnits = new global::System.Data.DataColumn("EstUnits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstUnits);
                this.columnEstTonnePrice = new global::System.Data.DataColumn("EstTonnePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstTonnePrice);
                this.columnCopier = new global::System.Data.DataColumn("Copier", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCopier);
                this.columnStockLocation = new global::System.Data.DataColumn("StockLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockLocation);
                this.columnEstAnalysisCode = new global::System.Data.DataColumn("EstAnalysisCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstAnalysisCode);
                this.columnVatCode = new global::System.Data.DataColumn("VatCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatCode);
                this.columnSupplierVatCode = new global::System.Data.DataColumn("SupplierVatCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierVatCode);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnCostCentre = new global::System.Data.DataColumn("CostCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCentre);
                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnSellingPrice = new global::System.Data.DataColumn("SellingPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingPrice);
                this.columnExtraFlags = new global::System.Data.DataColumn("ExtraFlags", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraFlags);
                this.columnPNominal = new global::System.Data.DataColumn("PNominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNominal);
                this.columnPCostCentre = new global::System.Data.DataColumn("PCostCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCostCentre);
                this.columnPDepartment = new global::System.Data.DataColumn("PDepartment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPDepartment);
                this.columnCurrentCost = new global::System.Data.DataColumn("CurrentCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentCost);
                this.columnExcludeRequisitions = new global::System.Data.DataColumn("ExcludeRequisitions", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcludeRequisitions);
                this.columnStkRef1 = new global::System.Data.DataColumn("StkRef1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStkRef1);
                this.columnStkRef2 = new global::System.Data.DataColumn("StkRef2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStkRef2);
                this.columnStkRef3 = new global::System.Data.DataColumn("StkRef3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStkRef3);
                this.columnStkRef4 = new global::System.Data.DataColumn("StkRef4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStkRef4);
                this.columnStkRef5 = new global::System.Data.DataColumn("StkRef5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStkRef5);
                this.columnStkRef6 = new global::System.Data.DataColumn("StkRef6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStkRef6);
                this.columnStkRef7 = new global::System.Data.DataColumn("StkRef7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStkRef7);
                this.columnStkRef8 = new global::System.Data.DataColumn("StkRef8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStkRef8);
                this.columnStkRef9 = new global::System.Data.DataColumn("StkRef9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStkRef9);
                this.columnStkRef10 = new global::System.Data.DataColumn("StkRef10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStkRef10);
                this.columnIsRollLabel = new global::System.Data.DataColumn("IsRollLabel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRollLabel);
                this.columnInvoiceBalance = new global::System.Data.DataColumn("InvoiceBalance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceBalance);
                this.columnSupplierRef = new global::System.Data.DataColumn("SupplierRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierRef);
                this.columnLeadTime = new global::System.Data.DataColumn("LeadTime", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadTime);
                this.columnSupplierCode = new global::System.Data.DataColumn("SupplierCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCode);
                this.columnWebURL = new global::System.Data.DataColumn("WebURL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebURL);
                this.columnPurchaseUnits = new global::System.Data.DataColumn("PurchaseUnits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseUnits);
                this.columnSupplierCost = new global::System.Data.DataColumn("SupplierCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCost);
                this.columnLastDocumentNumber = new global::System.Data.DataColumn("LastDocumentNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastDocumentNumber);
                this.columnIsCallOffItem = new global::System.Data.DataColumn("IsCallOffItem", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCallOffItem);
                this.columnInvoiceCostPrice = new global::System.Data.DataColumn("InvoiceCostPrice", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceCostPrice);
                this.columnExtraInfo = new global::System.Data.DataColumn("ExtraInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraInfo);
                this.columnSOPLeadTime = new global::System.Data.DataColumn("SOPLeadTime", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPLeadTime);
                this.columnNoHistory = new global::System.Data.DataColumn("NoHistory", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoHistory);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnSuppDescUnits = new global::System.Data.DataColumn("SuppDescUnits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppDescUnits);
                this.columnLongestEdge = new global::System.Data.DataColumn("LongestEdge", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongestEdge);
                this.columnCommodityCode = new global::System.Data.DataColumn("CommodityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityCode);
                this.columnCountryOfOrigin = new global::System.Data.DataColumn("CountryOfOrigin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryOfOrigin);
                this.columnPurchaseCurrency = new global::System.Data.DataColumn("PurchaseCurrency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseCurrency);
                this.columnSellingCurrency = new global::System.Data.DataColumn("SellingCurrency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingCurrency);
                this.columnEstimateID = new global::System.Data.DataColumn("EstimateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateID);
                this.columnLastSupplierCode = new global::System.Data.DataColumn("LastSupplierCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSupplierCode);
                this.columnLastReceivedQuantity = new global::System.Data.DataColumn("LastReceivedQuantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastReceivedQuantity);
                this.columnLastPurchasePrice = new global::System.Data.DataColumn("LastPurchasePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPurchasePrice);
                this.columnLastPurchaseDate = new global::System.Data.DataColumn("LastPurchaseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPurchaseDate);
                this.columnLinkedOperationID = new global::System.Data.DataColumn("LinkedOperationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkedOperationID);
                this.columnLinkedOperatorID = new global::System.Data.DataColumn("LinkedOperatorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkedOperatorID);
                this.columnExpiryStatus = new global::System.Data.DataColumn("ExpiryStatus", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpiryStatus);
                this.columnExpiresOnDate = new global::System.Data.DataColumn("ExpiresOnDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpiresOnDate);
                this.columnAlternativeProduct = new global::System.Data.DataColumn("AlternativeProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternativeProduct);
                this.columnAlternativeProductSize = new global::System.Data.DataColumn("AlternativeProductSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternativeProductSize);
                this.columnSecondAltProduct = new global::System.Data.DataColumn("SecondAltProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondAltProduct);
                this.columnSecondAltProductSize = new global::System.Data.DataColumn("SecondAltProductSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondAltProductSize);
                this.columnGeneric = new global::System.Data.DataColumn("Generic", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneric);
                this.columnIsComposite = new global::System.Data.DataColumn("IsComposite", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsComposite);
                this.columnHeightMM = new global::System.Data.DataColumn("HeightMM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeightMM);
                this.columnPalletDepth = new global::System.Data.DataColumn("PalletDepth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalletDepth);
                this.columnPalletWidth = new global::System.Data.DataColumn("PalletWidth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalletWidth);
                this.columnPalletHeight = new global::System.Data.DataColumn("PalletHeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalletHeight);
                this.columnPalletPacked = new global::System.Data.DataColumn("PalletPacked", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalletPacked);
                this.columnPalletWeight = new global::System.Data.DataColumn("PalletWeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPalletWeight);
                this.columnLocationGroup = new global::System.Data.DataColumn("LocationGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationGroup);
                this.columnUseFullPack = new global::System.Data.DataColumn("UseFullPack", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseFullPack);
                this.columnPopulatedQuantity = new global::System.Data.DataColumn("PopulatedQuantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPopulatedQuantity);
                this.columnPopulatedWeight = new global::System.Data.DataColumn("PopulatedWeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPopulatedWeight);
                this.columnPackedHeight = new global::System.Data.DataColumn("PackedHeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackedHeight);
                this.columnPackedDepth = new global::System.Data.DataColumn("PackedDepth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackedDepth);
                this.columnPackedWidth = new global::System.Data.DataColumn("PackedWidth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackedWidth);
                this.columnPackedWeight = new global::System.Data.DataColumn("PackedWeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackedWeight);
                this.columnBoxedIn = new global::System.Data.DataColumn("BoxedIn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoxedIn);
                this.columnEstDescriptionContentID = new global::System.Data.DataColumn("EstDescriptionContentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstDescriptionContentID);
                this.columnPOAuthorityTypeID = new global::System.Data.DataColumn("POAuthorityTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOAuthorityTypeID);
                this.columnAutoPost = new global::System.Data.DataColumn("AutoPost", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoPost);
                this.columnCertificationID = new global::System.Data.DataColumn("CertificationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificationID);
                this.columnClaim = new global::System.Data.DataColumn("Claim", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClaim);
                this.columnCodeAlias = new global::System.Data.DataColumn("CodeAlias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeAlias);
                this.columnBoardCode = new global::System.Data.DataColumn("BoardCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoardCode);
                this.columnGrainDirection = new global::System.Data.DataColumn("GrainDirection", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrainDirection);
                this.columnAllowCustomSize = new global::System.Data.DataColumn("AllowCustomSize", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowCustomSize);
                this.columnBasketAuthorityTypeID = new global::System.Data.DataColumn("BasketAuthorityTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasketAuthorityTypeID);
                this.columnParentJob = new global::System.Data.DataColumn("ParentJob", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentJob);
                this.columnNumberControlled = new global::System.Data.DataColumn("NumberControlled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberControlled);
                this.columnOnDemand = new global::System.Data.DataColumn("OnDemand", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnDemand);
                this.columnGradeID = new global::System.Data.DataColumn("GradeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGradeID);
                this.columnMinQty = new global::System.Data.DataColumn("MinQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinQty);
                this.columnMaxQty = new global::System.Data.DataColumn("MaxQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxQty);
                this.columnInactive = new global::System.Data.DataColumn("Inactive", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactive);
                this.columnAutomationRule = new global::System.Data.DataColumn("AutomationRule", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutomationRule);
                this.columnFileUpload = new global::System.Data.DataColumn("FileUpload", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileUpload);
                this.columnDateModified = new global::System.Data.DataColumn("DateModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModified);
                this.columnModifiedByUserID = new global::System.Data.DataColumn("ModifiedByUserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedByUserID);
                this.columnReplacementMaterial = new global::System.Data.DataColumn("ReplacementMaterial", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReplacementMaterial);
                this.columnListAlias = new global::System.Data.DataColumn("ListAlias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListAlias);
                this.columnForceLocation = new global::System.Data.DataColumn("ForceLocation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForceLocation);
                this.columnIssueAtCost = new global::System.Data.DataColumn("IssueAtCost", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueAtCost);
                this.columnHeightMarginMM = new global::System.Data.DataColumn("HeightMarginMM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeightMarginMM);
                this.columnWidthMarginMM = new global::System.Data.DataColumn("WidthMarginMM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWidthMarginMM);
                this.columnXPosition = new global::System.Data.DataColumn("XPosition", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXPosition);
                this.columnYPosition = new global::System.Data.DataColumn("YPosition", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYPosition);
                this.columnUseLeastCost = new global::System.Data.DataColumn("UseLeastCost", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseLeastCost);
                this.columnCycleCount = new global::System.Data.DataColumn("CycleCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleCount);
                this.columnProductTypes_ID = new global::System.Data.DataColumn("ProductTypes_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductTypes_ID);
                this.columnIsConfigurable = new global::System.Data.DataColumn("IsConfigurable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsConfigurable);
                this.columnMinimumQuantity = new global::System.Data.DataColumn("MinimumQuantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimumQuantity);
                this.columnIsCoatedOneSide = new global::System.Data.DataColumn("IsCoatedOneSide", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCoatedOneSide);
                this.columnBasicSizesID = new global::System.Data.DataColumn("BasicSizesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicSizesID);
                this.columnSalesTaxCodeID = new global::System.Data.DataColumn("SalesTaxCodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTaxCodeID);
                this.columnUseTaxCodeID = new global::System.Data.DataColumn("UseTaxCodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseTaxCodeID);
                this.columnConsignmentBalance = new global::System.Data.DataColumn("ConsignmentBalance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsignmentBalance);
                this.columnBOMRevision = new global::System.Data.DataColumn("BOMRevision", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOMRevision);
                this.columnPriceListMaterialGroupID = new global::System.Data.DataColumn("PriceListMaterialGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceListMaterialGroupID);
                this.columnAltWeight = new global::System.Data.DataColumn("AltWeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAltWeight);
                this.columnCanOverridePackQuantity = new global::System.Data.DataColumn("CanOverridePackQuantity", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCanOverridePackQuantity);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnManufacturedProduct.AllowDBNull = false;
                this.columnCode.AllowDBNull = false;
                this.columnCode.MaxLength = 32;
                this.columnDescription.MaxLength = 128;
                this.columnBalance.AllowDBNull = false;
                this.columnType.AllowDBNull = false;
                this.columnUnitPrice.AllowDBNull = false;
                this.columnColour.MaxLength = 32;
                this.columndbGroup.MaxLength = 32;
                this.columnAnalysisType.MaxLength = 32;
                this.columnManufacturer.MaxLength = 32;
                this.columnReOrderQuantity.AllowDBNull = false;
                this.columnNormalOrder.AllowDBNull = false;
                this.columnPricingType.MaxLength = 16;
                this.columnAvailable.AllowDBNull = false;
                this.columnSizeCode.MaxLength = 32;
                this.columnDepthMM.AllowDBNull = false;
                this.columnWidthMM.AllowDBNull = false;
                this.columnIgnoreStockLevels.AllowDBNull = false;
                this.columnPacked.AllowDBNull = false;
                this.columnMinCharge.AllowDBNull = false;
                this.columnEstType.AllowDBNull = false;
                this.columnEstUnits.MaxLength = 32;
                this.columnEstTonnePrice.AllowDBNull = false;
                this.columnCopier.AllowDBNull = false;
                this.columnStockLocation.MaxLength = 64;
                this.columnEstAnalysisCode.MaxLength = 32;
                this.columnVatCode.AllowDBNull = false;
                this.columnVatCode.MaxLength = 2;
                this.columnSupplierVatCode.MaxLength = 2;
                this.columnNominal.MaxLength = 32;
                this.columnCostCentre.MaxLength = 32;
                this.columnDepartment.MaxLength = 32;
                this.columnSellingPrice.AllowDBNull = false;
                this.columnExtraFlags.AllowDBNull = false;
                this.columnPNominal.MaxLength = 32;
                this.columnPCostCentre.MaxLength = 32;
                this.columnPDepartment.MaxLength = 32;
                this.columnCurrentCost.AllowDBNull = false;
                this.columnExcludeRequisitions.AllowDBNull = false;
                this.columnStkRef1.MaxLength = 32;
                this.columnStkRef2.MaxLength = 32;
                this.columnStkRef3.MaxLength = 32;
                this.columnStkRef4.MaxLength = 32;
                this.columnStkRef5.MaxLength = 32;
                this.columnStkRef6.MaxLength = 32;
                this.columnStkRef7.MaxLength = 32;
                this.columnStkRef8.MaxLength = 32;
                this.columnStkRef9.MaxLength = 32;
                this.columnStkRef10.MaxLength = 32;
                this.columnIsRollLabel.AllowDBNull = false;
                this.columnInvoiceBalance.AllowDBNull = false;
                this.columnSupplierRef.MaxLength = 32;
                this.columnLeadTime.AllowDBNull = false;
                this.columnSupplierCode.MaxLength = 32;
                this.columnWebURL.MaxLength = 255;
                this.columnPurchaseUnits.MaxLength = 32;
                this.columnSupplierCost.AllowDBNull = false;
                this.columnLastDocumentNumber.AllowDBNull = false;
                this.columnIsCallOffItem.AllowDBNull = false;
                this.columnInvoiceCostPrice.AllowDBNull = false;
                this.columnExtraInfo.MaxLength = 4000;
                this.columnSOPLeadTime.AllowDBNull = false;
                this.columnNoHistory.AllowDBNull = false;
                this.columnWeight.AllowDBNull = false;
                this.columnSuppDescUnits.MaxLength = 16;
                this.columnLongestEdge.AllowDBNull = false;
                this.columnCommodityCode.MaxLength = 10;
                this.columnCountryOfOrigin.MaxLength = 2;
                this.columnPurchaseCurrency.AllowDBNull = false;
                this.columnSellingCurrency.AllowDBNull = false;
                this.columnEstimateID.AllowDBNull = false;
                this.columnLastSupplierCode.MaxLength = 32;
                this.columnLastReceivedQuantity.AllowDBNull = false;
                this.columnLastPurchasePrice.AllowDBNull = false;
                this.columnLinkedOperationID.AllowDBNull = false;
                this.columnLinkedOperatorID.AllowDBNull = false;
                this.columnExpiryStatus.AllowDBNull = false;
                this.columnAlternativeProduct.MaxLength = 32;
                this.columnAlternativeProductSize.MaxLength = 32;
                this.columnSecondAltProduct.MaxLength = 32;
                this.columnSecondAltProductSize.MaxLength = 32;
                this.columnGeneric.AllowDBNull = false;
                this.columnIsComposite.AllowDBNull = false;
                this.columnHeightMM.AllowDBNull = false;
                this.columnPalletDepth.AllowDBNull = false;
                this.columnPalletWidth.AllowDBNull = false;
                this.columnPalletHeight.AllowDBNull = false;
                this.columnPalletPacked.AllowDBNull = false;
                this.columnPalletWeight.AllowDBNull = false;
                this.columnLocationGroup.MaxLength = 32;
                this.columnUseFullPack.AllowDBNull = false;
                this.columnPopulatedQuantity.AllowDBNull = false;
                this.columnPopulatedWeight.AllowDBNull = false;
                this.columnPackedHeight.AllowDBNull = false;
                this.columnPackedDepth.AllowDBNull = false;
                this.columnPackedWidth.AllowDBNull = false;
                this.columnPackedWeight.AllowDBNull = false;
                this.columnBoxedIn.AllowDBNull = false;
                this.columnEstDescriptionContentID.AllowDBNull = false;
                this.columnPOAuthorityTypeID.AllowDBNull = false;
                this.columnAutoPost.AllowDBNull = false;
                this.columnCertificationID.AllowDBNull = false;
                this.columnClaim.MaxLength = 100;
                this.columnCodeAlias.MaxLength = 32;
                this.columnBoardCode.MaxLength = 25;
                this.columnGrainDirection.AllowDBNull = false;
                this.columnAllowCustomSize.AllowDBNull = false;
                this.columnBasketAuthorityTypeID.AllowDBNull = false;
                this.columnParentJob.MaxLength = 32;
                this.columnNumberControlled.AllowDBNull = false;
                this.columnOnDemand.AllowDBNull = false;
                this.columnGradeID.AllowDBNull = false;
                this.columnMinQty.AllowDBNull = false;
                this.columnMaxQty.AllowDBNull = false;
                this.columnInactive.AllowDBNull = false;
                this.columnAutomationRule.AllowDBNull = false;
                this.columnFileUpload.AllowDBNull = false;
                this.columnReplacementMaterial.AllowDBNull = false;
                this.columnListAlias.MaxLength = 32;
                this.columnForceLocation.AllowDBNull = false;
                this.columnIssueAtCost.AllowDBNull = false;
                this.columnHeightMarginMM.AllowDBNull = false;
                this.columnWidthMarginMM.AllowDBNull = false;
                this.columnXPosition.AllowDBNull = false;
                this.columnYPosition.AllowDBNull = false;
                this.columnUseLeastCost.AllowDBNull = false;
                this.columnCycleCount.AllowDBNull = false;
                this.columnProductTypes_ID.AllowDBNull = false;
                this.columnIsConfigurable.AllowDBNull = false;
                this.columnMinimumQuantity.AllowDBNull = false;
                this.columnIsCoatedOneSide.AllowDBNull = false;
                this.columnBasicSizesID.AllowDBNull = false;
                this.columnSalesTaxCodeID.AllowDBNull = false;
                this.columnUseTaxCodeID.AllowDBNull = false;
                this.columnConsignmentBalance.AllowDBNull = false;
                this.columnBOMRevision.AllowDBNull = false;
                this.columnPriceListMaterialGroupID.AllowDBNull = false;
                this.columnAltWeight.AllowDBNull = false;
                this.columnCanOverridePackQuantity.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow NewProductRow() {
                return ((ProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductRowChanged != null)) {
                    this.ProductRowChanged(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductRowChanging != null)) {
                    this.ProductRowChanging(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductRowDeleted != null)) {
                    this.ProductRowDeleted(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductRowDeleting != null)) {
                    this.ProductRowDeleting(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProductRow(ProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ThardataDataSet ds = new ThardataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CustomersRow : global::System.Data.DataRow {
            
            private CustomersDataTable tableCustomers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CustomersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomers = ((CustomersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableCustomers.IDColumn]));
                }
                set {
                    this[this.tableCustomers.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Town {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.TownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Town\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.TownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string County {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.CountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'County\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.CountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Postcode {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.PostcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Postcode\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.PostcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Contact {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.ContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contact\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tel {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.TelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tel\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.TelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WebURL {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.WebURLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WebURL\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.WebURLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Uplift {
                get {
                    try {
                        return ((double)(this[this.tableCustomers.UpliftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uplift\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.UpliftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CBand {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.CBandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBand\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.CBandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Delivery {
                get {
                    return ((bool)(this[this.tableCustomers.DeliveryColumn]));
                }
                set {
                    this[this.tableCustomers.DeliveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.ParentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentCode\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.ParentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref1 {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.Ref1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref1\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.Ref1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref2 {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.Ref2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref2\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.Ref2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref3 {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.Ref3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref3\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.Ref3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Exchange {
                get {
                    return ((short)(this[this.tableCustomers.ExchangeColumn]));
                }
                set {
                    this[this.tableCustomers.ExchangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CommissionPerc {
                get {
                    try {
                        return ((double)(this[this.tableCustomers.CommissionPercColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommissionPerc\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.CommissionPercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DontMerge {
                get {
                    return ((int)(this[this.tableCustomers.DontMergeColumn]));
                }
                set {
                    this[this.tableCustomers.DontMergeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OverwriteDetails {
                get {
                    return ((bool)(this[this.tableCustomers.OverwriteDetailsColumn]));
                }
                set {
                    this[this.tableCustomers.OverwriteDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PostingAccount {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.PostingAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostingAccount\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.PostingAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IncludeInDistributions {
                get {
                    return ((bool)(this[this.tableCustomers.IncludeInDistributionsColumn]));
                }
                set {
                    this[this.tableCustomers.IncludeInDistributionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CountryOfOrigin {
                get {
                    return ((string)(this[this.tableCustomers.CountryOfOriginColumn]));
                }
                set {
                    this[this.tableCustomers.CountryOfOriginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VatCode {
                get {
                    return ((string)(this[this.tableCustomers.VatCodeColumn]));
                }
                set {
                    this[this.tableCustomers.VatCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VatRegNo {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.VatRegNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatRegNo\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.VatRegNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SSDNatureOfTransaction {
                get {
                    return ((byte)(this[this.tableCustomers.SSDNatureOfTransactionColumn]));
                }
                set {
                    this[this.tableCustomers.SSDNatureOfTransactionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSDDeliveryTerms {
                get {
                    return ((string)(this[this.tableCustomers.SSDDeliveryTermsColumn]));
                }
                set {
                    this[this.tableCustomers.SSDDeliveryTermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SSDModeOfTransport {
                get {
                    return ((byte)(this[this.tableCustomers.SSDModeOfTransportColumn]));
                }
                set {
                    this[this.tableCustomers.SSDModeOfTransportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseAltCurrency {
                get {
                    return ((bool)(this[this.tableCustomers.UseAltCurrencyColumn]));
                }
                set {
                    this[this.tableCustomers.UseAltCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OverideProductVat {
                get {
                    return ((bool)(this[this.tableCustomers.OverideProductVatColumn]));
                }
                set {
                    this[this.tableCustomers.OverideProductVatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefault {
                get {
                    return ((bool)(this[this.tableCustomers.IsDefaultColumn]));
                }
                set {
                    this[this.tableCustomers.IsDefaultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AllowPartShipment {
                get {
                    return ((bool)(this[this.tableCustomers.AllowPartShipmentColumn]));
                }
                set {
                    this[this.tableCustomers.AllowPartShipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GMDisabled {
                get {
                    return ((bool)(this[this.tableCustomers.GMDisabledColumn]));
                }
                set {
                    this[this.tableCustomers.GMDisabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte PaymentType {
                get {
                    return ((byte)(this[this.tableCustomers.PaymentTypeColumn]));
                }
                set {
                    this[this.tableCustomers.PaymentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short PaymentDays {
                get {
                    return ((short)(this[this.tableCustomers.PaymentDaysColumn]));
                }
                set {
                    this[this.tableCustomers.PaymentDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CRMUpdate {
                get {
                    return ((bool)(this[this.tableCustomers.CRMUpdateColumn]));
                }
                set {
                    this[this.tableCustomers.CRMUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ComponentDiscount {
                get {
                    return ((double)(this[this.tableCustomers.ComponentDiscountColumn]));
                }
                set {
                    this[this.tableCustomers.ComponentDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SellingBandNameID {
                get {
                    try {
                        return ((int)(this[this.tableCustomers.SellingBandNameIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellingBandNameID\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.SellingBandNameIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Courier {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.CourierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Courier\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.CourierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CourierServiceID {
                get {
                    return ((int)(this[this.tableCustomers.CourierServiceIDColumn]));
                }
                set {
                    this[this.tableCustomers.CourierServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomers.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted {
                get {
                    return ((bool)(this[this.tableCustomers.DeletedColumn]));
                }
                set {
                    this[this.tableCustomers.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomers.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CompanyID {
                get {
                    return ((int)(this[this.tableCustomers.CompanyIDColumn]));
                }
                set {
                    this[this.tableCustomers.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PrePressWebEnable {
                get {
                    return ((bool)(this[this.tableCustomers.PrePressWebEnableColumn]));
                }
                set {
                    this[this.tableCustomers.PrePressWebEnableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DefaultPackingLocation {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.DefaultPackingLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultPackingLocation\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.DefaultPackingLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Inactive {
                get {
                    return ((byte)(this[this.tableCustomers.InactiveColumn]));
                }
                set {
                    this[this.tableCustomers.InactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SecurityGroupID {
                get {
                    try {
                        return ((int)(this[this.tableCustomers.SecurityGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecurityGroupID\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.SecurityGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte CustomerStatus {
                get {
                    return ((byte)(this[this.tableCustomers.CustomerStatusColumn]));
                }
                set {
                    this[this.tableCustomers.CustomerStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte PrePaidSalesInvoice {
                get {
                    return ((byte)(this[this.tableCustomers.PrePaidSalesInvoiceColumn]));
                }
                set {
                    this[this.tableCustomers.PrePaidSalesInvoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CreateSeriesJobs {
                get {
                    return ((bool)(this[this.tableCustomers.CreateSeriesJobsColumn]));
                }
                set {
                    this[this.tableCustomers.CreateSeriesJobsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExternalID {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.ExternalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExternalID\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.ExternalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Latitude {
                get {
                    try {
                        return ((double)(this[this.tableCustomers.LatitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Latitude\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.LatitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Longitude {
                get {
                    try {
                        return ((double)(this[this.tableCustomers.LongitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Longitude\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.LongitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseShortfall {
                get {
                    return ((bool)(this[this.tableCustomers.UseShortfallColumn]));
                }
                set {
                    this[this.tableCustomers.UseShortfallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTaxCodeID {
                get {
                    return ((int)(this[this.tableCustomers.SalesTaxCodeIDColumn]));
                }
                set {
                    this[this.tableCustomers.SalesTaxCodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTaxItemID {
                get {
                    return ((int)(this[this.tableCustomers.SalesTaxItemIDColumn]));
                }
                set {
                    this[this.tableCustomers.SalesTaxItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CarriageSalesTaxCodeID {
                get {
                    return ((int)(this[this.tableCustomers.CarriageSalesTaxCodeIDColumn]));
                }
                set {
                    this[this.tableCustomers.CarriageSalesTaxCodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.DepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.DepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AllowedOverProduction {
                get {
                    return ((double)(this[this.tableCustomers.AllowedOverProductionColumn]));
                }
                set {
                    this[this.tableCustomers.AllowedOverProductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PriceListCustomerGroupID {
                get {
                    return ((int)(this[this.tableCustomers.PriceListCustomerGroupIDColumn]));
                }
                set {
                    this[this.tableCustomers.PriceListCustomerGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountRef {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.AccountRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountRef\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.AccountRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] dbTimeStamp {
                get {
                    try {
                        return ((byte[])(this[this.tableCustomers.dbTimeStampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dbTimeStamp\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.dbTimeStampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short eStatus_id {
                get {
                    return ((short)(this[this.tableCustomers.eStatus_idColumn]));
                }
                set {
                    this[this.tableCustomers.eStatus_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Customers_AccessString {
                get {
                    try {
                        return ((byte[])(this[this.tableCustomers.Customers_AccessStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customers_AccessString\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.Customers_AccessStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OnlineLogo {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.OnlineLogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OnlineLogo\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.OnlineLogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GMUpdate {
                get {
                    return ((bool)(this[this.tableCustomers.GMUpdateColumn]));
                }
                set {
                    this[this.tableCustomers.GMUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentTermsRef {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.PaymentTermsRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentTermsRef\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.PaymentTermsRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CostCentre {
                get {
                    try {
                        return ((string)(this[this.tableCustomers.CostCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostCentre\' in table \'Customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomers.CostCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull() {
                return this.IsNull(this.tableCustomers.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentNull() {
                this[this.tableCustomers.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableCustomers.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeNull() {
                this[this.tableCustomers.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableCustomers.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableCustomers.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tableCustomers.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tableCustomers.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTownNull() {
                return this.IsNull(this.tableCustomers.TownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTownNull() {
                this[this.tableCustomers.TownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountyNull() {
                return this.IsNull(this.tableCustomers.CountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountyNull() {
                this[this.tableCustomers.CountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostcodeNull() {
                return this.IsNull(this.tableCustomers.PostcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostcodeNull() {
                this[this.tableCustomers.PostcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryNull() {
                return this.IsNull(this.tableCustomers.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryNull() {
                this[this.tableCustomers.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactNull() {
                return this.IsNull(this.tableCustomers.ContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactNull() {
                this[this.tableCustomers.ContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelNull() {
                return this.IsNull(this.tableCustomers.TelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelNull() {
                this[this.tableCustomers.TelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaxNull() {
                return this.IsNull(this.tableCustomers.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaxNull() {
                this[this.tableCustomers.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWebURLNull() {
                return this.IsNull(this.tableCustomers.WebURLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWebURLNull() {
                this[this.tableCustomers.WebURLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpliftNull() {
                return this.IsNull(this.tableCustomers.UpliftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpliftNull() {
                this[this.tableCustomers.UpliftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCBandNull() {
                return this.IsNull(this.tableCustomers.CBandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCBandNull() {
                this[this.tableCustomers.CBandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentCodeNull() {
                return this.IsNull(this.tableCustomers.ParentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentCodeNull() {
                this[this.tableCustomers.ParentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef1Null() {
                return this.IsNull(this.tableCustomers.Ref1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef1Null() {
                this[this.tableCustomers.Ref1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef2Null() {
                return this.IsNull(this.tableCustomers.Ref2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef2Null() {
                this[this.tableCustomers.Ref2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef3Null() {
                return this.IsNull(this.tableCustomers.Ref3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef3Null() {
                this[this.tableCustomers.Ref3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommissionPercNull() {
                return this.IsNull(this.tableCustomers.CommissionPercColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommissionPercNull() {
                this[this.tableCustomers.CommissionPercColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostingAccountNull() {
                return this.IsNull(this.tableCustomers.PostingAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostingAccountNull() {
                this[this.tableCustomers.PostingAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVatRegNoNull() {
                return this.IsNull(this.tableCustomers.VatRegNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVatRegNoNull() {
                this[this.tableCustomers.VatRegNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellingBandNameIDNull() {
                return this.IsNull(this.tableCustomers.SellingBandNameIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellingBandNameIDNull() {
                this[this.tableCustomers.SellingBandNameIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCourierNull() {
                return this.IsNull(this.tableCustomers.CourierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCourierNull() {
                this[this.tableCustomers.CourierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableCustomers.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatedDateNull() {
                this[this.tableCustomers.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomers.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeletedDateNull() {
                this[this.tableCustomers.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomers.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeletedByNull() {
                this[this.tableCustomers.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultPackingLocationNull() {
                return this.IsNull(this.tableCustomers.DefaultPackingLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultPackingLocationNull() {
                this[this.tableCustomers.DefaultPackingLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecurityGroupIDNull() {
                return this.IsNull(this.tableCustomers.SecurityGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecurityGroupIDNull() {
                this[this.tableCustomers.SecurityGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExternalIDNull() {
                return this.IsNull(this.tableCustomers.ExternalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExternalIDNull() {
                this[this.tableCustomers.ExternalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLatitudeNull() {
                return this.IsNull(this.tableCustomers.LatitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLatitudeNull() {
                this[this.tableCustomers.LatitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLongitudeNull() {
                return this.IsNull(this.tableCustomers.LongitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLongitudeNull() {
                this[this.tableCustomers.LongitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tableCustomers.DepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepartmentNull() {
                this[this.tableCustomers.DepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountRefNull() {
                return this.IsNull(this.tableCustomers.AccountRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountRefNull() {
                this[this.tableCustomers.AccountRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdbTimeStampNull() {
                return this.IsNull(this.tableCustomers.dbTimeStampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdbTimeStampNull() {
                this[this.tableCustomers.dbTimeStampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomers_AccessStringNull() {
                return this.IsNull(this.tableCustomers.Customers_AccessStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomers_AccessStringNull() {
                this[this.tableCustomers.Customers_AccessStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOnlineLogoNull() {
                return this.IsNull(this.tableCustomers.OnlineLogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOnlineLogoNull() {
                this[this.tableCustomers.OnlineLogoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentTermsRefNull() {
                return this.IsNull(this.tableCustomers.PaymentTermsRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentTermsRefNull() {
                this[this.tableCustomers.PaymentTermsRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostCentreNull() {
                return this.IsNull(this.tableCustomers.CostCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostCentreNull() {
                this[this.tableCustomers.CostCentreColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class JobProductsRow : global::System.Data.DataRow {
            
            private JobProductsDataTable tableJobProducts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JobProductsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJobProducts = ((JobProductsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableJobProducts.IDColumn]));
                }
                set {
                    this[this.tableJobProducts.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobNo {
                get {
                    return ((string)(this[this.tableJobProducts.JobNoColumn]));
                }
                set {
                    this[this.tableJobProducts.JobNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProductSize {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.ProductSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductSize\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.ProductSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductNumber {
                get {
                    return ((int)(this[this.tableJobProducts.ProductNumberColumn]));
                }
                set {
                    this[this.tableJobProducts.ProductNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryCustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.DeliveryCustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryCustomerCode\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.DeliveryCustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityOrdered {
                get {
                    return ((double)(this[this.tableJobProducts.QuantityOrderedColumn]));
                }
                set {
                    this[this.tableJobProducts.QuantityOrderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityDelivered {
                get {
                    return ((double)(this[this.tableJobProducts.QuantityDeliveredColumn]));
                }
                set {
                    this[this.tableJobProducts.QuantityDeliveredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityInStock {
                get {
                    return ((double)(this[this.tableJobProducts.QuantityInStockColumn]));
                }
                set {
                    this[this.tableJobProducts.QuantityInStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityInvoiced {
                get {
                    return ((double)(this[this.tableJobProducts.QuantityInvoicedColumn]));
                }
                set {
                    this[this.tableJobProducts.QuantityInvoicedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityProduced {
                get {
                    return ((double)(this[this.tableJobProducts.QuantityProducedColumn]));
                }
                set {
                    this[this.tableJobProducts.QuantityProducedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Reference1 {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.Reference1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reference1\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.Reference1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Reference2 {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.Reference2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reference2\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.Reference2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Price {
                get {
                    return ((double)(this[this.tableJobProducts.PriceColumn]));
                }
                set {
                    this[this.tableJobProducts.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PricePer1000 {
                get {
                    return ((double)(this[this.tableJobProducts.PricePer1000Column]));
                }
                set {
                    this[this.tableJobProducts.PricePer1000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesLineID {
                get {
                    return ((int)(this[this.tableJobProducts.SalesLineIDColumn]));
                }
                set {
                    this[this.tableJobProducts.SalesLineIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobType {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.JobTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobType\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.JobTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxCode {
                get {
                    return ((string)(this[this.tableJobProducts.TaxCodeColumn]));
                }
                set {
                    this[this.tableJobProducts.TaxCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CostCentre {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.CostCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostCentre\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.CostCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.DepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.DepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EstimateID {
                get {
                    return ((int)(this[this.tableJobProducts.EstimateIDColumn]));
                }
                set {
                    this[this.tableJobProducts.EstimateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EstHeaderRef {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.EstHeaderRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstHeaderRef\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.EstHeaderRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Contact {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.ContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contact\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Exclude {
                get {
                    return ((bool)(this[this.tableJobProducts.ExcludeColumn]));
                }
                set {
                    this[this.tableJobProducts.ExcludeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGanged {
                get {
                    return ((bool)(this[this.tableJobProducts.IsGangedColumn]));
                }
                set {
                    this[this.tableJobProducts.IsGangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool InvoiceToParent {
                get {
                    return ((bool)(this[this.tableJobProducts.InvoiceToParentColumn]));
                }
                set {
                    this[this.tableJobProducts.InvoiceToParentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Currency {
                get {
                    return ((int)(this[this.tableJobProducts.CurrencyColumn]));
                }
                set {
                    this[this.tableJobProducts.CurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ForeignPrice {
                get {
                    return ((double)(this[this.tableJobProducts.ForeignPriceColumn]));
                }
                set {
                    this[this.tableJobProducts.ForeignPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ForeignPricePer1000 {
                get {
                    return ((double)(this[this.tableJobProducts.ForeignPricePer1000Column]));
                }
                set {
                    this[this.tableJobProducts.ForeignPricePer1000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExchangeRate {
                get {
                    return ((double)(this[this.tableJobProducts.ExchangeRateColumn]));
                }
                set {
                    this[this.tableJobProducts.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Weight {
                get {
                    return ((double)(this[this.tableJobProducts.WeightColumn]));
                }
                set {
                    this[this.tableJobProducts.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceCustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.InvoiceCustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceCustomerCode\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.InvoiceCustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableJobProducts.DateModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateModified\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.DateModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ModifiedByUserID {
                get {
                    try {
                        return ((int)(this[this.tableJobProducts.ModifiedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedByUserID\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.ModifiedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesJobNo {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.SalesJobNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesJobNo\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.SalesJobNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BOMRevision {
                get {
                    return ((int)(this[this.tableJobProducts.BOMRevisionColumn]));
                }
                set {
                    this[this.tableJobProducts.BOMRevisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTaxCodeID {
                get {
                    return ((int)(this[this.tableJobProducts.SalesTaxCodeIDColumn]));
                }
                set {
                    this[this.tableJobProducts.SalesTaxCodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTaxItemID {
                get {
                    return ((int)(this[this.tableJobProducts.SalesTaxItemIDColumn]));
                }
                set {
                    this[this.tableJobProducts.SalesTaxItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BOMParentJobNo {
                get {
                    try {
                        return ((string)(this[this.tableJobProducts.BOMParentJobNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOMParentJobNo\' in table \'JobProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobProducts.BOMParentJobNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte CreatedStockType {
                get {
                    return ((byte)(this[this.tableJobProducts.CreatedStockTypeColumn]));
                }
                set {
                    this[this.tableJobProducts.CreatedStockTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAutoCreated {
                get {
                    return ((bool)(this[this.tableJobProducts.IsAutoCreatedColumn]));
                }
                set {
                    this[this.tableJobProducts.IsAutoCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EstVersionID {
                get {
                    return ((int)(this[this.tableJobProducts.EstVersionIDColumn]));
                }
                set {
                    this[this.tableJobProducts.EstVersionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableJobProducts.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductCodeNull() {
                this[this.tableJobProducts.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductSizeNull() {
                return this.IsNull(this.tableJobProducts.ProductSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductSizeNull() {
                this[this.tableJobProducts.ProductSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryCustomerCodeNull() {
                return this.IsNull(this.tableJobProducts.DeliveryCustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryCustomerCodeNull() {
                this[this.tableJobProducts.DeliveryCustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableJobProducts.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableJobProducts.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReference1Null() {
                return this.IsNull(this.tableJobProducts.Reference1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReference1Null() {
                this[this.tableJobProducts.Reference1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReference2Null() {
                return this.IsNull(this.tableJobProducts.Reference2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReference2Null() {
                this[this.tableJobProducts.Reference2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobTypeNull() {
                return this.IsNull(this.tableJobProducts.JobTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobTypeNull() {
                this[this.tableJobProducts.JobTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalNull() {
                return this.IsNull(this.tableJobProducts.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalNull() {
                this[this.tableJobProducts.NominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostCentreNull() {
                return this.IsNull(this.tableJobProducts.CostCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostCentreNull() {
                this[this.tableJobProducts.CostCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tableJobProducts.DepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepartmentNull() {
                this[this.tableJobProducts.DepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstHeaderRefNull() {
                return this.IsNull(this.tableJobProducts.EstHeaderRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstHeaderRefNull() {
                this[this.tableJobProducts.EstHeaderRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactNull() {
                return this.IsNull(this.tableJobProducts.ContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactNull() {
                this[this.tableJobProducts.ContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceCustomerCodeNull() {
                return this.IsNull(this.tableJobProducts.InvoiceCustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceCustomerCodeNull() {
                this[this.tableJobProducts.InvoiceCustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifiedNull() {
                return this.IsNull(this.tableJobProducts.DateModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifiedNull() {
                this[this.tableJobProducts.DateModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedByUserIDNull() {
                return this.IsNull(this.tableJobProducts.ModifiedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedByUserIDNull() {
                this[this.tableJobProducts.ModifiedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesJobNoNull() {
                return this.IsNull(this.tableJobProducts.SalesJobNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesJobNoNull() {
                this[this.tableJobProducts.SalesJobNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBOMParentJobNoNull() {
                return this.IsNull(this.tableJobProducts.BOMParentJobNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBOMParentJobNoNull() {
                this[this.tableJobProducts.BOMParentJobNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MainEstimateDetailsRow : global::System.Data.DataRow {
            
            private MainEstimateDetailsDataTable tableMainEstimateDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MainEstimateDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMainEstimateDetails = ((MainEstimateDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableMainEstimateDetails.IDColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MethodOfWorking {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.MethodOfWorkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethodOfWorking\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.MethodOfWorkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte IsTemplate {
                get {
                    try {
                        return ((byte)(this[this.tableMainEstimateDetails.IsTemplateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTemplate\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.IsTemplateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EstimateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainEstimateDetails.EstimateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateDate\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.EstimateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Required {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainEstimateDetails.RequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Required\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Quantity {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Weight {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobTypeDesc {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.JobTypeDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobTypeDesc\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.JobTypeDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerRef {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerRef\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerAddress {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerAddress\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerTown {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerTown\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerCounty {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCounty\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerPostcode {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerPostcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerPostcode\' in table \'MainEstimateDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerPostcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerCountry {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCountry\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerCountryOfOrigin {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerCountryOfOriginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCountryOfOrigin\' in table \'MainEstimateDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerCountryOfOriginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerContact {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerContact\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerTel {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerTelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerTel\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerTelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerFax {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerFax\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerEmail {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CustomerEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerEmail\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CustomerUplift {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.CustomerUpliftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerUplift\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerUpliftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short CustomerExchange {
                get {
                    try {
                        return ((short)(this[this.tableMainEstimateDetails.CustomerExchangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerExchange\' in table \'MainEstimateDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerExchangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Ordered {
                get {
                    try {
                        return ((byte)(this[this.tableMainEstimateDetails.OrderedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ordered\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OrderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobCreated {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.JobCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobCreated\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.JobCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref1 {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.Ref1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref1\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.Ref1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref2 {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.Ref2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref2\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.Ref2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref3 {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.Ref3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref3\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.Ref3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref4 {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.Ref4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref4\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.Ref4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref5 {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.Ref5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref5\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.Ref5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref6 {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.Ref6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref6\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.Ref6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref7 {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.Ref7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref7\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.Ref7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref8 {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.Ref8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref8\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.Ref8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref9 {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.Ref9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref9\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.Ref9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref10 {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.Ref10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref10\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.Ref10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobType {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.JobTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobType\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.JobTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OrderExpense {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OrderExpenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderExpense\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OrderExpenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Estimator {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.EstimatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Estimator\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.EstimatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUserName {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.UpdateUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateUserName\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.UpdateUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastModified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainEstimateDetails.LastModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastModified\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.LastModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RunOnPer {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.RunOnPerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunOnPer\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.RunOnPerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PaperSubTot {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.PaperSubTotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaperSubTot\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PaperSubTotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PaperMarkUpPercent {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.PaperMarkUpPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaperMarkUpPercent\' in table \'MainEstimateDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PaperMarkUpPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PaperMarkup {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.PaperMarkupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaperMarkup\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PaperMarkupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginMatSubTot {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OriginMatSubTotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginMatSubTot\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OriginMatSubTotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginMatMarkUpPercent {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OriginMatMarkUpPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginMatMarkUpPercent\' in table \'MainEstimateDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OriginMatMarkUpPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginMatMarkUp {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OriginMatMarkUpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginMatMarkUp\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OriginMatMarkUpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginLabSubTot {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OriginLabSubTotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginLabSubTot\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OriginLabSubTotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginLabMarkUpPercent {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OriginLabMarkUpPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginLabMarkUpPercent\' in table \'MainEstimateDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OriginLabMarkUpPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginLabMarkUp {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OriginLabMarkUpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginLabMarkUp\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OriginLabMarkUpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginLabLabSubTot {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OriginLabLabSubTotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginLabLabSubTot\' in table \'MainEstimateDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OriginLabLabSubTotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OutworkSubtot {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OutworkSubtotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutworkSubtot\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OutworkSubtotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OutworkMarkUpPercent {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OutworkMarkUpPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutworkMarkUpPercent\' in table \'MainEstimateDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OutworkMarkUpPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OutworkMarkUp {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OutworkMarkUpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutworkMarkUp\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OutworkMarkUpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherMatSubTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OtherMatSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherMatSubTotal\' in table \'MainEstimateDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OtherMatSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherMatMarkUpPercent {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OtherMatMarkUpPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherMatMarkUpPercent\' in table \'MainEstimateDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OtherMatMarkUpPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherMatMarkUp {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OtherMatMarkUpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherMatMarkUp\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OtherMatMarkUpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PrintingLabSubTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.PrintingLabSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintingLabSubTotal\' in table \'MainEstimateDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PrintingLabSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PrintingOHSubTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.PrintingOHSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintingOHSubTotal\' in table \'MainEstimateDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PrintingOHSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PrintingSubTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.PrintingSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintingSubTotal\' in table \'MainEstimateDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PrintingSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PrintingMarkUpPercent {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.PrintingMarkUpPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintingMarkUpPercent\' in table \'MainEstimateDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PrintingMarkUpPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PrintingMarkUp {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.PrintingMarkUpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintingMarkUp\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PrintingMarkUpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FinishingLabSubTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.FinishingLabSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishingLabSubTotal\' in table \'MainEstimateDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.FinishingLabSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FinishingOHSubTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.FinishingOHSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishingOHSubTotal\' in table \'MainEstimateDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.FinishingOHSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FinishingSubTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.FinishingSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishingSubTotal\' in table \'MainEstimateDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.FinishingSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FinishingMarkUpPercent {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.FinishingMarkUpPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishingMarkUpPercent\' in table \'MainEstimateDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.FinishingMarkUpPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FinishingMarkUp {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.FinishingMarkUpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishingMarkUp\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.FinishingMarkUpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CarriageSubTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.CarriageSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarriageSubTotal\' in table \'MainEstimateDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CarriageSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CarriageMarkUpPercent {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.CarriageMarkUpPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarriageMarkUpPercent\' in table \'MainEstimateDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CarriageMarkUpPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CarriageMarkUp {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.CarriageMarkUpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarriageMarkUp\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CarriageMarkUpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalSubTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.TotalSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSubTotal\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.TotalSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalMarkUpPercent {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.TotalMarkUpPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalMarkUpPercent\' in table \'MainEstimateDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.TotalMarkUpPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalMarkUp {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.TotalMarkUpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalMarkUp\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.TotalMarkUpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.TotalTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTotal\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.TotalTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExchangeCurrency {
                get {
                    try {
                        return ((int)(this[this.tableMainEstimateDetails.ExchangeCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeCurrency\' in table \'MainEstimateDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.ExchangeCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExchangeRate {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.ExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRate\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ForeignTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.ForeignTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForeignTotal\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.ForeignTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RunOnValue {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.RunOnValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunOnValue\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.RunOnValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobDescription {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.JobDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobDescription\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.JobDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NoOfJobDescLines {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.NoOfJobDescLinesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoOfJobDescLines\' in table \'MainEstimateDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.NoOfJobDescLinesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PaperRunOn {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.PaperRunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaperRunOn\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PaperRunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginMatRunOn {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OriginMatRunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginMatRunOn\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OriginMatRunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginLabRunOn {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OriginLabRunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginLabRunOn\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OriginLabRunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OutworkRunOn {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OutworkRunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutworkRunOn\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OutworkRunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherMatRunOn {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OtherMatRunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherMatRunOn\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OtherMatRunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PrintingRunOn {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.PrintingRunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintingRunOn\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PrintingRunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FinishingRunOn {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.FinishingRunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishingRunOn\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.FinishingRunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CarriageRunOn {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.CarriageRunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarriageRunOn\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CarriageRunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EstimateHeaderRef {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.EstimateHeaderRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateHeaderRef\' in table \'MainEstimateDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.EstimateHeaderRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseManualCarriage {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.UseManualCarriageColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.UseManualCarriageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte WorkingLevel {
                get {
                    try {
                        return ((byte)(this[this.tableMainEstimateDetails.WorkingLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkingLevel\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.WorkingLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AgencyComPerc {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.AgencyComPercColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgencyComPerc\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.AgencyComPercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AgencyComValue {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.AgencyComValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgencyComValue\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.AgencyComValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte IsRevision {
                get {
                    return ((byte)(this[this.tableMainEstimateDetails.IsRevisionColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.IsRevisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RevisedFromID {
                get {
                    try {
                        return ((int)(this[this.tableMainEstimateDetails.RevisedFromIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RevisedFromID\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.RevisedFromIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte RFQStatus {
                get {
                    try {
                        return ((byte)(this[this.tableMainEstimateDetails.RFQStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RFQStatus\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.RFQStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RFQID {
                get {
                    try {
                        return ((int)(this[this.tableMainEstimateDetails.RFQIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RFQID\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.RFQIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryRef {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.DeliveryRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryRef\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.DeliveryRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryContact {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.DeliveryContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryContact\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.DeliveryContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalutationName {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.SalutationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalutationName\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.SalutationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ComponentMarkupPerc {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.ComponentMarkupPercColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComponentMarkupPerc\' in table \'MainEstimateDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.ComponentMarkupPercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OtherTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherTotal\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OtherTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PricePerRunOnLocked {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.PricePerRunOnLockedColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.PricePerRunOnLockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PricePerRunOn {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.PricePerRunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PricePerRunOn\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PricePerRunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ForeignPricePerRunOn {
                get {
                    return ((double)(this[this.tableMainEstimateDetails.ForeignPricePerRunOnColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.ForeignPricePerRunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte PricingUnits {
                get {
                    try {
                        return ((byte)(this[this.tableMainEstimateDetails.PricingUnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PricingUnits\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.PricingUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EstRefNum {
                get {
                    try {
                        return ((int)(this[this.tableMainEstimateDetails.EstRefNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstRefNum\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.EstRefNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RunOnLocked {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.RunOnLockedColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.RunOnLockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CurrencyValueLocked {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.CurrencyValueLockedColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.CurrencyValueLockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SellingPriceBandID {
                get {
                    try {
                        return ((int)(this[this.tableMainEstimateDetails.SellingPriceBandIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellingPriceBandID\' in table \'MainEstimateDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.SellingPriceBandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LockedCurrencyID {
                get {
                    try {
                        return ((int)(this[this.tableMainEstimateDetails.LockedCurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockedCurrencyID\' in table \'MainEstimateDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.LockedCurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LockedForeignTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.LockedForeignTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockedForeignTotal\' in table \'MainEstimateDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.LockedForeignTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompositeEst {
                get {
                    try {
                        return ((bool)(this[this.tableMainEstimateDetails.IsCompositeEstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCompositeEst\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.IsCompositeEstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ComponentTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.ComponentTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComponentTotal\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.ComponentTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CustomerAgencyCommPerc {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.CustomerAgencyCommPercColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerAgencyCommPerc\' in table \'MainEstimateDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CustomerAgencyCommPercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherTotalNonRounded {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.OtherTotalNonRoundedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherTotalNonRounded\' in table \'MainEstimateDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OtherTotalNonRoundedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EstDescriptionTemplateID {
                get {
                    try {
                        return ((int)(this[this.tableMainEstimateDetails.EstDescriptionTemplateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstDescriptionTemplateID\' in table \'MainEstimateDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.EstDescriptionTemplateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EstDescriptionTemplateName {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.EstDescriptionTemplateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstDescriptionTemplateName\' in table \'MainEstimateDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.EstDescriptionTemplateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExcPaperFromCompPriceMatrix {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.ExcPaperFromCompPriceMatrixColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.ExcPaperFromCompPriceMatrixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExcOrigMFromCompPriceMatrix {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.ExcOrigMFromCompPriceMatrixColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.ExcOrigMFromCompPriceMatrixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExcOrigLFromCompPriceMatrix {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.ExcOrigLFromCompPriceMatrixColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.ExcOrigLFromCompPriceMatrixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExcOthermFromCompPriceMatrix {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.ExcOthermFromCompPriceMatrixColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.ExcOthermFromCompPriceMatrixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExcOutworkFromCompPriceMatrix {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.ExcOutworkFromCompPriceMatrixColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.ExcOutworkFromCompPriceMatrixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExcPrintingFromCompPriceMatrix {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.ExcPrintingFromCompPriceMatrixColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.ExcPrintingFromCompPriceMatrixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExcFinishingFromCompPriceMatrix {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.ExcFinishingFromCompPriceMatrixColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.ExcFinishingFromCompPriceMatrixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeTypeCustomer {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.IsFreeTypeCustomerColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.IsFreeTypeCustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool KeepFinishedSize {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.KeepFinishedSizeColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.KeepFinishedSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreatedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainEstimateDetails.CreatedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDateTime\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CreatedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxCode {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.TaxCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxCode\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.TaxCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CourierServiceID {
                get {
                    try {
                        return ((int)(this[this.tableMainEstimateDetails.CourierServiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CourierServiceID\' in table \'MainEstimateDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CourierServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Courier {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CourierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Courier\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CourierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Published {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.PublishedColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.PublishedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseRounding {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.UseRoundingColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.UseRoundingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool QuantityPerPaperLine {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.QuantityPerPaperLineColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.QuantityPerPaperLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CampaignNo {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.CampaignNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CampaignNo\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.CampaignNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CompanyID {
                get {
                    return ((int)(this[this.tableMainEstimateDetails.CompanyIDColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CreateSubJob {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.CreateSubJobColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.CreateSubJobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DisplayComponentOnInput {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.DisplayComponentOnInputColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.DisplayComponentOnInputColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ComponentAgencyComValue {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.ComponentAgencyComValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComponentAgencyComValue\' in table \'MainEstimateDetails\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.ComponentAgencyComValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseAgencyUndersandOvers {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.UseAgencyUndersandOversColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.UseAgencyUndersandOversColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Version {
                get {
                    return ((int)(this[this.tableMainEstimateDetails.VersionColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.VersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SecurityGroupID {
                get {
                    try {
                        return ((int)(this[this.tableMainEstimateDetails.SecurityGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecurityGroupID\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.SecurityGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpRecID {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.OpRecIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpRecID\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.OpRecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FSRecID {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.FSRecIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FSRecID\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.FSRecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte GMLink {
                get {
                    try {
                        return ((byte)(this[this.tableMainEstimateDetails.GMLinkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GMLink\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.GMLinkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExcludedCost {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.ExcludedCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExcludedCost\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.ExcludedCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StatusRef {
                get {
                    try {
                        return ((string)(this[this.tableMainEstimateDetails.StatusRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusRef\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.StatusRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EstRequestProductID {
                get {
                    return ((int)(this[this.tableMainEstimateDetails.EstRequestProductIDColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.EstRequestProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UserLimitsApplied {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.UserLimitsAppliedColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.UserLimitsAppliedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool InUse {
                get {
                    return ((bool)(this[this.tableMainEstimateDetails.InUseColumn]));
                }
                set {
                    this[this.tableMainEstimateDetails.InUseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LockDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainEstimateDetails.LockDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockDate\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.LockDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] dbTimeStamp {
                get {
                    try {
                        return ((byte[])(this[this.tableMainEstimateDetails.dbTimeStampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dbTimeStamp\' in table \'MainEstimateDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.dbTimeStampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MarkupExclusionsSubTotal {
                get {
                    try {
                        return ((double)(this[this.tableMainEstimateDetails.MarkupExclusionsSubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarkupExclusionsSubTotal\' in table \'MainEstimateDetails\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainEstimateDetails.MarkupExclusionsSubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMethodOfWorkingNull() {
                return this.IsNull(this.tableMainEstimateDetails.MethodOfWorkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMethodOfWorkingNull() {
                this[this.tableMainEstimateDetails.MethodOfWorkingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsTemplateNull() {
                return this.IsNull(this.tableMainEstimateDetails.IsTemplateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsTemplateNull() {
                this[this.tableMainEstimateDetails.IsTemplateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstimateDateNull() {
                return this.IsNull(this.tableMainEstimateDetails.EstimateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstimateDateNull() {
                this[this.tableMainEstimateDetails.EstimateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequiredNull() {
                return this.IsNull(this.tableMainEstimateDetails.RequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequiredNull() {
                this[this.tableMainEstimateDetails.RequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableMainEstimateDetails.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityNull() {
                this[this.tableMainEstimateDetails.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWeightNull() {
                return this.IsNull(this.tableMainEstimateDetails.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWeightNull() {
                this[this.tableMainEstimateDetails.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobTypeDescNull() {
                return this.IsNull(this.tableMainEstimateDetails.JobTypeDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobTypeDescNull() {
                this[this.tableMainEstimateDetails.JobTypeDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerRefNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerRefNull() {
                this[this.tableMainEstimateDetails.CustomerRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerNameNull() {
                this[this.tableMainEstimateDetails.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerAddressNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerAddressNull() {
                this[this.tableMainEstimateDetails.CustomerAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerTownNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerTownNull() {
                this[this.tableMainEstimateDetails.CustomerTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerCountyNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerCountyNull() {
                this[this.tableMainEstimateDetails.CustomerCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerPostcodeNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerPostcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerPostcodeNull() {
                this[this.tableMainEstimateDetails.CustomerPostcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerCountryNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerCountryNull() {
                this[this.tableMainEstimateDetails.CustomerCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerCountryOfOriginNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerCountryOfOriginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerCountryOfOriginNull() {
                this[this.tableMainEstimateDetails.CustomerCountryOfOriginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerContactNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerContactNull() {
                this[this.tableMainEstimateDetails.CustomerContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerTelNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerTelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerTelNull() {
                this[this.tableMainEstimateDetails.CustomerTelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerFaxNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerFaxNull() {
                this[this.tableMainEstimateDetails.CustomerFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerEmailNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerEmailNull() {
                this[this.tableMainEstimateDetails.CustomerEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerUpliftNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerUpliftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerUpliftNull() {
                this[this.tableMainEstimateDetails.CustomerUpliftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerExchangeNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerExchangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerExchangeNull() {
                this[this.tableMainEstimateDetails.CustomerExchangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderedNull() {
                return this.IsNull(this.tableMainEstimateDetails.OrderedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderedNull() {
                this[this.tableMainEstimateDetails.OrderedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobCreatedNull() {
                return this.IsNull(this.tableMainEstimateDetails.JobCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobCreatedNull() {
                this[this.tableMainEstimateDetails.JobCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef1Null() {
                return this.IsNull(this.tableMainEstimateDetails.Ref1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef1Null() {
                this[this.tableMainEstimateDetails.Ref1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef2Null() {
                return this.IsNull(this.tableMainEstimateDetails.Ref2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef2Null() {
                this[this.tableMainEstimateDetails.Ref2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef3Null() {
                return this.IsNull(this.tableMainEstimateDetails.Ref3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef3Null() {
                this[this.tableMainEstimateDetails.Ref3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef4Null() {
                return this.IsNull(this.tableMainEstimateDetails.Ref4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef4Null() {
                this[this.tableMainEstimateDetails.Ref4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef5Null() {
                return this.IsNull(this.tableMainEstimateDetails.Ref5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef5Null() {
                this[this.tableMainEstimateDetails.Ref5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef6Null() {
                return this.IsNull(this.tableMainEstimateDetails.Ref6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef6Null() {
                this[this.tableMainEstimateDetails.Ref6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef7Null() {
                return this.IsNull(this.tableMainEstimateDetails.Ref7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef7Null() {
                this[this.tableMainEstimateDetails.Ref7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef8Null() {
                return this.IsNull(this.tableMainEstimateDetails.Ref8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef8Null() {
                this[this.tableMainEstimateDetails.Ref8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef9Null() {
                return this.IsNull(this.tableMainEstimateDetails.Ref9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef9Null() {
                this[this.tableMainEstimateDetails.Ref9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef10Null() {
                return this.IsNull(this.tableMainEstimateDetails.Ref10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef10Null() {
                this[this.tableMainEstimateDetails.Ref10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobTypeNull() {
                return this.IsNull(this.tableMainEstimateDetails.JobTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobTypeNull() {
                this[this.tableMainEstimateDetails.JobTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderExpenseNull() {
                return this.IsNull(this.tableMainEstimateDetails.OrderExpenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderExpenseNull() {
                this[this.tableMainEstimateDetails.OrderExpenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstimatorNull() {
                return this.IsNull(this.tableMainEstimateDetails.EstimatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstimatorNull() {
                this[this.tableMainEstimateDetails.EstimatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateUserNameNull() {
                return this.IsNull(this.tableMainEstimateDetails.UpdateUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateUserNameNull() {
                this[this.tableMainEstimateDetails.UpdateUserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastModifiedNull() {
                return this.IsNull(this.tableMainEstimateDetails.LastModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastModifiedNull() {
                this[this.tableMainEstimateDetails.LastModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRunOnPerNull() {
                return this.IsNull(this.tableMainEstimateDetails.RunOnPerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRunOnPerNull() {
                this[this.tableMainEstimateDetails.RunOnPerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaperSubTotNull() {
                return this.IsNull(this.tableMainEstimateDetails.PaperSubTotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaperSubTotNull() {
                this[this.tableMainEstimateDetails.PaperSubTotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaperMarkUpPercentNull() {
                return this.IsNull(this.tableMainEstimateDetails.PaperMarkUpPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaperMarkUpPercentNull() {
                this[this.tableMainEstimateDetails.PaperMarkUpPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaperMarkupNull() {
                return this.IsNull(this.tableMainEstimateDetails.PaperMarkupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaperMarkupNull() {
                this[this.tableMainEstimateDetails.PaperMarkupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginMatSubTotNull() {
                return this.IsNull(this.tableMainEstimateDetails.OriginMatSubTotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginMatSubTotNull() {
                this[this.tableMainEstimateDetails.OriginMatSubTotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginMatMarkUpPercentNull() {
                return this.IsNull(this.tableMainEstimateDetails.OriginMatMarkUpPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginMatMarkUpPercentNull() {
                this[this.tableMainEstimateDetails.OriginMatMarkUpPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginMatMarkUpNull() {
                return this.IsNull(this.tableMainEstimateDetails.OriginMatMarkUpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginMatMarkUpNull() {
                this[this.tableMainEstimateDetails.OriginMatMarkUpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginLabSubTotNull() {
                return this.IsNull(this.tableMainEstimateDetails.OriginLabSubTotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginLabSubTotNull() {
                this[this.tableMainEstimateDetails.OriginLabSubTotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginLabMarkUpPercentNull() {
                return this.IsNull(this.tableMainEstimateDetails.OriginLabMarkUpPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginLabMarkUpPercentNull() {
                this[this.tableMainEstimateDetails.OriginLabMarkUpPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginLabMarkUpNull() {
                return this.IsNull(this.tableMainEstimateDetails.OriginLabMarkUpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginLabMarkUpNull() {
                this[this.tableMainEstimateDetails.OriginLabMarkUpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginLabLabSubTotNull() {
                return this.IsNull(this.tableMainEstimateDetails.OriginLabLabSubTotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginLabLabSubTotNull() {
                this[this.tableMainEstimateDetails.OriginLabLabSubTotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutworkSubtotNull() {
                return this.IsNull(this.tableMainEstimateDetails.OutworkSubtotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutworkSubtotNull() {
                this[this.tableMainEstimateDetails.OutworkSubtotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutworkMarkUpPercentNull() {
                return this.IsNull(this.tableMainEstimateDetails.OutworkMarkUpPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutworkMarkUpPercentNull() {
                this[this.tableMainEstimateDetails.OutworkMarkUpPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutworkMarkUpNull() {
                return this.IsNull(this.tableMainEstimateDetails.OutworkMarkUpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutworkMarkUpNull() {
                this[this.tableMainEstimateDetails.OutworkMarkUpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherMatSubTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.OtherMatSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherMatSubTotalNull() {
                this[this.tableMainEstimateDetails.OtherMatSubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherMatMarkUpPercentNull() {
                return this.IsNull(this.tableMainEstimateDetails.OtherMatMarkUpPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherMatMarkUpPercentNull() {
                this[this.tableMainEstimateDetails.OtherMatMarkUpPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherMatMarkUpNull() {
                return this.IsNull(this.tableMainEstimateDetails.OtherMatMarkUpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherMatMarkUpNull() {
                this[this.tableMainEstimateDetails.OtherMatMarkUpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrintingLabSubTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.PrintingLabSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrintingLabSubTotalNull() {
                this[this.tableMainEstimateDetails.PrintingLabSubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrintingOHSubTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.PrintingOHSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrintingOHSubTotalNull() {
                this[this.tableMainEstimateDetails.PrintingOHSubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrintingSubTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.PrintingSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrintingSubTotalNull() {
                this[this.tableMainEstimateDetails.PrintingSubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrintingMarkUpPercentNull() {
                return this.IsNull(this.tableMainEstimateDetails.PrintingMarkUpPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrintingMarkUpPercentNull() {
                this[this.tableMainEstimateDetails.PrintingMarkUpPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrintingMarkUpNull() {
                return this.IsNull(this.tableMainEstimateDetails.PrintingMarkUpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrintingMarkUpNull() {
                this[this.tableMainEstimateDetails.PrintingMarkUpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinishingLabSubTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.FinishingLabSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinishingLabSubTotalNull() {
                this[this.tableMainEstimateDetails.FinishingLabSubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinishingOHSubTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.FinishingOHSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinishingOHSubTotalNull() {
                this[this.tableMainEstimateDetails.FinishingOHSubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinishingSubTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.FinishingSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinishingSubTotalNull() {
                this[this.tableMainEstimateDetails.FinishingSubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinishingMarkUpPercentNull() {
                return this.IsNull(this.tableMainEstimateDetails.FinishingMarkUpPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinishingMarkUpPercentNull() {
                this[this.tableMainEstimateDetails.FinishingMarkUpPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinishingMarkUpNull() {
                return this.IsNull(this.tableMainEstimateDetails.FinishingMarkUpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinishingMarkUpNull() {
                this[this.tableMainEstimateDetails.FinishingMarkUpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCarriageSubTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.CarriageSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCarriageSubTotalNull() {
                this[this.tableMainEstimateDetails.CarriageSubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCarriageMarkUpPercentNull() {
                return this.IsNull(this.tableMainEstimateDetails.CarriageMarkUpPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCarriageMarkUpPercentNull() {
                this[this.tableMainEstimateDetails.CarriageMarkUpPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCarriageMarkUpNull() {
                return this.IsNull(this.tableMainEstimateDetails.CarriageMarkUpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCarriageMarkUpNull() {
                this[this.tableMainEstimateDetails.CarriageMarkUpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalSubTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.TotalSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalSubTotalNull() {
                this[this.tableMainEstimateDetails.TotalSubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalMarkUpPercentNull() {
                return this.IsNull(this.tableMainEstimateDetails.TotalMarkUpPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalMarkUpPercentNull() {
                this[this.tableMainEstimateDetails.TotalMarkUpPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalMarkUpNull() {
                return this.IsNull(this.tableMainEstimateDetails.TotalMarkUpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalMarkUpNull() {
                this[this.tableMainEstimateDetails.TotalMarkUpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.TotalTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalTotalNull() {
                this[this.tableMainEstimateDetails.TotalTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeCurrencyNull() {
                return this.IsNull(this.tableMainEstimateDetails.ExchangeCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeCurrencyNull() {
                this[this.tableMainEstimateDetails.ExchangeCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateNull() {
                return this.IsNull(this.tableMainEstimateDetails.ExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateNull() {
                this[this.tableMainEstimateDetails.ExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsForeignTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.ForeignTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetForeignTotalNull() {
                this[this.tableMainEstimateDetails.ForeignTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRunOnValueNull() {
                return this.IsNull(this.tableMainEstimateDetails.RunOnValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRunOnValueNull() {
                this[this.tableMainEstimateDetails.RunOnValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobDescriptionNull() {
                return this.IsNull(this.tableMainEstimateDetails.JobDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobDescriptionNull() {
                this[this.tableMainEstimateDetails.JobDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNoOfJobDescLinesNull() {
                return this.IsNull(this.tableMainEstimateDetails.NoOfJobDescLinesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNoOfJobDescLinesNull() {
                this[this.tableMainEstimateDetails.NoOfJobDescLinesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaperRunOnNull() {
                return this.IsNull(this.tableMainEstimateDetails.PaperRunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaperRunOnNull() {
                this[this.tableMainEstimateDetails.PaperRunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginMatRunOnNull() {
                return this.IsNull(this.tableMainEstimateDetails.OriginMatRunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginMatRunOnNull() {
                this[this.tableMainEstimateDetails.OriginMatRunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginLabRunOnNull() {
                return this.IsNull(this.tableMainEstimateDetails.OriginLabRunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginLabRunOnNull() {
                this[this.tableMainEstimateDetails.OriginLabRunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutworkRunOnNull() {
                return this.IsNull(this.tableMainEstimateDetails.OutworkRunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutworkRunOnNull() {
                this[this.tableMainEstimateDetails.OutworkRunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherMatRunOnNull() {
                return this.IsNull(this.tableMainEstimateDetails.OtherMatRunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherMatRunOnNull() {
                this[this.tableMainEstimateDetails.OtherMatRunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrintingRunOnNull() {
                return this.IsNull(this.tableMainEstimateDetails.PrintingRunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrintingRunOnNull() {
                this[this.tableMainEstimateDetails.PrintingRunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinishingRunOnNull() {
                return this.IsNull(this.tableMainEstimateDetails.FinishingRunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinishingRunOnNull() {
                this[this.tableMainEstimateDetails.FinishingRunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCarriageRunOnNull() {
                return this.IsNull(this.tableMainEstimateDetails.CarriageRunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCarriageRunOnNull() {
                this[this.tableMainEstimateDetails.CarriageRunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstimateHeaderRefNull() {
                return this.IsNull(this.tableMainEstimateDetails.EstimateHeaderRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstimateHeaderRefNull() {
                this[this.tableMainEstimateDetails.EstimateHeaderRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkingLevelNull() {
                return this.IsNull(this.tableMainEstimateDetails.WorkingLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkingLevelNull() {
                this[this.tableMainEstimateDetails.WorkingLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgencyComPercNull() {
                return this.IsNull(this.tableMainEstimateDetails.AgencyComPercColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgencyComPercNull() {
                this[this.tableMainEstimateDetails.AgencyComPercColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgencyComValueNull() {
                return this.IsNull(this.tableMainEstimateDetails.AgencyComValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgencyComValueNull() {
                this[this.tableMainEstimateDetails.AgencyComValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRevisedFromIDNull() {
                return this.IsNull(this.tableMainEstimateDetails.RevisedFromIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRevisedFromIDNull() {
                this[this.tableMainEstimateDetails.RevisedFromIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRFQStatusNull() {
                return this.IsNull(this.tableMainEstimateDetails.RFQStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRFQStatusNull() {
                this[this.tableMainEstimateDetails.RFQStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRFQIDNull() {
                return this.IsNull(this.tableMainEstimateDetails.RFQIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRFQIDNull() {
                this[this.tableMainEstimateDetails.RFQIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryRefNull() {
                return this.IsNull(this.tableMainEstimateDetails.DeliveryRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryRefNull() {
                this[this.tableMainEstimateDetails.DeliveryRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryContactNull() {
                return this.IsNull(this.tableMainEstimateDetails.DeliveryContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryContactNull() {
                this[this.tableMainEstimateDetails.DeliveryContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalutationNameNull() {
                return this.IsNull(this.tableMainEstimateDetails.SalutationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalutationNameNull() {
                this[this.tableMainEstimateDetails.SalutationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComponentMarkupPercNull() {
                return this.IsNull(this.tableMainEstimateDetails.ComponentMarkupPercColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComponentMarkupPercNull() {
                this[this.tableMainEstimateDetails.ComponentMarkupPercColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.OtherTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherTotalNull() {
                this[this.tableMainEstimateDetails.OtherTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPricePerRunOnNull() {
                return this.IsNull(this.tableMainEstimateDetails.PricePerRunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPricePerRunOnNull() {
                this[this.tableMainEstimateDetails.PricePerRunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPricingUnitsNull() {
                return this.IsNull(this.tableMainEstimateDetails.PricingUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPricingUnitsNull() {
                this[this.tableMainEstimateDetails.PricingUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstRefNumNull() {
                return this.IsNull(this.tableMainEstimateDetails.EstRefNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstRefNumNull() {
                this[this.tableMainEstimateDetails.EstRefNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellingPriceBandIDNull() {
                return this.IsNull(this.tableMainEstimateDetails.SellingPriceBandIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellingPriceBandIDNull() {
                this[this.tableMainEstimateDetails.SellingPriceBandIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLockedCurrencyIDNull() {
                return this.IsNull(this.tableMainEstimateDetails.LockedCurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLockedCurrencyIDNull() {
                this[this.tableMainEstimateDetails.LockedCurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLockedForeignTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.LockedForeignTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLockedForeignTotalNull() {
                this[this.tableMainEstimateDetails.LockedForeignTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsCompositeEstNull() {
                return this.IsNull(this.tableMainEstimateDetails.IsCompositeEstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsCompositeEstNull() {
                this[this.tableMainEstimateDetails.IsCompositeEstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComponentTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.ComponentTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComponentTotalNull() {
                this[this.tableMainEstimateDetails.ComponentTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerAgencyCommPercNull() {
                return this.IsNull(this.tableMainEstimateDetails.CustomerAgencyCommPercColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerAgencyCommPercNull() {
                this[this.tableMainEstimateDetails.CustomerAgencyCommPercColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherTotalNonRoundedNull() {
                return this.IsNull(this.tableMainEstimateDetails.OtherTotalNonRoundedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherTotalNonRoundedNull() {
                this[this.tableMainEstimateDetails.OtherTotalNonRoundedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstDescriptionTemplateIDNull() {
                return this.IsNull(this.tableMainEstimateDetails.EstDescriptionTemplateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstDescriptionTemplateIDNull() {
                this[this.tableMainEstimateDetails.EstDescriptionTemplateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstDescriptionTemplateNameNull() {
                return this.IsNull(this.tableMainEstimateDetails.EstDescriptionTemplateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstDescriptionTemplateNameNull() {
                this[this.tableMainEstimateDetails.EstDescriptionTemplateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatedDateTimeNull() {
                return this.IsNull(this.tableMainEstimateDetails.CreatedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatedDateTimeNull() {
                this[this.tableMainEstimateDetails.CreatedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxCodeNull() {
                return this.IsNull(this.tableMainEstimateDetails.TaxCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxCodeNull() {
                this[this.tableMainEstimateDetails.TaxCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCourierServiceIDNull() {
                return this.IsNull(this.tableMainEstimateDetails.CourierServiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCourierServiceIDNull() {
                this[this.tableMainEstimateDetails.CourierServiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCourierNull() {
                return this.IsNull(this.tableMainEstimateDetails.CourierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCourierNull() {
                this[this.tableMainEstimateDetails.CourierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCampaignNoNull() {
                return this.IsNull(this.tableMainEstimateDetails.CampaignNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCampaignNoNull() {
                this[this.tableMainEstimateDetails.CampaignNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComponentAgencyComValueNull() {
                return this.IsNull(this.tableMainEstimateDetails.ComponentAgencyComValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComponentAgencyComValueNull() {
                this[this.tableMainEstimateDetails.ComponentAgencyComValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecurityGroupIDNull() {
                return this.IsNull(this.tableMainEstimateDetails.SecurityGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecurityGroupIDNull() {
                this[this.tableMainEstimateDetails.SecurityGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOpRecIDNull() {
                return this.IsNull(this.tableMainEstimateDetails.OpRecIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOpRecIDNull() {
                this[this.tableMainEstimateDetails.OpRecIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFSRecIDNull() {
                return this.IsNull(this.tableMainEstimateDetails.FSRecIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFSRecIDNull() {
                this[this.tableMainEstimateDetails.FSRecIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGMLinkNull() {
                return this.IsNull(this.tableMainEstimateDetails.GMLinkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGMLinkNull() {
                this[this.tableMainEstimateDetails.GMLinkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExcludedCostNull() {
                return this.IsNull(this.tableMainEstimateDetails.ExcludedCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExcludedCostNull() {
                this[this.tableMainEstimateDetails.ExcludedCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatusRefNull() {
                return this.IsNull(this.tableMainEstimateDetails.StatusRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatusRefNull() {
                this[this.tableMainEstimateDetails.StatusRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLockDateNull() {
                return this.IsNull(this.tableMainEstimateDetails.LockDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLockDateNull() {
                this[this.tableMainEstimateDetails.LockDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdbTimeStampNull() {
                return this.IsNull(this.tableMainEstimateDetails.dbTimeStampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdbTimeStampNull() {
                this[this.tableMainEstimateDetails.dbTimeStampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarkupExclusionsSubTotalNull() {
                return this.IsNull(this.tableMainEstimateDetails.MarkupExclusionsSubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarkupExclusionsSubTotalNull() {
                this[this.tableMainEstimateDetails.MarkupExclusionsSubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OriginationMaterialInputRow[] GetOriginationMaterialInputRows() {
                if ((this.Table.ChildRelations["FK_OriginationMaterialInput_MainEstimateDetails"] == null)) {
                    return new OriginationMaterialInputRow[0];
                }
                else {
                    return ((OriginationMaterialInputRow[])(base.GetChildRows(this.Table.ChildRelations["FK_OriginationMaterialInput_MainEstimateDetails"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MainJobDetailsRow : global::System.Data.DataRow {
            
            private MainJobDetailsDataTable tableMainJobDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MainJobDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMainJobDetails = ((MainJobDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableMainJobDetails.IDColumn]));
                }
                set {
                    this[this.tableMainJobDetails.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MethodOfWorking {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.MethodOfWorkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MethodOfWorking\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.MethodOfWorkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte WorksPrinted {
                get {
                    try {
                        return ((byte)(this[this.tableMainJobDetails.WorksPrintedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorksPrinted\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.WorksPrintedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MultipleProducts {
                get {
                    return ((bool)(this[this.tableMainJobDetails.MultipleProductsColumn]));
                }
                set {
                    this[this.tableMainJobDetails.MultipleProductsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobNo {
                get {
                    return ((string)(this[this.tableMainJobDetails.JobNoColumn]));
                }
                set {
                    this[this.tableMainJobDetails.JobNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Datedb {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainJobDetails.DatedbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Datedb\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DatedbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceID {
                get {
                    try {
                        return ((int)(this[this.tableMainJobDetails.InvoiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceID\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceCustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.InvoiceCustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceCustomerCode\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceCustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceCustomerName {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.InvoiceCustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceCustomerName\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceCustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceAddress {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.InvoiceAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceAddress\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceTown {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.InvoiceTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceTown\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceCounty {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.InvoiceCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceCounty\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoicePostcode {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.InvoicePostcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoicePostcode\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoicePostcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceCountry {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.InvoiceCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceCountry\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceContact {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.InvoiceContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceContact\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceTel {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.InvoiceTelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceTel\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceTelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceFax {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.InvoiceFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceFax\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short InvoiceExchange {
                get {
                    try {
                        return ((short)(this[this.tableMainJobDetails.InvoiceExchangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceExchange\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceExchangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryCustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DeliveryCustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryCustomerCode\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DeliveryCustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryCustomerName {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DeliveryCustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryCustomerName\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DeliveryCustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryAddress {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DeliveryAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryAddress\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DeliveryAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryTown {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DeliveryTownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryTown\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DeliveryTownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryCounty {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DeliveryCountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryCounty\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DeliveryCountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryPostcode {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DeliveryPostcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryPostcode\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DeliveryPostcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryCountry {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DeliveryCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryCountry\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DeliveryCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryContact {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DeliveryContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryContact\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DeliveryContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryTel {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DeliveryTelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryTel\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DeliveryTelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryFax {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DeliveryFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryFax\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DeliveryFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrevJob {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.PrevJobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevJob\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.PrevJobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderNo {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.OrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderNo\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.OrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityOrdered {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.QuantityOrderedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuantityOrdered\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.QuantityOrderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityDelivered {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.QuantityDeliveredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuantityDelivered\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.QuantityDeliveredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityInStock {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.QuantityInStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuantityInStock\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.QuantityInStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StockCode {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.StockCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockCode\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.StockCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StockSize {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.StockSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockSize\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.StockSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref1 {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.Ref1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref1\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.Ref1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref2 {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.Ref2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref2\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.Ref2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref3 {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.Ref3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref3\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.Ref3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref4 {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.Ref4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref4\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.Ref4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref5 {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.Ref5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref5\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.Ref5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref6 {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.Ref6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref6\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.Ref6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref7 {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.Ref7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref7\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.Ref7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref8 {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.Ref8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref8\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.Ref8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref9 {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.Ref9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref9\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.Ref9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref10 {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.Ref10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref10\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.Ref10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobType {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.JobTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobType\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.JobTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VatCode {
                get {
                    return ((string)(this[this.tableMainJobDetails.VatCodeColumn]));
                }
                set {
                    this[this.tableMainJobDetails.VatCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PriceEst {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.PriceEstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceEst\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.PriceEstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ProfitEst {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.ProfitEstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfitEst\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.ProfitEstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ProfitAct {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.ProfitActColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfitAct\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.ProfitActColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobDesc {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.JobDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobDesc\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.JobDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OurOrderNo {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.OurOrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OurOrderNo\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.OurOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastOpDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainJobDetails.LastOpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastOpDate\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.LastOpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastOpCode {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.LastOpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastOpCode\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.LastOpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastOpDesc {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.LastOpDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastOpDesc\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.LastOpDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool JobCompleted {
                get {
                    return ((bool)(this[this.tableMainJobDetails.JobCompletedColumn]));
                }
                set {
                    this[this.tableMainJobDetails.JobCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime JobCompletionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainJobDetails.JobCompletionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobCompletionDate\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.JobCompletionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EstimateHeaderRef {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.EstimateHeaderRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateHeaderRef\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.EstimateHeaderRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EstimateID {
                get {
                    try {
                        return ((int)(this[this.tableMainJobDetails.EstimateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateID\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.EstimateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobTypeDesc {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.JobTypeDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobTypeDesc\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.JobTypeDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobDept {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.JobDeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobDept\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.JobDeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrderLineID {
                get {
                    try {
                        return ((int)(this[this.tableMainJobDetails.OrderLineIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderLineID\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.OrderLineIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CostCentre {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.CostCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostCentre\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.CostCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityInvoiced {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.QuantityInvoicedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuantityInvoiced\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.QuantityInvoicedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityProduced {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.QuantityProducedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuantityProduced\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.QuantityProducedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool InvoiceCompleted {
                get {
                    return ((bool)(this[this.tableMainJobDetails.InvoiceCompletedColumn]));
                }
                set {
                    this[this.tableMainJobDetails.InvoiceCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool JobCancelled {
                get {
                    return ((bool)(this[this.tableMainJobDetails.JobCancelledColumn]));
                }
                set {
                    this[this.tableMainJobDetails.JobCancelledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Estimator {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.EstimatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Estimator\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.EstimatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RequiredTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainJobDetails.RequiredTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequiredTime\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.RequiredTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerRef2 {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.CustomerRef2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerRef2\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.CustomerRef2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreateUserName {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.CreateUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateUserName\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.CreateUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainJobDetails.CreateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateDateTime\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUserName {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.UpdateUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateUserName\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.UpdateUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainJobDetails.UpdateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateDateTime\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.UpdateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OverHeadPercent {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.OverHeadPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverHeadPercent\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.OverHeadPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IssueNumber {
                get {
                    try {
                        return ((int)(this[this.tableMainJobDetails.IssueNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueNumber\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.IssueNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Derived {
                get {
                    try {
                        return ((byte)(this[this.tableMainJobDetails.DerivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Derived\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DerivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FinishedProductionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainJobDetails.FinishedProductionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishedProductionDate\' in table \'MainJobDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.FinishedProductionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PostingCode {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.PostingCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostingCode\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.PostingCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PostingContact {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.PostingContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostingContact\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.PostingContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OriginalEstimateHeaderRef {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.OriginalEstimateHeaderRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalEstimateHeaderRef\' in table \'MainJobDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.OriginalEstimateHeaderRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OriginalEstimateID {
                get {
                    try {
                        return ((int)(this[this.tableMainJobDetails.OriginalEstimateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalEstimateID\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.OriginalEstimateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAltered {
                get {
                    return ((bool)(this[this.tableMainJobDetails.IsAlteredColumn]));
                }
                set {
                    this[this.tableMainJobDetails.IsAlteredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OriginalEstimateQuantity {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.OriginalEstimateQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginalEstimateQuantity\' in table \'MainJobDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.OriginalEstimateQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentJob {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.ParentJobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentJob\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.ParentJobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OutOnProof {
                get {
                    return ((bool)(this[this.tableMainJobDetails.OutOnProofColumn]));
                }
                set {
                    this[this.tableMainJobDetails.OutOnProofColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ProofSentDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainJobDetails.ProofSentDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProofSentDateTime\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.ProofSentDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ProofReturnedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainJobDetails.ProofReturnedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProofReturnedDateTime\' in table \'MainJobDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.ProofReturnedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Weight {
                get {
                    try {
                        return ((double)(this[this.tableMainJobDetails.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SSDModeOfTransport {
                get {
                    return ((byte)(this[this.tableMainJobDetails.SSDModeOfTransportColumn]));
                }
                set {
                    this[this.tableMainJobDetails.SSDModeOfTransportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SSDNatureOfTransaction {
                get {
                    return ((byte)(this[this.tableMainJobDetails.SSDNatureOfTransactionColumn]));
                }
                set {
                    this[this.tableMainJobDetails.SSDNatureOfTransactionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSDDeliveryTerms {
                get {
                    return ((string)(this[this.tableMainJobDetails.SSDDeliveryTermsColumn]));
                }
                set {
                    this[this.tableMainJobDetails.SSDDeliveryTermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Currency {
                get {
                    return ((int)(this[this.tableMainJobDetails.CurrencyColumn]));
                }
                set {
                    this[this.tableMainJobDetails.CurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExchangeRate {
                get {
                    return ((double)(this[this.tableMainJobDetails.ExchangeRateColumn]));
                }
                set {
                    this[this.tableMainJobDetails.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ForeignTotal {
                get {
                    return ((double)(this[this.tableMainJobDetails.ForeignTotalColumn]));
                }
                set {
                    this[this.tableMainJobDetails.ForeignTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte RoleInSeries {
                get {
                    return ((byte)(this[this.tableMainJobDetails.RoleInSeriesColumn]));
                }
                set {
                    this[this.tableMainJobDetails.RoleInSeriesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] SentToJDF {
                get {
                    try {
                        return ((byte[])(this[this.tableMainJobDetails.SentToJDFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SentToJDF\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.SentToJDFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceCountryOfOrigin {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.InvoiceCountryOfOriginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceCountryOfOrigin\' in table \'MainJobDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.InvoiceCountryOfOriginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryCountryOfOrigin {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.DeliveryCountryOfOriginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryCountryOfOrigin\' in table \'MainJobDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DeliveryCountryOfOriginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiced {
                get {
                    return ((bool)(this[this.tableMainJobDetails.IsInvoicedColumn]));
                }
                set {
                    this[this.tableMainJobDetails.IsInvoicedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AgencyComPerc {
                get {
                    return ((double)(this[this.tableMainJobDetails.AgencyComPercColumn]));
                }
                set {
                    this[this.tableMainJobDetails.AgencyComPercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JDFStatus {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.JDFStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JDFStatus\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.JDFStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductionJob {
                get {
                    return ((bool)(this[this.tableMainJobDetails.IsProductionJobColumn]));
                }
                set {
                    this[this.tableMainJobDetails.IsProductionJobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte OriginationOfJob {
                get {
                    return ((byte)(this[this.tableMainJobDetails.OriginationOfJobColumn]));
                }
                set {
                    this[this.tableMainJobDetails.OriginationOfJobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JDFRef {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.JDFRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JDFRef\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.JDFRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NewJDFAcknowledged {
                get {
                    return ((bool)(this[this.tableMainJobDetails.NewJDFAcknowledgedColumn]));
                }
                set {
                    this[this.tableMainJobDetails.NewJDFAcknowledgedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MilestoneGroup {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.MilestoneGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MilestoneGroup\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.MilestoneGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MethodOfWorkingModified {
                get {
                    return ((bool)(this[this.tableMainJobDetails.MethodOfWorkingModifiedColumn]));
                }
                set {
                    this[this.tableMainJobDetails.MethodOfWorkingModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CompanyID {
                get {
                    return ((int)(this[this.tableMainJobDetails.CompanyIDColumn]));
                }
                set {
                    this[this.tableMainJobDetails.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte JobGanged {
                get {
                    return ((byte)(this[this.tableMainJobDetails.JobGangedColumn]));
                }
                set {
                    this[this.tableMainJobDetails.JobGangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainJobDetails.DateModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateModified\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DateModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ModifiedByUserID {
                get {
                    try {
                        return ((int)(this[this.tableMainJobDetails.ModifiedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedByUserID\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.ModifiedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SecurityGroupID {
                get {
                    try {
                        return ((int)(this[this.tableMainJobDetails.SecurityGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecurityGroupID\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.SecurityGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastMilestone {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.LastMilestoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastMilestone\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.LastMilestoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssemblyJob {
                get {
                    return ((bool)(this[this.tableMainJobDetails.IsAssemblyJobColumn]));
                }
                set {
                    this[this.tableMainJobDetails.IsAssemblyJobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DespatchDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainJobDetails.DespatchDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DespatchDate\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.DespatchDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BOMRevision {
                get {
                    return ((int)(this[this.tableMainJobDetails.BOMRevisionColumn]));
                }
                set {
                    this[this.tableMainJobDetails.BOMRevisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] dbTimeStamp {
                get {
                    try {
                        return ((byte[])(this[this.tableMainJobDetails.dbTimeStampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dbTimeStamp\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.dbTimeStampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTaxCodeID {
                get {
                    return ((int)(this[this.tableMainJobDetails.SalesTaxCodeIDColumn]));
                }
                set {
                    this[this.tableMainJobDetails.SalesTaxCodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTaxItemID {
                get {
                    return ((int)(this[this.tableMainJobDetails.SalesTaxItemIDColumn]));
                }
                set {
                    this[this.tableMainJobDetails.SalesTaxItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableMainJobDetails.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'MainJobDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainJobDetails.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte CreatedStockType {
                get {
                    return ((byte)(this[this.tableMainJobDetails.CreatedStockTypeColumn]));
                }
                set {
                    this[this.tableMainJobDetails.CreatedStockTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductTypeID {
                get {
                    return ((int)(this[this.tableMainJobDetails.ProductTypeIDColumn]));
                }
                set {
                    this[this.tableMainJobDetails.ProductTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMethodOfWorkingNull() {
                return this.IsNull(this.tableMainJobDetails.MethodOfWorkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMethodOfWorkingNull() {
                this[this.tableMainJobDetails.MethodOfWorkingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorksPrintedNull() {
                return this.IsNull(this.tableMainJobDetails.WorksPrintedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorksPrintedNull() {
                this[this.tableMainJobDetails.WorksPrintedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDatedbNull() {
                return this.IsNull(this.tableMainJobDetails.DatedbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDatedbNull() {
                this[this.tableMainJobDetails.DatedbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceIDNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceIDNull() {
                this[this.tableMainJobDetails.InvoiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceCustomerCodeNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceCustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceCustomerCodeNull() {
                this[this.tableMainJobDetails.InvoiceCustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceCustomerNameNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceCustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceCustomerNameNull() {
                this[this.tableMainJobDetails.InvoiceCustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceAddressNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceAddressNull() {
                this[this.tableMainJobDetails.InvoiceAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceTownNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceTownNull() {
                this[this.tableMainJobDetails.InvoiceTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceCountyNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceCountyNull() {
                this[this.tableMainJobDetails.InvoiceCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoicePostcodeNull() {
                return this.IsNull(this.tableMainJobDetails.InvoicePostcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoicePostcodeNull() {
                this[this.tableMainJobDetails.InvoicePostcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceCountryNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceCountryNull() {
                this[this.tableMainJobDetails.InvoiceCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceContactNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceContactNull() {
                this[this.tableMainJobDetails.InvoiceContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceTelNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceTelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceTelNull() {
                this[this.tableMainJobDetails.InvoiceTelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceFaxNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceFaxNull() {
                this[this.tableMainJobDetails.InvoiceFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceExchangeNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceExchangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceExchangeNull() {
                this[this.tableMainJobDetails.InvoiceExchangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryCustomerCodeNull() {
                return this.IsNull(this.tableMainJobDetails.DeliveryCustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryCustomerCodeNull() {
                this[this.tableMainJobDetails.DeliveryCustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryCustomerNameNull() {
                return this.IsNull(this.tableMainJobDetails.DeliveryCustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryCustomerNameNull() {
                this[this.tableMainJobDetails.DeliveryCustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryAddressNull() {
                return this.IsNull(this.tableMainJobDetails.DeliveryAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryAddressNull() {
                this[this.tableMainJobDetails.DeliveryAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryTownNull() {
                return this.IsNull(this.tableMainJobDetails.DeliveryTownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryTownNull() {
                this[this.tableMainJobDetails.DeliveryTownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryCountyNull() {
                return this.IsNull(this.tableMainJobDetails.DeliveryCountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryCountyNull() {
                this[this.tableMainJobDetails.DeliveryCountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryPostcodeNull() {
                return this.IsNull(this.tableMainJobDetails.DeliveryPostcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryPostcodeNull() {
                this[this.tableMainJobDetails.DeliveryPostcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryCountryNull() {
                return this.IsNull(this.tableMainJobDetails.DeliveryCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryCountryNull() {
                this[this.tableMainJobDetails.DeliveryCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryContactNull() {
                return this.IsNull(this.tableMainJobDetails.DeliveryContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryContactNull() {
                this[this.tableMainJobDetails.DeliveryContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryTelNull() {
                return this.IsNull(this.tableMainJobDetails.DeliveryTelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryTelNull() {
                this[this.tableMainJobDetails.DeliveryTelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryFaxNull() {
                return this.IsNull(this.tableMainJobDetails.DeliveryFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryFaxNull() {
                this[this.tableMainJobDetails.DeliveryFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrevJobNull() {
                return this.IsNull(this.tableMainJobDetails.PrevJobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrevJobNull() {
                this[this.tableMainJobDetails.PrevJobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderNoNull() {
                return this.IsNull(this.tableMainJobDetails.OrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderNoNull() {
                this[this.tableMainJobDetails.OrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityOrderedNull() {
                return this.IsNull(this.tableMainJobDetails.QuantityOrderedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityOrderedNull() {
                this[this.tableMainJobDetails.QuantityOrderedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityDeliveredNull() {
                return this.IsNull(this.tableMainJobDetails.QuantityDeliveredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityDeliveredNull() {
                this[this.tableMainJobDetails.QuantityDeliveredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityInStockNull() {
                return this.IsNull(this.tableMainJobDetails.QuantityInStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityInStockNull() {
                this[this.tableMainJobDetails.QuantityInStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStockCodeNull() {
                return this.IsNull(this.tableMainJobDetails.StockCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStockCodeNull() {
                this[this.tableMainJobDetails.StockCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStockSizeNull() {
                return this.IsNull(this.tableMainJobDetails.StockSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStockSizeNull() {
                this[this.tableMainJobDetails.StockSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef1Null() {
                return this.IsNull(this.tableMainJobDetails.Ref1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef1Null() {
                this[this.tableMainJobDetails.Ref1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef2Null() {
                return this.IsNull(this.tableMainJobDetails.Ref2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef2Null() {
                this[this.tableMainJobDetails.Ref2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef3Null() {
                return this.IsNull(this.tableMainJobDetails.Ref3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef3Null() {
                this[this.tableMainJobDetails.Ref3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef4Null() {
                return this.IsNull(this.tableMainJobDetails.Ref4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef4Null() {
                this[this.tableMainJobDetails.Ref4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef5Null() {
                return this.IsNull(this.tableMainJobDetails.Ref5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef5Null() {
                this[this.tableMainJobDetails.Ref5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef6Null() {
                return this.IsNull(this.tableMainJobDetails.Ref6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef6Null() {
                this[this.tableMainJobDetails.Ref6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef7Null() {
                return this.IsNull(this.tableMainJobDetails.Ref7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef7Null() {
                this[this.tableMainJobDetails.Ref7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef8Null() {
                return this.IsNull(this.tableMainJobDetails.Ref8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef8Null() {
                this[this.tableMainJobDetails.Ref8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef9Null() {
                return this.IsNull(this.tableMainJobDetails.Ref9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef9Null() {
                this[this.tableMainJobDetails.Ref9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef10Null() {
                return this.IsNull(this.tableMainJobDetails.Ref10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef10Null() {
                this[this.tableMainJobDetails.Ref10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobTypeNull() {
                return this.IsNull(this.tableMainJobDetails.JobTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobTypeNull() {
                this[this.tableMainJobDetails.JobTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceEstNull() {
                return this.IsNull(this.tableMainJobDetails.PriceEstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceEstNull() {
                this[this.tableMainJobDetails.PriceEstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProfitEstNull() {
                return this.IsNull(this.tableMainJobDetails.ProfitEstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProfitEstNull() {
                this[this.tableMainJobDetails.ProfitEstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProfitActNull() {
                return this.IsNull(this.tableMainJobDetails.ProfitActColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProfitActNull() {
                this[this.tableMainJobDetails.ProfitActColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobDescNull() {
                return this.IsNull(this.tableMainJobDetails.JobDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobDescNull() {
                this[this.tableMainJobDetails.JobDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOurOrderNoNull() {
                return this.IsNull(this.tableMainJobDetails.OurOrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOurOrderNoNull() {
                this[this.tableMainJobDetails.OurOrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastOpDateNull() {
                return this.IsNull(this.tableMainJobDetails.LastOpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastOpDateNull() {
                this[this.tableMainJobDetails.LastOpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastOpCodeNull() {
                return this.IsNull(this.tableMainJobDetails.LastOpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastOpCodeNull() {
                this[this.tableMainJobDetails.LastOpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastOpDescNull() {
                return this.IsNull(this.tableMainJobDetails.LastOpDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastOpDescNull() {
                this[this.tableMainJobDetails.LastOpDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobCompletionDateNull() {
                return this.IsNull(this.tableMainJobDetails.JobCompletionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobCompletionDateNull() {
                this[this.tableMainJobDetails.JobCompletionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstimateHeaderRefNull() {
                return this.IsNull(this.tableMainJobDetails.EstimateHeaderRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstimateHeaderRefNull() {
                this[this.tableMainJobDetails.EstimateHeaderRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstimateIDNull() {
                return this.IsNull(this.tableMainJobDetails.EstimateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstimateIDNull() {
                this[this.tableMainJobDetails.EstimateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobTypeDescNull() {
                return this.IsNull(this.tableMainJobDetails.JobTypeDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobTypeDescNull() {
                this[this.tableMainJobDetails.JobTypeDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobDeptNull() {
                return this.IsNull(this.tableMainJobDetails.JobDeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobDeptNull() {
                this[this.tableMainJobDetails.JobDeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderLineIDNull() {
                return this.IsNull(this.tableMainJobDetails.OrderLineIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderLineIDNull() {
                this[this.tableMainJobDetails.OrderLineIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalNull() {
                return this.IsNull(this.tableMainJobDetails.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalNull() {
                this[this.tableMainJobDetails.NominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostCentreNull() {
                return this.IsNull(this.tableMainJobDetails.CostCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostCentreNull() {
                this[this.tableMainJobDetails.CostCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tableMainJobDetails.DepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepartmentNull() {
                this[this.tableMainJobDetails.DepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tableMainJobDetails.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitPriceNull() {
                this[this.tableMainJobDetails.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityInvoicedNull() {
                return this.IsNull(this.tableMainJobDetails.QuantityInvoicedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityInvoicedNull() {
                this[this.tableMainJobDetails.QuantityInvoicedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityProducedNull() {
                return this.IsNull(this.tableMainJobDetails.QuantityProducedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityProducedNull() {
                this[this.tableMainJobDetails.QuantityProducedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstimatorNull() {
                return this.IsNull(this.tableMainJobDetails.EstimatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstimatorNull() {
                this[this.tableMainJobDetails.EstimatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequiredTimeNull() {
                return this.IsNull(this.tableMainJobDetails.RequiredTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequiredTimeNull() {
                this[this.tableMainJobDetails.RequiredTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerRef2Null() {
                return this.IsNull(this.tableMainJobDetails.CustomerRef2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerRef2Null() {
                this[this.tableMainJobDetails.CustomerRef2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateUserNameNull() {
                return this.IsNull(this.tableMainJobDetails.CreateUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateUserNameNull() {
                this[this.tableMainJobDetails.CreateUserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateDateTimeNull() {
                return this.IsNull(this.tableMainJobDetails.CreateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateDateTimeNull() {
                this[this.tableMainJobDetails.CreateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateUserNameNull() {
                return this.IsNull(this.tableMainJobDetails.UpdateUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateUserNameNull() {
                this[this.tableMainJobDetails.UpdateUserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateDateTimeNull() {
                return this.IsNull(this.tableMainJobDetails.UpdateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateDateTimeNull() {
                this[this.tableMainJobDetails.UpdateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverHeadPercentNull() {
                return this.IsNull(this.tableMainJobDetails.OverHeadPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverHeadPercentNull() {
                this[this.tableMainJobDetails.OverHeadPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIssueNumberNull() {
                return this.IsNull(this.tableMainJobDetails.IssueNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIssueNumberNull() {
                this[this.tableMainJobDetails.IssueNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDerivedNull() {
                return this.IsNull(this.tableMainJobDetails.DerivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDerivedNull() {
                this[this.tableMainJobDetails.DerivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinishedProductionDateNull() {
                return this.IsNull(this.tableMainJobDetails.FinishedProductionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinishedProductionDateNull() {
                this[this.tableMainJobDetails.FinishedProductionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostingCodeNull() {
                return this.IsNull(this.tableMainJobDetails.PostingCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostingCodeNull() {
                this[this.tableMainJobDetails.PostingCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostingContactNull() {
                return this.IsNull(this.tableMainJobDetails.PostingContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostingContactNull() {
                this[this.tableMainJobDetails.PostingContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalEstimateHeaderRefNull() {
                return this.IsNull(this.tableMainJobDetails.OriginalEstimateHeaderRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalEstimateHeaderRefNull() {
                this[this.tableMainJobDetails.OriginalEstimateHeaderRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalEstimateIDNull() {
                return this.IsNull(this.tableMainJobDetails.OriginalEstimateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalEstimateIDNull() {
                this[this.tableMainJobDetails.OriginalEstimateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOriginalEstimateQuantityNull() {
                return this.IsNull(this.tableMainJobDetails.OriginalEstimateQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOriginalEstimateQuantityNull() {
                this[this.tableMainJobDetails.OriginalEstimateQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentJobNull() {
                return this.IsNull(this.tableMainJobDetails.ParentJobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentJobNull() {
                this[this.tableMainJobDetails.ParentJobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProofSentDateTimeNull() {
                return this.IsNull(this.tableMainJobDetails.ProofSentDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProofSentDateTimeNull() {
                this[this.tableMainJobDetails.ProofSentDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProofReturnedDateTimeNull() {
                return this.IsNull(this.tableMainJobDetails.ProofReturnedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProofReturnedDateTimeNull() {
                this[this.tableMainJobDetails.ProofReturnedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWeightNull() {
                return this.IsNull(this.tableMainJobDetails.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWeightNull() {
                this[this.tableMainJobDetails.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSentToJDFNull() {
                return this.IsNull(this.tableMainJobDetails.SentToJDFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSentToJDFNull() {
                this[this.tableMainJobDetails.SentToJDFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceCountryOfOriginNull() {
                return this.IsNull(this.tableMainJobDetails.InvoiceCountryOfOriginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceCountryOfOriginNull() {
                this[this.tableMainJobDetails.InvoiceCountryOfOriginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryCountryOfOriginNull() {
                return this.IsNull(this.tableMainJobDetails.DeliveryCountryOfOriginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryCountryOfOriginNull() {
                this[this.tableMainJobDetails.DeliveryCountryOfOriginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJDFStatusNull() {
                return this.IsNull(this.tableMainJobDetails.JDFStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJDFStatusNull() {
                this[this.tableMainJobDetails.JDFStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJDFRefNull() {
                return this.IsNull(this.tableMainJobDetails.JDFRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJDFRefNull() {
                this[this.tableMainJobDetails.JDFRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMilestoneGroupNull() {
                return this.IsNull(this.tableMainJobDetails.MilestoneGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMilestoneGroupNull() {
                this[this.tableMainJobDetails.MilestoneGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifiedNull() {
                return this.IsNull(this.tableMainJobDetails.DateModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifiedNull() {
                this[this.tableMainJobDetails.DateModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedByUserIDNull() {
                return this.IsNull(this.tableMainJobDetails.ModifiedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedByUserIDNull() {
                this[this.tableMainJobDetails.ModifiedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecurityGroupIDNull() {
                return this.IsNull(this.tableMainJobDetails.SecurityGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecurityGroupIDNull() {
                this[this.tableMainJobDetails.SecurityGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastMilestoneNull() {
                return this.IsNull(this.tableMainJobDetails.LastMilestoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastMilestoneNull() {
                this[this.tableMainJobDetails.LastMilestoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDespatchDateNull() {
                return this.IsNull(this.tableMainJobDetails.DespatchDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDespatchDateNull() {
                this[this.tableMainJobDetails.DespatchDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdbTimeStampNull() {
                return this.IsNull(this.tableMainJobDetails.dbTimeStampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdbTimeStampNull() {
                this[this.tableMainJobDetails.dbTimeStampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmailNull() {
                return this.IsNull(this.tableMainJobDetails.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmailNull() {
                this[this.tableMainJobDetails.EmailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OrderLineRow : global::System.Data.DataRow {
            
            private OrderLineDataTable tableOrderLine;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OrderLineRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrderLine = ((OrderLineDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableOrderLine.IDColumn]));
                }
                set {
                    this[this.tableOrderLine.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte UseDiscountMatrix {
                get {
                    return ((byte)(this[this.tableOrderLine.UseDiscountMatrixColumn]));
                }
                set {
                    this[this.tableOrderLine.UseDiscountMatrixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderNo {
                get {
                    return ((string)(this[this.tableOrderLine.OrderNoColumn]));
                }
                set {
                    this[this.tableOrderLine.OrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Quantity {
                get {
                    return ((double)(this[this.tableOrderLine.QuantityColumn]));
                }
                set {
                    this[this.tableOrderLine.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NettAmount {
                get {
                    return ((double)(this[this.tableOrderLine.NettAmountColumn]));
                }
                set {
                    this[this.tableOrderLine.NettAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VatCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.VatCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatCode\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.VatCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VatAmount {
                get {
                    return ((double)(this[this.tableOrderLine.VatAmountColumn]));
                }
                set {
                    this[this.tableOrderLine.VatAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Required {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOrderLine.RequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Required\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Total {
                get {
                    return ((double)(this[this.tableOrderLine.TotalColumn]));
                }
                set {
                    this[this.tableOrderLine.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.DeliveryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryCode\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.DeliveryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeliveryName {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.DeliveryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryName\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.DeliveryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitPrice {
                get {
                    return ((double)(this[this.tableOrderLine.UnitPriceColumn]));
                }
                set {
                    this[this.tableOrderLine.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Pricingunits {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.PricingunitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pricingunits\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.PricingunitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NominalCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.NominalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalCode\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.NominalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CostCentre {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.CostCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostCentre\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.CostCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.DepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.DepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityDelivered {
                get {
                    return ((double)(this[this.tableOrderLine.QuantityDeliveredColumn]));
                }
                set {
                    this[this.tableOrderLine.QuantityDeliveredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityInvoiced {
                get {
                    return ((double)(this[this.tableOrderLine.QuantityInvoicedColumn]));
                }
                set {
                    this[this.tableOrderLine.QuantityInvoicedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobNo {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.JobNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobNo\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.JobNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductID {
                get {
                    return ((int)(this[this.tableOrderLine.ProductIDColumn]));
                }
                set {
                    this[this.tableOrderLine.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OriginalOrderLineID {
                get {
                    return ((int)(this[this.tableOrderLine.OriginalOrderLineIDColumn]));
                }
                set {
                    this[this.tableOrderLine.OriginalOrderLineIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DiscountPerc {
                get {
                    return ((double)(this[this.tableOrderLine.DiscountPercColumn]));
                }
                set {
                    this[this.tableOrderLine.DiscountPercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CarriageVatCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.CarriageVatCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarriageVatCode\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.CarriageVatCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CarriageNetAmount {
                get {
                    return ((double)(this[this.tableOrderLine.CarriageNetAmountColumn]));
                }
                set {
                    this[this.tableOrderLine.CarriageNetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CarriageVatAmount {
                get {
                    return ((double)(this[this.tableOrderLine.CarriageVatAmountColumn]));
                }
                set {
                    this[this.tableOrderLine.CarriageVatAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CarriageNominal {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.CarriageNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarriageNominal\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.CarriageNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CarriageCostCentre {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.CarriageCostCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarriageCostCentre\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.CarriageCostCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CarriageDepartment {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.CarriageDepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarriageDepartment\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.CarriageDepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LineNumber {
                get {
                    return ((int)(this[this.tableOrderLine.LineNumberColumn]));
                }
                set {
                    this[this.tableOrderLine.LineNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityAllocated {
                get {
                    return ((double)(this[this.tableOrderLine.QuantityAllocatedColumn]));
                }
                set {
                    this[this.tableOrderLine.QuantityAllocatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref1 {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.Ref1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref1\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.Ref1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ref2 {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.Ref2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref2\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.Ref2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short NumberOfDistributions {
                get {
                    return ((short)(this[this.tableOrderLine.NumberOfDistributionsColumn]));
                }
                set {
                    this[this.tableOrderLine.NumberOfDistributionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ForeignUnitPrice {
                get {
                    return ((double)(this[this.tableOrderLine.ForeignUnitPriceColumn]));
                }
                set {
                    this[this.tableOrderLine.ForeignUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ForeignNettAmount {
                get {
                    return ((double)(this[this.tableOrderLine.ForeignNettAmountColumn]));
                }
                set {
                    this[this.tableOrderLine.ForeignNettAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ForeignVatAmount {
                get {
                    return ((double)(this[this.tableOrderLine.ForeignVatAmountColumn]));
                }
                set {
                    this[this.tableOrderLine.ForeignVatAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ForeignCarriageNet {
                get {
                    return ((double)(this[this.tableOrderLine.ForeignCarriageNetColumn]));
                }
                set {
                    this[this.tableOrderLine.ForeignCarriageNetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ForeignCarriageVat {
                get {
                    return ((double)(this[this.tableOrderLine.ForeignCarriageVatColumn]));
                }
                set {
                    this[this.tableOrderLine.ForeignCarriageVatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityConfirmed {
                get {
                    return ((double)(this[this.tableOrderLine.QuantityConfirmedColumn]));
                }
                set {
                    this[this.tableOrderLine.QuantityConfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Instructions {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.InstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instructions\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.InstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransRef {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.TransRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransRef\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.TransRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransJobNo {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.TransJobNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransJobNo\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.TransJobNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TransSell {
                get {
                    return ((double)(this[this.tableOrderLine.TransSellColumn]));
                }
                set {
                    this[this.tableOrderLine.TransSellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DiscountType {
                get {
                    return ((int)(this[this.tableOrderLine.DiscountTypeColumn]));
                }
                set {
                    this[this.tableOrderLine.DiscountTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DiscountAmount {
                get {
                    return ((double)(this[this.tableOrderLine.DiscountAmountColumn]));
                }
                set {
                    this[this.tableOrderLine.DiscountAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Pages {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.PagesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pages\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.PagesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string W4PCStatus {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.W4PCStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'W4PCStatus\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.W4PCStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Leaves {
                get {
                    return ((int)(this[this.tableOrderLine.LeavesColumn]));
                }
                set {
                    this[this.tableOrderLine.LeavesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityPicked {
                get {
                    return ((double)(this[this.tableOrderLine.QuantityPickedColumn]));
                }
                set {
                    this[this.tableOrderLine.QuantityPickedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Weight {
                get {
                    return ((double)(this[this.tableOrderLine.WeightColumn]));
                }
                set {
                    this[this.tableOrderLine.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EstimateID {
                get {
                    return ((int)(this[this.tableOrderLine.EstimateIDColumn]));
                }
                set {
                    this[this.tableOrderLine.EstimateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QuantityPacked {
                get {
                    return ((double)(this[this.tableOrderLine.QuantityPackedColumn]));
                }
                set {
                    this[this.tableOrderLine.QuantityPackedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrderID {
                get {
                    return ((int)(this[this.tableOrderLine.OrderIDColumn]));
                }
                set {
                    this[this.tableOrderLine.OrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JDFJobName {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.JDFJobNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JDFJobName\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.JDFJobNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOrderLine.DateModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateModified\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.DateModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ModifiedByUserID {
                get {
                    try {
                        return ((int)(this[this.tableOrderLine.ModifiedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedByUserID\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.ModifiedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChiliDocumentID {
                get {
                    try {
                        return ((string)(this[this.tableOrderLine.ChiliDocumentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChiliDocumentID\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.ChiliDocumentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AssetID {
                get {
                    try {
                        return ((int)(this[this.tableOrderLine.AssetIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssetID\' in table \'OrderLine\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderLine.AssetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ParentOrderLineID {
                get {
                    return ((int)(this[this.tableOrderLine.ParentOrderLineIDColumn]));
                }
                set {
                    this[this.tableOrderLine.ParentOrderLineIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ParentOrderID {
                get {
                    return ((int)(this[this.tableOrderLine.ParentOrderIDColumn]));
                }
                set {
                    this[this.tableOrderLine.ParentOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfigurable {
                get {
                    return ((bool)(this[this.tableOrderLine.IsConfigurableColumn]));
                }
                set {
                    this[this.tableOrderLine.IsConfigurableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTaxCodeID {
                get {
                    return ((int)(this[this.tableOrderLine.SalesTaxCodeIDColumn]));
                }
                set {
                    this[this.tableOrderLine.SalesTaxCodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTaxItemID {
                get {
                    return ((int)(this[this.tableOrderLine.SalesTaxItemIDColumn]));
                }
                set {
                    this[this.tableOrderLine.SalesTaxItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BOMRevision {
                get {
                    return ((int)(this[this.tableOrderLine.BOMRevisionColumn]));
                }
                set {
                    this[this.tableOrderLine.BOMRevisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TransID {
                get {
                    return ((int)(this[this.tableOrderLine.TransIDColumn]));
                }
                set {
                    this[this.tableOrderLine.TransIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableOrderLine.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductCodeNull() {
                this[this.tableOrderLine.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableOrderLine.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableOrderLine.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVatCodeNull() {
                return this.IsNull(this.tableOrderLine.VatCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVatCodeNull() {
                this[this.tableOrderLine.VatCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequiredNull() {
                return this.IsNull(this.tableOrderLine.RequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequiredNull() {
                this[this.tableOrderLine.RequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryCodeNull() {
                return this.IsNull(this.tableOrderLine.DeliveryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryCodeNull() {
                this[this.tableOrderLine.DeliveryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryNameNull() {
                return this.IsNull(this.tableOrderLine.DeliveryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryNameNull() {
                this[this.tableOrderLine.DeliveryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPricingunitsNull() {
                return this.IsNull(this.tableOrderLine.PricingunitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPricingunitsNull() {
                this[this.tableOrderLine.PricingunitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalCodeNull() {
                return this.IsNull(this.tableOrderLine.NominalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalCodeNull() {
                this[this.tableOrderLine.NominalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostCentreNull() {
                return this.IsNull(this.tableOrderLine.CostCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostCentreNull() {
                this[this.tableOrderLine.CostCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tableOrderLine.DepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepartmentNull() {
                this[this.tableOrderLine.DepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobNoNull() {
                return this.IsNull(this.tableOrderLine.JobNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobNoNull() {
                this[this.tableOrderLine.JobNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCarriageVatCodeNull() {
                return this.IsNull(this.tableOrderLine.CarriageVatCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCarriageVatCodeNull() {
                this[this.tableOrderLine.CarriageVatCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCarriageNominalNull() {
                return this.IsNull(this.tableOrderLine.CarriageNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCarriageNominalNull() {
                this[this.tableOrderLine.CarriageNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCarriageCostCentreNull() {
                return this.IsNull(this.tableOrderLine.CarriageCostCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCarriageCostCentreNull() {
                this[this.tableOrderLine.CarriageCostCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCarriageDepartmentNull() {
                return this.IsNull(this.tableOrderLine.CarriageDepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCarriageDepartmentNull() {
                this[this.tableOrderLine.CarriageDepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef1Null() {
                return this.IsNull(this.tableOrderLine.Ref1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef1Null() {
                this[this.tableOrderLine.Ref1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRef2Null() {
                return this.IsNull(this.tableOrderLine.Ref2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRef2Null() {
                this[this.tableOrderLine.Ref2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstructionsNull() {
                return this.IsNull(this.tableOrderLine.InstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstructionsNull() {
                this[this.tableOrderLine.InstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransRefNull() {
                return this.IsNull(this.tableOrderLine.TransRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransRefNull() {
                this[this.tableOrderLine.TransRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransJobNoNull() {
                return this.IsNull(this.tableOrderLine.TransJobNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransJobNoNull() {
                this[this.tableOrderLine.TransJobNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPagesNull() {
                return this.IsNull(this.tableOrderLine.PagesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPagesNull() {
                this[this.tableOrderLine.PagesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsW4PCStatusNull() {
                return this.IsNull(this.tableOrderLine.W4PCStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetW4PCStatusNull() {
                this[this.tableOrderLine.W4PCStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJDFJobNameNull() {
                return this.IsNull(this.tableOrderLine.JDFJobNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJDFJobNameNull() {
                this[this.tableOrderLine.JDFJobNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifiedNull() {
                return this.IsNull(this.tableOrderLine.DateModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifiedNull() {
                this[this.tableOrderLine.DateModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedByUserIDNull() {
                return this.IsNull(this.tableOrderLine.ModifiedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedByUserIDNull() {
                this[this.tableOrderLine.ModifiedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChiliDocumentIDNull() {
                return this.IsNull(this.tableOrderLine.ChiliDocumentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChiliDocumentIDNull() {
                this[this.tableOrderLine.ChiliDocumentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssetIDNull() {
                return this.IsNull(this.tableOrderLine.AssetIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssetIDNull() {
                this[this.tableOrderLine.AssetIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OriginationMaterialInputRow : global::System.Data.DataRow {
            
            private OriginationMaterialInputDataTable tableOriginationMaterialInput;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OriginationMaterialInputRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOriginationMaterialInput = ((OriginationMaterialInputDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableOriginationMaterialInput.IDColumn]));
                }
                set {
                    this[this.tableOriginationMaterialInput.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAutoPrintingEntry {
                get {
                    return ((bool)(this[this.tableOriginationMaterialInput.IsAutoPrintingEntryColumn]));
                }
                set {
                    this[this.tableOriginationMaterialInput.IsAutoPrintingEntryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAutoManuallyChanged {
                get {
                    return ((bool)(this[this.tableOriginationMaterialInput.IsAutoManuallyChangedColumn]));
                }
                set {
                    this[this.tableOriginationMaterialInput.IsAutoManuallyChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PermFixed {
                get {
                    return ((bool)(this[this.tableOriginationMaterialInput.PermFixedColumn]));
                }
                set {
                    this[this.tableOriginationMaterialInput.PermFixedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool QuantFixed {
                get {
                    return ((bool)(this[this.tableOriginationMaterialInput.QuantFixedColumn]));
                }
                set {
                    this[this.tableOriginationMaterialInput.QuantFixedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PriceFixed {
                get {
                    return ((bool)(this[this.tableOriginationMaterialInput.PriceFixedColumn]));
                }
                set {
                    this[this.tableOriginationMaterialInput.PriceFixedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EstimateID {
                get {
                    try {
                        return ((int)(this[this.tableOriginationMaterialInput.EstimateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateID\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.EstimateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaperRef {
                get {
                    try {
                        return ((string)(this[this.tableOriginationMaterialInput.PaperRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaperRef\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.PaperRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UniquePaperNumber {
                get {
                    try {
                        return ((int)(this[this.tableOriginationMaterialInput.UniquePaperNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UniquePaperNumber\' in table \'OriginationMaterialInput\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.UniquePaperNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableOriginationMaterialInput.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableOriginationMaterialInput.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'OriginationMaterialInput\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Quantity {
                get {
                    try {
                        return ((double)(this[this.tableOriginationMaterialInput.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Price {
                get {
                    try {
                        return ((double)(this[this.tableOriginationMaterialInput.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Valuedb {
                get {
                    try {
                        return ((double)(this[this.tableOriginationMaterialInput.ValuedbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Valuedb\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.ValuedbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RunOn {
                get {
                    try {
                        return ((double)(this[this.tableOriginationMaterialInput.RunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunOn\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.RunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Units {
                get {
                    try {
                        return ((string)(this[this.tableOriginationMaterialInput.UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Units\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseMinCharge {
                get {
                    return ((bool)(this[this.tableOriginationMaterialInput.UseMinChargeColumn]));
                }
                set {
                    this[this.tableOriginationMaterialInput.UseMinChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MinCharge {
                get {
                    try {
                        return ((double)(this[this.tableOriginationMaterialInput.MinChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinCharge\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.MinChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EstimateHeaderRef {
                get {
                    try {
                        return ((string)(this[this.tableOriginationMaterialInput.EstimateHeaderRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimateHeaderRef\' in table \'OriginationMaterialInput\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.EstimateHeaderRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnalysisCode {
                get {
                    try {
                        return ((string)(this[this.tableOriginationMaterialInput.AnalysisCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnalysisCode\' in table \'OriginationMaterialInput\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.AnalysisCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short OperationNo {
                get {
                    try {
                        return ((short)(this[this.tableOriginationMaterialInput.OperationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OperationNo\' in table \'OriginationMaterialInput\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.OperationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CostCentre {
                get {
                    try {
                        return ((string)(this[this.tableOriginationMaterialInput.CostCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostCentre\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.CostCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ForeignCurrency {
                get {
                    return ((int)(this[this.tableOriginationMaterialInput.ForeignCurrencyColumn]));
                }
                set {
                    this[this.tableOriginationMaterialInput.ForeignCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ForeignValue {
                get {
                    try {
                        return ((double)(this[this.tableOriginationMaterialInput.ForeignValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForeignValue\' in table \'OriginationMaterialInput\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.ForeignValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ComponentID {
                get {
                    try {
                        return ((int)(this[this.tableOriginationMaterialInput.ComponentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComponentID\' in table \'OriginationMaterialInput\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.ComponentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UniqueComponentNumber {
                get {
                    try {
                        return ((int)(this[this.tableOriginationMaterialInput.UniqueComponentNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UniqueComponentNumber\' in table \'OriginationMaterialInput\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.UniqueComponentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SellingRate {
                get {
                    try {
                        return ((double)(this[this.tableOriginationMaterialInput.SellingRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellingRate\' in table \'OriginationMaterialInput\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.SellingRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SellingValue {
                get {
                    try {
                        return ((double)(this[this.tableOriginationMaterialInput.SellingValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellingValue\' in table \'OriginationMaterialInput\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.SellingValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SellingRunOn {
                get {
                    try {
                        return ((double)(this[this.tableOriginationMaterialInput.SellingRunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellingRunOn\' in table \'OriginationMaterialInput\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.SellingRunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SellingPriceLocked {
                get {
                    try {
                        return ((byte)(this[this.tableOriginationMaterialInput.SellingPriceLockedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellingPriceLocked\' in table \'OriginationMaterialInput\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.SellingPriceLockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SizeCode {
                get {
                    try {
                        return ((string)(this[this.tableOriginationMaterialInput.SizeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeCode\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.SizeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LineNumber {
                get {
                    try {
                        return ((short)(this[this.tableOriginationMaterialInput.LineNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineNumber\' in table \'OriginationMaterialInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOriginationMaterialInput.LineNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ProcessTypeOrder {
                get {
                    return ((short)(this[this.tableOriginationMaterialInput.ProcessTypeOrderColumn]));
                }
                set {
                    this[this.tableOriginationMaterialInput.ProcessTypeOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainEstimateDetailsRow MainEstimateDetailsRow {
                get {
                    return ((MainEstimateDetailsRow)(this.GetParentRow(this.Table.ParentRelations["FK_OriginationMaterialInput_MainEstimateDetails"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_OriginationMaterialInput_MainEstimateDetails"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstimateIDNull() {
                return this.IsNull(this.tableOriginationMaterialInput.EstimateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstimateIDNull() {
                this[this.tableOriginationMaterialInput.EstimateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaperRefNull() {
                return this.IsNull(this.tableOriginationMaterialInput.PaperRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaperRefNull() {
                this[this.tableOriginationMaterialInput.PaperRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUniquePaperNumberNull() {
                return this.IsNull(this.tableOriginationMaterialInput.UniquePaperNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUniquePaperNumberNull() {
                this[this.tableOriginationMaterialInput.UniquePaperNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableOriginationMaterialInput.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeNull() {
                this[this.tableOriginationMaterialInput.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableOriginationMaterialInput.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableOriginationMaterialInput.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableOriginationMaterialInput.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityNull() {
                this[this.tableOriginationMaterialInput.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceNull() {
                return this.IsNull(this.tableOriginationMaterialInput.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceNull() {
                this[this.tableOriginationMaterialInput.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValuedbNull() {
                return this.IsNull(this.tableOriginationMaterialInput.ValuedbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValuedbNull() {
                this[this.tableOriginationMaterialInput.ValuedbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRunOnNull() {
                return this.IsNull(this.tableOriginationMaterialInput.RunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRunOnNull() {
                this[this.tableOriginationMaterialInput.RunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitsNull() {
                return this.IsNull(this.tableOriginationMaterialInput.UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitsNull() {
                this[this.tableOriginationMaterialInput.UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMinChargeNull() {
                return this.IsNull(this.tableOriginationMaterialInput.MinChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMinChargeNull() {
                this[this.tableOriginationMaterialInput.MinChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstimateHeaderRefNull() {
                return this.IsNull(this.tableOriginationMaterialInput.EstimateHeaderRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstimateHeaderRefNull() {
                this[this.tableOriginationMaterialInput.EstimateHeaderRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnalysisCodeNull() {
                return this.IsNull(this.tableOriginationMaterialInput.AnalysisCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnalysisCodeNull() {
                this[this.tableOriginationMaterialInput.AnalysisCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOperationNoNull() {
                return this.IsNull(this.tableOriginationMaterialInput.OperationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOperationNoNull() {
                this[this.tableOriginationMaterialInput.OperationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostCentreNull() {
                return this.IsNull(this.tableOriginationMaterialInput.CostCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostCentreNull() {
                this[this.tableOriginationMaterialInput.CostCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsForeignValueNull() {
                return this.IsNull(this.tableOriginationMaterialInput.ForeignValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetForeignValueNull() {
                this[this.tableOriginationMaterialInput.ForeignValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComponentIDNull() {
                return this.IsNull(this.tableOriginationMaterialInput.ComponentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComponentIDNull() {
                this[this.tableOriginationMaterialInput.ComponentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUniqueComponentNumberNull() {
                return this.IsNull(this.tableOriginationMaterialInput.UniqueComponentNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUniqueComponentNumberNull() {
                this[this.tableOriginationMaterialInput.UniqueComponentNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellingRateNull() {
                return this.IsNull(this.tableOriginationMaterialInput.SellingRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellingRateNull() {
                this[this.tableOriginationMaterialInput.SellingRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellingValueNull() {
                return this.IsNull(this.tableOriginationMaterialInput.SellingValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellingValueNull() {
                this[this.tableOriginationMaterialInput.SellingValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellingRunOnNull() {
                return this.IsNull(this.tableOriginationMaterialInput.SellingRunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellingRunOnNull() {
                this[this.tableOriginationMaterialInput.SellingRunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellingPriceLockedNull() {
                return this.IsNull(this.tableOriginationMaterialInput.SellingPriceLockedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellingPriceLockedNull() {
                this[this.tableOriginationMaterialInput.SellingPriceLockedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSizeCodeNull() {
                return this.IsNull(this.tableOriginationMaterialInput.SizeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSizeCodeNull() {
                this[this.tableOriginationMaterialInput.SizeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLineNumberNull() {
                return this.IsNull(this.tableOriginationMaterialInput.LineNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLineNumberNull() {
                this[this.tableOriginationMaterialInput.LineNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProductRow : global::System.Data.DataRow {
            
            private ProductDataTable tableProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProduct = ((ProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableProduct.IDColumn]));
                }
                set {
                    this[this.tableProduct.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ManufacturedProduct {
                get {
                    return ((bool)(this[this.tableProduct.ManufacturedProductColumn]));
                }
                set {
                    this[this.tableProduct.ManufacturedProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Code {
                get {
                    return ((string)(this[this.tableProduct.CodeColumn]));
                }
                set {
                    this[this.tableProduct.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableProduct.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Balance {
                get {
                    return ((double)(this[this.tableProduct.BalanceColumn]));
                }
                set {
                    this[this.tableProduct.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Type {
                get {
                    return ((byte)(this[this.tableProduct.TypeColumn]));
                }
                set {
                    this[this.tableProduct.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UnitPrice {
                get {
                    return ((double)(this[this.tableProduct.UnitPriceColumn]));
                }
                set {
                    this[this.tableProduct.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Colour {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ColourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Colour\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ColourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dbGroup {
                get {
                    try {
                        return ((string)(this[this.tableProduct.dbGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dbGroup\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.dbGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnalysisType {
                get {
                    try {
                        return ((string)(this[this.tableProduct.AnalysisTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnalysisType\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.AnalysisTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Manufacturer {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ManufacturerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Manufacturer\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ManufacturerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ReOrderQuantity {
                get {
                    return ((double)(this[this.tableProduct.ReOrderQuantityColumn]));
                }
                set {
                    this[this.tableProduct.ReOrderQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NormalOrder {
                get {
                    return ((double)(this[this.tableProduct.NormalOrderColumn]));
                }
                set {
                    this[this.tableProduct.NormalOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PricingType {
                get {
                    try {
                        return ((string)(this[this.tableProduct.PricingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PricingType\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.PricingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Available {
                get {
                    return ((double)(this[this.tableProduct.AvailableColumn]));
                }
                set {
                    this[this.tableProduct.AvailableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SizeCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.SizeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.SizeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DepthMM {
                get {
                    return ((double)(this[this.tableProduct.DepthMMColumn]));
                }
                set {
                    this[this.tableProduct.DepthMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WidthMM {
                get {
                    return ((double)(this[this.tableProduct.WidthMMColumn]));
                }
                set {
                    this[this.tableProduct.WidthMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IgnoreStockLevels {
                get {
                    return ((bool)(this[this.tableProduct.IgnoreStockLevelsColumn]));
                }
                set {
                    this[this.tableProduct.IgnoreStockLevelsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Packed {
                get {
                    return ((double)(this[this.tableProduct.PackedColumn]));
                }
                set {
                    this[this.tableProduct.PackedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastChanged {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProduct.LastChangedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastChanged\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.LastChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MinCharge {
                get {
                    return ((double)(this[this.tableProduct.MinChargeColumn]));
                }
                set {
                    this[this.tableProduct.MinChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte EstType {
                get {
                    return ((byte)(this[this.tableProduct.EstTypeColumn]));
                }
                set {
                    this[this.tableProduct.EstTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EstUnits {
                get {
                    try {
                        return ((string)(this[this.tableProduct.EstUnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstUnits\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.EstUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double EstTonnePrice {
                get {
                    return ((double)(this[this.tableProduct.EstTonnePriceColumn]));
                }
                set {
                    this[this.tableProduct.EstTonnePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Copier {
                get {
                    return ((bool)(this[this.tableProduct.CopierColumn]));
                }
                set {
                    this[this.tableProduct.CopierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StockLocation {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StockLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockLocation\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StockLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EstAnalysisCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.EstAnalysisCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstAnalysisCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.EstAnalysisCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VatCode {
                get {
                    return ((string)(this[this.tableProduct.VatCodeColumn]));
                }
                set {
                    this[this.tableProduct.VatCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierVatCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.SupplierVatCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierVatCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.SupplierVatCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tableProduct.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CostCentre {
                get {
                    try {
                        return ((string)(this[this.tableProduct.CostCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostCentre\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.CostCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tableProduct.DepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SellingPrice {
                get {
                    return ((double)(this[this.tableProduct.SellingPriceColumn]));
                }
                set {
                    this[this.tableProduct.SellingPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExtraFlags {
                get {
                    return ((bool)(this[this.tableProduct.ExtraFlagsColumn]));
                }
                set {
                    this[this.tableProduct.ExtraFlagsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PNominal {
                get {
                    try {
                        return ((string)(this[this.tableProduct.PNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNominal\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.PNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCostCentre {
                get {
                    try {
                        return ((string)(this[this.tableProduct.PCostCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCostCentre\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.PCostCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PDepartment {
                get {
                    try {
                        return ((string)(this[this.tableProduct.PDepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PDepartment\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.PDepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentCost {
                get {
                    return ((double)(this[this.tableProduct.CurrentCostColumn]));
                }
                set {
                    this[this.tableProduct.CurrentCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExcludeRequisitions {
                get {
                    return ((bool)(this[this.tableProduct.ExcludeRequisitionsColumn]));
                }
                set {
                    this[this.tableProduct.ExcludeRequisitionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StkRef1 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StkRef1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StkRef1\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StkRef1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StkRef2 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StkRef2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StkRef2\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StkRef2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StkRef3 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StkRef3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StkRef3\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StkRef3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StkRef4 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StkRef4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StkRef4\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StkRef4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StkRef5 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StkRef5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StkRef5\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StkRef5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StkRef6 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StkRef6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StkRef6\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StkRef6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StkRef7 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StkRef7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StkRef7\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StkRef7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StkRef8 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StkRef8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StkRef8\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StkRef8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StkRef9 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StkRef9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StkRef9\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StkRef9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StkRef10 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StkRef10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StkRef10\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StkRef10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRollLabel {
                get {
                    return ((bool)(this[this.tableProduct.IsRollLabelColumn]));
                }
                set {
                    this[this.tableProduct.IsRollLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double InvoiceBalance {
                get {
                    return ((double)(this[this.tableProduct.InvoiceBalanceColumn]));
                }
                set {
                    this[this.tableProduct.InvoiceBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierRef {
                get {
                    try {
                        return ((string)(this[this.tableProduct.SupplierRefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierRef\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.SupplierRefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LeadTime {
                get {
                    return ((short)(this[this.tableProduct.LeadTimeColumn]));
                }
                set {
                    this[this.tableProduct.LeadTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.SupplierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.SupplierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WebURL {
                get {
                    try {
                        return ((string)(this[this.tableProduct.WebURLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WebURL\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.WebURLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PurchaseUnits {
                get {
                    try {
                        return ((string)(this[this.tableProduct.PurchaseUnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseUnits\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.PurchaseUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SupplierCost {
                get {
                    return ((double)(this[this.tableProduct.SupplierCostColumn]));
                }
                set {
                    this[this.tableProduct.SupplierCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LastDocumentNumber {
                get {
                    return ((int)(this[this.tableProduct.LastDocumentNumberColumn]));
                }
                set {
                    this[this.tableProduct.LastDocumentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallOffItem {
                get {
                    return ((bool)(this[this.tableProduct.IsCallOffItemColumn]));
                }
                set {
                    this[this.tableProduct.IsCallOffItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool InvoiceCostPrice {
                get {
                    return ((bool)(this[this.tableProduct.InvoiceCostPriceColumn]));
                }
                set {
                    this[this.tableProduct.InvoiceCostPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExtraInfo {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ExtraInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraInfo\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ExtraInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SOPLeadTime {
                get {
                    return ((short)(this[this.tableProduct.SOPLeadTimeColumn]));
                }
                set {
                    this[this.tableProduct.SOPLeadTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NoHistory {
                get {
                    return ((bool)(this[this.tableProduct.NoHistoryColumn]));
                }
                set {
                    this[this.tableProduct.NoHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Weight {
                get {
                    return ((double)(this[this.tableProduct.WeightColumn]));
                }
                set {
                    this[this.tableProduct.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SuppDescUnits {
                get {
                    try {
                        return ((string)(this[this.tableProduct.SuppDescUnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuppDescUnits\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.SuppDescUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LongestEdge {
                get {
                    return ((bool)(this[this.tableProduct.LongestEdgeColumn]));
                }
                set {
                    this[this.tableProduct.LongestEdgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CommodityCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.CommodityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommodityCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.CommodityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CountryOfOrigin {
                get {
                    try {
                        return ((string)(this[this.tableProduct.CountryOfOriginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryOfOrigin\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.CountryOfOriginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PurchaseCurrency {
                get {
                    return ((int)(this[this.tableProduct.PurchaseCurrencyColumn]));
                }
                set {
                    this[this.tableProduct.PurchaseCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SellingCurrency {
                get {
                    return ((int)(this[this.tableProduct.SellingCurrencyColumn]));
                }
                set {
                    this[this.tableProduct.SellingCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EstimateID {
                get {
                    return ((int)(this[this.tableProduct.EstimateIDColumn]));
                }
                set {
                    this[this.tableProduct.EstimateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastSupplierCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.LastSupplierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSupplierCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.LastSupplierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LastReceivedQuantity {
                get {
                    return ((double)(this[this.tableProduct.LastReceivedQuantityColumn]));
                }
                set {
                    this[this.tableProduct.LastReceivedQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LastPurchasePrice {
                get {
                    return ((double)(this[this.tableProduct.LastPurchasePriceColumn]));
                }
                set {
                    this[this.tableProduct.LastPurchasePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastPurchaseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProduct.LastPurchaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPurchaseDate\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.LastPurchaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LinkedOperationID {
                get {
                    return ((int)(this[this.tableProduct.LinkedOperationIDColumn]));
                }
                set {
                    this[this.tableProduct.LinkedOperationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LinkedOperatorID {
                get {
                    return ((int)(this[this.tableProduct.LinkedOperatorIDColumn]));
                }
                set {
                    this[this.tableProduct.LinkedOperatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ExpiryStatus {
                get {
                    return ((byte)(this[this.tableProduct.ExpiryStatusColumn]));
                }
                set {
                    this[this.tableProduct.ExpiryStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExpiresOnDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProduct.ExpiresOnDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpiresOnDate\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ExpiresOnDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlternativeProduct {
                get {
                    try {
                        return ((string)(this[this.tableProduct.AlternativeProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternativeProduct\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.AlternativeProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlternativeProductSize {
                get {
                    try {
                        return ((string)(this[this.tableProduct.AlternativeProductSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternativeProductSize\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.AlternativeProductSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SecondAltProduct {
                get {
                    try {
                        return ((string)(this[this.tableProduct.SecondAltProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecondAltProduct\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.SecondAltProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SecondAltProductSize {
                get {
                    try {
                        return ((string)(this[this.tableProduct.SecondAltProductSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecondAltProductSize\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.SecondAltProductSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Generic {
                get {
                    return ((byte)(this[this.tableProduct.GenericColumn]));
                }
                set {
                    this[this.tableProduct.GenericColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComposite {
                get {
                    return ((bool)(this[this.tableProduct.IsCompositeColumn]));
                }
                set {
                    this[this.tableProduct.IsCompositeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HeightMM {
                get {
                    return ((double)(this[this.tableProduct.HeightMMColumn]));
                }
                set {
                    this[this.tableProduct.HeightMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PalletDepth {
                get {
                    return ((double)(this[this.tableProduct.PalletDepthColumn]));
                }
                set {
                    this[this.tableProduct.PalletDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PalletWidth {
                get {
                    return ((double)(this[this.tableProduct.PalletWidthColumn]));
                }
                set {
                    this[this.tableProduct.PalletWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PalletHeight {
                get {
                    return ((double)(this[this.tableProduct.PalletHeightColumn]));
                }
                set {
                    this[this.tableProduct.PalletHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PalletPacked {
                get {
                    return ((double)(this[this.tableProduct.PalletPackedColumn]));
                }
                set {
                    this[this.tableProduct.PalletPackedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PalletWeight {
                get {
                    return ((double)(this[this.tableProduct.PalletWeightColumn]));
                }
                set {
                    this[this.tableProduct.PalletWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LocationGroup {
                get {
                    try {
                        return ((string)(this[this.tableProduct.LocationGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationGroup\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.LocationGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseFullPack {
                get {
                    return ((bool)(this[this.tableProduct.UseFullPackColumn]));
                }
                set {
                    this[this.tableProduct.UseFullPackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PopulatedQuantity {
                get {
                    return ((int)(this[this.tableProduct.PopulatedQuantityColumn]));
                }
                set {
                    this[this.tableProduct.PopulatedQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PopulatedWeight {
                get {
                    return ((double)(this[this.tableProduct.PopulatedWeightColumn]));
                }
                set {
                    this[this.tableProduct.PopulatedWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PackedHeight {
                get {
                    return ((double)(this[this.tableProduct.PackedHeightColumn]));
                }
                set {
                    this[this.tableProduct.PackedHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PackedDepth {
                get {
                    return ((double)(this[this.tableProduct.PackedDepthColumn]));
                }
                set {
                    this[this.tableProduct.PackedDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PackedWidth {
                get {
                    return ((double)(this[this.tableProduct.PackedWidthColumn]));
                }
                set {
                    this[this.tableProduct.PackedWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PackedWeight {
                get {
                    return ((double)(this[this.tableProduct.PackedWeightColumn]));
                }
                set {
                    this[this.tableProduct.PackedWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double BoxedIn {
                get {
                    return ((double)(this[this.tableProduct.BoxedInColumn]));
                }
                set {
                    this[this.tableProduct.BoxedInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EstDescriptionContentID {
                get {
                    return ((int)(this[this.tableProduct.EstDescriptionContentIDColumn]));
                }
                set {
                    this[this.tableProduct.EstDescriptionContentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int POAuthorityTypeID {
                get {
                    return ((int)(this[this.tableProduct.POAuthorityTypeIDColumn]));
                }
                set {
                    this[this.tableProduct.POAuthorityTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AutoPost {
                get {
                    return ((bool)(this[this.tableProduct.AutoPostColumn]));
                }
                set {
                    this[this.tableProduct.AutoPostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CertificationID {
                get {
                    return ((int)(this[this.tableProduct.CertificationIDColumn]));
                }
                set {
                    this[this.tableProduct.CertificationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Claim {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ClaimColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Claim\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ClaimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeAlias {
                get {
                    try {
                        return ((string)(this[this.tableProduct.CodeAliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeAlias\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.CodeAliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BoardCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.BoardCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoardCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.BoardCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte GrainDirection {
                get {
                    return ((byte)(this[this.tableProduct.GrainDirectionColumn]));
                }
                set {
                    this[this.tableProduct.GrainDirectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AllowCustomSize {
                get {
                    return ((bool)(this[this.tableProduct.AllowCustomSizeColumn]));
                }
                set {
                    this[this.tableProduct.AllowCustomSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BasketAuthorityTypeID {
                get {
                    return ((int)(this[this.tableProduct.BasketAuthorityTypeIDColumn]));
                }
                set {
                    this[this.tableProduct.BasketAuthorityTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentJob {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ParentJobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentJob\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ParentJobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NumberControlled {
                get {
                    return ((bool)(this[this.tableProduct.NumberControlledColumn]));
                }
                set {
                    this[this.tableProduct.NumberControlledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte OnDemand {
                get {
                    return ((byte)(this[this.tableProduct.OnDemandColumn]));
                }
                set {
                    this[this.tableProduct.OnDemandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GradeID {
                get {
                    return ((int)(this[this.tableProduct.GradeIDColumn]));
                }
                set {
                    this[this.tableProduct.GradeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MinQty {
                get {
                    return ((double)(this[this.tableProduct.MinQtyColumn]));
                }
                set {
                    this[this.tableProduct.MinQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxQty {
                get {
                    return ((double)(this[this.tableProduct.MaxQtyColumn]));
                }
                set {
                    this[this.tableProduct.MaxQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Inactive {
                get {
                    return ((byte)(this[this.tableProduct.InactiveColumn]));
                }
                set {
                    this[this.tableProduct.InactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte AutomationRule {
                get {
                    return ((byte)(this[this.tableProduct.AutomationRuleColumn]));
                }
                set {
                    this[this.tableProduct.AutomationRuleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte FileUpload {
                get {
                    return ((byte)(this[this.tableProduct.FileUploadColumn]));
                }
                set {
                    this[this.tableProduct.FileUploadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProduct.DateModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateModified\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DateModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ModifiedByUserID {
                get {
                    try {
                        return ((int)(this[this.tableProduct.ModifiedByUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedByUserID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ModifiedByUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ReplacementMaterial {
                get {
                    return ((bool)(this[this.tableProduct.ReplacementMaterialColumn]));
                }
                set {
                    this[this.tableProduct.ReplacementMaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ListAlias {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ListAliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ListAlias\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ListAliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ForceLocation {
                get {
                    return ((bool)(this[this.tableProduct.ForceLocationColumn]));
                }
                set {
                    this[this.tableProduct.ForceLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssueAtCost {
                get {
                    return ((bool)(this[this.tableProduct.IssueAtCostColumn]));
                }
                set {
                    this[this.tableProduct.IssueAtCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HeightMarginMM {
                get {
                    return ((double)(this[this.tableProduct.HeightMarginMMColumn]));
                }
                set {
                    this[this.tableProduct.HeightMarginMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WidthMarginMM {
                get {
                    return ((double)(this[this.tableProduct.WidthMarginMMColumn]));
                }
                set {
                    this[this.tableProduct.WidthMarginMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double XPosition {
                get {
                    return ((double)(this[this.tableProduct.XPositionColumn]));
                }
                set {
                    this[this.tableProduct.XPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double YPosition {
                get {
                    return ((double)(this[this.tableProduct.YPositionColumn]));
                }
                set {
                    this[this.tableProduct.YPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseLeastCost {
                get {
                    return ((bool)(this[this.tableProduct.UseLeastCostColumn]));
                }
                set {
                    this[this.tableProduct.UseLeastCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleCount {
                get {
                    return ((int)(this[this.tableProduct.CycleCountColumn]));
                }
                set {
                    this[this.tableProduct.CycleCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductTypes_ID {
                get {
                    return ((int)(this[this.tableProduct.ProductTypes_IDColumn]));
                }
                set {
                    this[this.tableProduct.ProductTypes_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfigurable {
                get {
                    return ((bool)(this[this.tableProduct.IsConfigurableColumn]));
                }
                set {
                    this[this.tableProduct.IsConfigurableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MinimumQuantity {
                get {
                    return ((double)(this[this.tableProduct.MinimumQuantityColumn]));
                }
                set {
                    this[this.tableProduct.MinimumQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoatedOneSide {
                get {
                    return ((bool)(this[this.tableProduct.IsCoatedOneSideColumn]));
                }
                set {
                    this[this.tableProduct.IsCoatedOneSideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BasicSizesID {
                get {
                    return ((int)(this[this.tableProduct.BasicSizesIDColumn]));
                }
                set {
                    this[this.tableProduct.BasicSizesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesTaxCodeID {
                get {
                    return ((int)(this[this.tableProduct.SalesTaxCodeIDColumn]));
                }
                set {
                    this[this.tableProduct.SalesTaxCodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UseTaxCodeID {
                get {
                    return ((int)(this[this.tableProduct.UseTaxCodeIDColumn]));
                }
                set {
                    this[this.tableProduct.UseTaxCodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ConsignmentBalance {
                get {
                    return ((double)(this[this.tableProduct.ConsignmentBalanceColumn]));
                }
                set {
                    this[this.tableProduct.ConsignmentBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BOMRevision {
                get {
                    return ((int)(this[this.tableProduct.BOMRevisionColumn]));
                }
                set {
                    this[this.tableProduct.BOMRevisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PriceListMaterialGroupID {
                get {
                    return ((int)(this[this.tableProduct.PriceListMaterialGroupIDColumn]));
                }
                set {
                    this[this.tableProduct.PriceListMaterialGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AltWeight {
                get {
                    return ((double)(this[this.tableProduct.AltWeightColumn]));
                }
                set {
                    this[this.tableProduct.AltWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CanOverridePackQuantity {
                get {
                    return ((bool)(this[this.tableProduct.CanOverridePackQuantityColumn]));
                }
                set {
                    this[this.tableProduct.CanOverridePackQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableProduct.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableProduct.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColourNull() {
                return this.IsNull(this.tableProduct.ColourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColourNull() {
                this[this.tableProduct.ColourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdbGroupNull() {
                return this.IsNull(this.tableProduct.dbGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdbGroupNull() {
                this[this.tableProduct.dbGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnalysisTypeNull() {
                return this.IsNull(this.tableProduct.AnalysisTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnalysisTypeNull() {
                this[this.tableProduct.AnalysisTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManufacturerNull() {
                return this.IsNull(this.tableProduct.ManufacturerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManufacturerNull() {
                this[this.tableProduct.ManufacturerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPricingTypeNull() {
                return this.IsNull(this.tableProduct.PricingTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPricingTypeNull() {
                this[this.tableProduct.PricingTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSizeCodeNull() {
                return this.IsNull(this.tableProduct.SizeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSizeCodeNull() {
                this[this.tableProduct.SizeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastChangedNull() {
                return this.IsNull(this.tableProduct.LastChangedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastChangedNull() {
                this[this.tableProduct.LastChangedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstUnitsNull() {
                return this.IsNull(this.tableProduct.EstUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstUnitsNull() {
                this[this.tableProduct.EstUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStockLocationNull() {
                return this.IsNull(this.tableProduct.StockLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStockLocationNull() {
                this[this.tableProduct.StockLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstAnalysisCodeNull() {
                return this.IsNull(this.tableProduct.EstAnalysisCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstAnalysisCodeNull() {
                this[this.tableProduct.EstAnalysisCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierVatCodeNull() {
                return this.IsNull(this.tableProduct.SupplierVatCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierVatCodeNull() {
                this[this.tableProduct.SupplierVatCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalNull() {
                return this.IsNull(this.tableProduct.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalNull() {
                this[this.tableProduct.NominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCostCentreNull() {
                return this.IsNull(this.tableProduct.CostCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCostCentreNull() {
                this[this.tableProduct.CostCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tableProduct.DepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepartmentNull() {
                this[this.tableProduct.DepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNominalNull() {
                return this.IsNull(this.tableProduct.PNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNominalNull() {
                this[this.tableProduct.PNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCostCentreNull() {
                return this.IsNull(this.tableProduct.PCostCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCostCentreNull() {
                this[this.tableProduct.PCostCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPDepartmentNull() {
                return this.IsNull(this.tableProduct.PDepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPDepartmentNull() {
                this[this.tableProduct.PDepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStkRef1Null() {
                return this.IsNull(this.tableProduct.StkRef1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStkRef1Null() {
                this[this.tableProduct.StkRef1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStkRef2Null() {
                return this.IsNull(this.tableProduct.StkRef2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStkRef2Null() {
                this[this.tableProduct.StkRef2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStkRef3Null() {
                return this.IsNull(this.tableProduct.StkRef3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStkRef3Null() {
                this[this.tableProduct.StkRef3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStkRef4Null() {
                return this.IsNull(this.tableProduct.StkRef4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStkRef4Null() {
                this[this.tableProduct.StkRef4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStkRef5Null() {
                return this.IsNull(this.tableProduct.StkRef5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStkRef5Null() {
                this[this.tableProduct.StkRef5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStkRef6Null() {
                return this.IsNull(this.tableProduct.StkRef6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStkRef6Null() {
                this[this.tableProduct.StkRef6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStkRef7Null() {
                return this.IsNull(this.tableProduct.StkRef7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStkRef7Null() {
                this[this.tableProduct.StkRef7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStkRef8Null() {
                return this.IsNull(this.tableProduct.StkRef8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStkRef8Null() {
                this[this.tableProduct.StkRef8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStkRef9Null() {
                return this.IsNull(this.tableProduct.StkRef9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStkRef9Null() {
                this[this.tableProduct.StkRef9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStkRef10Null() {
                return this.IsNull(this.tableProduct.StkRef10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStkRef10Null() {
                this[this.tableProduct.StkRef10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierRefNull() {
                return this.IsNull(this.tableProduct.SupplierRefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierRefNull() {
                this[this.tableProduct.SupplierRefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierCodeNull() {
                return this.IsNull(this.tableProduct.SupplierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierCodeNull() {
                this[this.tableProduct.SupplierCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWebURLNull() {
                return this.IsNull(this.tableProduct.WebURLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWebURLNull() {
                this[this.tableProduct.WebURLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchaseUnitsNull() {
                return this.IsNull(this.tableProduct.PurchaseUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchaseUnitsNull() {
                this[this.tableProduct.PurchaseUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExtraInfoNull() {
                return this.IsNull(this.tableProduct.ExtraInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExtraInfoNull() {
                this[this.tableProduct.ExtraInfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuppDescUnitsNull() {
                return this.IsNull(this.tableProduct.SuppDescUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuppDescUnitsNull() {
                this[this.tableProduct.SuppDescUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommodityCodeNull() {
                return this.IsNull(this.tableProduct.CommodityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommodityCodeNull() {
                this[this.tableProduct.CommodityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryOfOriginNull() {
                return this.IsNull(this.tableProduct.CountryOfOriginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryOfOriginNull() {
                this[this.tableProduct.CountryOfOriginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSupplierCodeNull() {
                return this.IsNull(this.tableProduct.LastSupplierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSupplierCodeNull() {
                this[this.tableProduct.LastSupplierCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastPurchaseDateNull() {
                return this.IsNull(this.tableProduct.LastPurchaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastPurchaseDateNull() {
                this[this.tableProduct.LastPurchaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpiresOnDateNull() {
                return this.IsNull(this.tableProduct.ExpiresOnDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpiresOnDateNull() {
                this[this.tableProduct.ExpiresOnDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternativeProductNull() {
                return this.IsNull(this.tableProduct.AlternativeProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternativeProductNull() {
                this[this.tableProduct.AlternativeProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternativeProductSizeNull() {
                return this.IsNull(this.tableProduct.AlternativeProductSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternativeProductSizeNull() {
                this[this.tableProduct.AlternativeProductSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecondAltProductNull() {
                return this.IsNull(this.tableProduct.SecondAltProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecondAltProductNull() {
                this[this.tableProduct.SecondAltProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecondAltProductSizeNull() {
                return this.IsNull(this.tableProduct.SecondAltProductSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecondAltProductSizeNull() {
                this[this.tableProduct.SecondAltProductSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocationGroupNull() {
                return this.IsNull(this.tableProduct.LocationGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocationGroupNull() {
                this[this.tableProduct.LocationGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClaimNull() {
                return this.IsNull(this.tableProduct.ClaimColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClaimNull() {
                this[this.tableProduct.ClaimColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeAliasNull() {
                return this.IsNull(this.tableProduct.CodeAliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeAliasNull() {
                this[this.tableProduct.CodeAliasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoardCodeNull() {
                return this.IsNull(this.tableProduct.BoardCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoardCodeNull() {
                this[this.tableProduct.BoardCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentJobNull() {
                return this.IsNull(this.tableProduct.ParentJobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentJobNull() {
                this[this.tableProduct.ParentJobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifiedNull() {
                return this.IsNull(this.tableProduct.DateModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifiedNull() {
                this[this.tableProduct.DateModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedByUserIDNull() {
                return this.IsNull(this.tableProduct.ModifiedByUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedByUserIDNull() {
                this[this.tableProduct.ModifiedByUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsListAliasNull() {
                return this.IsNull(this.tableProduct.ListAliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetListAliasNull() {
                this[this.tableProduct.ListAliasColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CustomersRowChangeEvent : global::System.EventArgs {
            
            private CustomersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CustomersRowChangeEvent(CustomersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CustomersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class JobProductsRowChangeEvent : global::System.EventArgs {
            
            private JobProductsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobProductsRowChangeEvent(JobProductsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobProductsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MainEstimateDetailsRowChangeEvent : global::System.EventArgs {
            
            private MainEstimateDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainEstimateDetailsRowChangeEvent(MainEstimateDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainEstimateDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MainJobDetailsRowChangeEvent : global::System.EventArgs {
            
            private MainJobDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainJobDetailsRowChangeEvent(MainJobDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MainJobDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OrderLineRowChangeEvent : global::System.EventArgs {
            
            private OrderLineRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrderLineRowChangeEvent(OrderLineRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrderLineRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OriginationMaterialInputRowChangeEvent : global::System.EventArgs {
            
            private OriginationMaterialInputRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OriginationMaterialInputRowChangeEvent(OriginationMaterialInputRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OriginationMaterialInputRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProductRowChangeEvent : global::System.EventArgs {
            
            private ProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRowChangeEvent(ProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PalletCard.ThardataDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CustomersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CustomersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Customers";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("Town", "Town");
            tableMapping.ColumnMappings.Add("County", "County");
            tableMapping.ColumnMappings.Add("Postcode", "Postcode");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("Contact", "Contact");
            tableMapping.ColumnMappings.Add("Tel", "Tel");
            tableMapping.ColumnMappings.Add("Fax", "Fax");
            tableMapping.ColumnMappings.Add("WebURL", "WebURL");
            tableMapping.ColumnMappings.Add("Uplift", "Uplift");
            tableMapping.ColumnMappings.Add("CBand", "CBand");
            tableMapping.ColumnMappings.Add("Delivery", "Delivery");
            tableMapping.ColumnMappings.Add("ParentCode", "ParentCode");
            tableMapping.ColumnMappings.Add("Ref1", "Ref1");
            tableMapping.ColumnMappings.Add("Ref2", "Ref2");
            tableMapping.ColumnMappings.Add("Ref3", "Ref3");
            tableMapping.ColumnMappings.Add("Exchange", "Exchange");
            tableMapping.ColumnMappings.Add("CommissionPerc", "CommissionPerc");
            tableMapping.ColumnMappings.Add("DontMerge", "DontMerge");
            tableMapping.ColumnMappings.Add("OverwriteDetails", "OverwriteDetails");
            tableMapping.ColumnMappings.Add("PostingAccount", "PostingAccount");
            tableMapping.ColumnMappings.Add("IncludeInDistributions", "IncludeInDistributions");
            tableMapping.ColumnMappings.Add("CountryOfOrigin", "CountryOfOrigin");
            tableMapping.ColumnMappings.Add("VatCode", "VatCode");
            tableMapping.ColumnMappings.Add("VatRegNo", "VatRegNo");
            tableMapping.ColumnMappings.Add("SSDNatureOfTransaction", "SSDNatureOfTransaction");
            tableMapping.ColumnMappings.Add("SSDDeliveryTerms", "SSDDeliveryTerms");
            tableMapping.ColumnMappings.Add("SSDModeOfTransport", "SSDModeOfTransport");
            tableMapping.ColumnMappings.Add("UseAltCurrency", "UseAltCurrency");
            tableMapping.ColumnMappings.Add("OverideProductVat", "OverideProductVat");
            tableMapping.ColumnMappings.Add("IsDefault", "IsDefault");
            tableMapping.ColumnMappings.Add("AllowPartShipment", "AllowPartShipment");
            tableMapping.ColumnMappings.Add("GMDisabled", "GMDisabled");
            tableMapping.ColumnMappings.Add("PaymentType", "PaymentType");
            tableMapping.ColumnMappings.Add("PaymentDays", "PaymentDays");
            tableMapping.ColumnMappings.Add("CRMUpdate", "CRMUpdate");
            tableMapping.ColumnMappings.Add("ComponentDiscount", "ComponentDiscount");
            tableMapping.ColumnMappings.Add("SellingBandNameID", "SellingBandNameID");
            tableMapping.ColumnMappings.Add("Courier", "Courier");
            tableMapping.ColumnMappings.Add("CourierServiceID", "CourierServiceID");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("Deleted", "Deleted");
            tableMapping.ColumnMappings.Add("DeletedDate", "DeletedDate");
            tableMapping.ColumnMappings.Add("DeletedBy", "DeletedBy");
            tableMapping.ColumnMappings.Add("CompanyID", "CompanyID");
            tableMapping.ColumnMappings.Add("PrePressWebEnable", "PrePressWebEnable");
            tableMapping.ColumnMappings.Add("DefaultPackingLocation", "DefaultPackingLocation");
            tableMapping.ColumnMappings.Add("Inactive", "Inactive");
            tableMapping.ColumnMappings.Add("SecurityGroupID", "SecurityGroupID");
            tableMapping.ColumnMappings.Add("CustomerStatus", "CustomerStatus");
            tableMapping.ColumnMappings.Add("PrePaidSalesInvoice", "PrePaidSalesInvoice");
            tableMapping.ColumnMappings.Add("CreateSeriesJobs", "CreateSeriesJobs");
            tableMapping.ColumnMappings.Add("ExternalID", "ExternalID");
            tableMapping.ColumnMappings.Add("Latitude", "Latitude");
            tableMapping.ColumnMappings.Add("Longitude", "Longitude");
            tableMapping.ColumnMappings.Add("UseShortfall", "UseShortfall");
            tableMapping.ColumnMappings.Add("SalesTaxCodeID", "SalesTaxCodeID");
            tableMapping.ColumnMappings.Add("SalesTaxItemID", "SalesTaxItemID");
            tableMapping.ColumnMappings.Add("CarriageSalesTaxCodeID", "CarriageSalesTaxCodeID");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("AllowedOverProduction", "AllowedOverProduction");
            tableMapping.ColumnMappings.Add("PriceListCustomerGroupID", "PriceListCustomerGroupID");
            tableMapping.ColumnMappings.Add("AccountRef", "AccountRef");
            tableMapping.ColumnMappings.Add("dbTimeStamp", "dbTimeStamp");
            tableMapping.ColumnMappings.Add("eStatus_id", "eStatus_id");
            tableMapping.ColumnMappings.Add("Customers_AccessString", "Customers_AccessString");
            tableMapping.ColumnMappings.Add("OnlineLogo", "OnlineLogo");
            tableMapping.ColumnMappings.Add("GMUpdate", "GMUpdate");
            tableMapping.ColumnMappings.Add("PaymentTermsRef", "PaymentTermsRef");
            tableMapping.ColumnMappings.Add("CostCentre", "CostCentre");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Customers] WHERE (([ID] = @Original_ID) AND ([dbTimeStamp] = @" +
                "Original_dbTimeStamp))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dbTimeStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbTimeStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Customers] ([Comment], [Code], [Name], [Address], [Town], [Cou" +
                "nty], [Postcode], [Country], [Contact], [Tel], [Fax], [WebURL], [Uplift], [CBand" +
                "], [Delivery], [ParentCode], [Ref1], [Ref2], [Ref3], [Exchange], [CommissionPerc" +
                "], [DontMerge], [OverwriteDetails], [PostingAccount], [IncludeInDistributions], " +
                "[CountryOfOrigin], [VatCode], [VatRegNo], [SSDNatureOfTransaction], [SSDDelivery" +
                "Terms], [SSDModeOfTransport], [UseAltCurrency], [OverideProductVat], [IsDefault]" +
                ", [AllowPartShipment], [GMDisabled], [PaymentType], [PaymentDays], [CRMUpdate], " +
                "[ComponentDiscount], [SellingBandNameID], [Courier], [CourierServiceID], [Create" +
                "dDate], [Deleted], [DeletedDate], [DeletedBy], [CompanyID], [PrePressWebEnable]," +
                " [DefaultPackingLocation], [Inactive], [SecurityGroupID], [CustomerStatus], [Pre" +
                "PaidSalesInvoice], [CreateSeriesJobs], [ExternalID], [Latitude], [Longitude], [U" +
                "seShortfall], [SalesTaxCodeID], [SalesTaxItemID], [CarriageSalesTaxCodeID], [Dep" +
                "artment], [AllowedOverProduction], [PriceListCustomerGroupID], [AccountRef], [eS" +
                "tatus_id], [Customers_AccessString], [OnlineLogo], [GMUpdate], [PaymentTermsRef]" +
                ", [CostCentre]) VALUES (@Comment, @Code, @Name, @Address, @Town, @County, @Postc" +
                "ode, @Country, @Contact, @Tel, @Fax, @WebURL, @Uplift, @CBand, @Delivery, @Paren" +
                "tCode, @Ref1, @Ref2, @Ref3, @Exchange, @CommissionPerc, @DontMerge, @OverwriteDe" +
                "tails, @PostingAccount, @IncludeInDistributions, @CountryOfOrigin, @VatCode, @Va" +
                "tRegNo, @SSDNatureOfTransaction, @SSDDeliveryTerms, @SSDModeOfTransport, @UseAlt" +
                "Currency, @OverideProductVat, @IsDefault, @AllowPartShipment, @GMDisabled, @Paym" +
                "entType, @PaymentDays, @CRMUpdate, @ComponentDiscount, @SellingBandNameID, @Cour" +
                "ier, @CourierServiceID, @CreatedDate, @Deleted, @DeletedDate, @DeletedBy, @Compa" +
                "nyID, @PrePressWebEnable, @DefaultPackingLocation, @Inactive, @SecurityGroupID, " +
                "@CustomerStatus, @PrePaidSalesInvoice, @CreateSeriesJobs, @ExternalID, @Latitude" +
                ", @Longitude, @UseShortfall, @SalesTaxCodeID, @SalesTaxItemID, @CarriageSalesTax" +
                "CodeID, @Department, @AllowedOverProduction, @PriceListCustomerGroupID, @Account" +
                "Ref, @eStatus_id, @Customers_AccessString, @OnlineLogo, @GMUpdate, @PaymentTerms" +
                "Ref, @CostCentre);\r\nSELECT ID, Comment, Code, Name, Address, Town, County, Postc" +
                "ode, Country, Contact, Tel, Fax, WebURL, Uplift, CBand, Delivery, ParentCode, Re" +
                "f1, Ref2, Ref3, Exchange, CommissionPerc, DontMerge, OverwriteDetails, PostingAc" +
                "count, IncludeInDistributions, CountryOfOrigin, VatCode, VatRegNo, SSDNatureOfTr" +
                "ansaction, SSDDeliveryTerms, SSDModeOfTransport, UseAltCurrency, OverideProductV" +
                "at, IsDefault, AllowPartShipment, GMDisabled, PaymentType, PaymentDays, CRMUpdat" +
                "e, ComponentDiscount, SellingBandNameID, Courier, CourierServiceID, CreatedDate," +
                " Deleted, DeletedDate, DeletedBy, CompanyID, PrePressWebEnable, DefaultPackingLo" +
                "cation, Inactive, SecurityGroupID, CustomerStatus, PrePaidSalesInvoice, CreateSe" +
                "riesJobs, ExternalID, Latitude, Longitude, UseShortfall, SalesTaxCodeID, SalesTa" +
                "xItemID, CarriageSalesTaxCodeID, Department, AllowedOverProduction, PriceListCus" +
                "tomerGroupID, AccountRef, dbTimeStamp, eStatus_id, Customers_AccessString, Onlin" +
                "eLogo, GMUpdate, PaymentTermsRef, CostCentre FROM Customers WHERE (ID = SCOPE_ID" +
                "ENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Town", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Town", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@County", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "County", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Postcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Postcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WebURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WebURL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uplift", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uplift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBand", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Delivery", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Delivery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Exchange", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Exchange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommissionPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommissionPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DontMerge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DontMerge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverwriteDetails", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverwriteDetails", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostingAccount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostingAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IncludeInDistributions", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IncludeInDistributions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatRegNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatRegNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDNatureOfTransaction", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDNatureOfTransaction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDDeliveryTerms", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDDeliveryTerms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDModeOfTransport", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDModeOfTransport", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseAltCurrency", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseAltCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverideProductVat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverideProductVat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDefault", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDefault", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowPartShipment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowPartShipment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMDisabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GMDisabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentDays", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRMUpdate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRMUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComponentDiscount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingBandNameID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingBandNameID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Courier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Courier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CourierServiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CourierServiceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeletedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeletedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeletedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrePressWebEnable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrePressWebEnable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultPackingLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultPackingLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerStatus", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrePaidSalesInvoice", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrePaidSalesInvoice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateSeriesJobs", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateSeriesJobs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExternalID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExternalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Latitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Latitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Longitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Longitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseShortfall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseShortfall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageSalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageSalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowedOverProduction", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowedOverProduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriceListCustomerGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceListCustomerGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@eStatus_id", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eStatus_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customers_AccessString", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Customers_AccessString", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlineLogo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineLogo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMUpdate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GMUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentTermsRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermsRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Customers] SET [Comment] = @Comment, [Code] = @Code, [Name] = @Name" +
                ", [Address] = @Address, [Town] = @Town, [County] = @County, [Postcode] = @Postco" +
                "de, [Country] = @Country, [Contact] = @Contact, [Tel] = @Tel, [Fax] = @Fax, [Web" +
                "URL] = @WebURL, [Uplift] = @Uplift, [CBand] = @CBand, [Delivery] = @Delivery, [P" +
                "arentCode] = @ParentCode, [Ref1] = @Ref1, [Ref2] = @Ref2, [Ref3] = @Ref3, [Excha" +
                "nge] = @Exchange, [CommissionPerc] = @CommissionPerc, [DontMerge] = @DontMerge, " +
                "[OverwriteDetails] = @OverwriteDetails, [PostingAccount] = @PostingAccount, [Inc" +
                "ludeInDistributions] = @IncludeInDistributions, [CountryOfOrigin] = @CountryOfOr" +
                "igin, [VatCode] = @VatCode, [VatRegNo] = @VatRegNo, [SSDNatureOfTransaction] = @" +
                "SSDNatureOfTransaction, [SSDDeliveryTerms] = @SSDDeliveryTerms, [SSDModeOfTransp" +
                "ort] = @SSDModeOfTransport, [UseAltCurrency] = @UseAltCurrency, [OverideProductV" +
                "at] = @OverideProductVat, [IsDefault] = @IsDefault, [AllowPartShipment] = @Allow" +
                "PartShipment, [GMDisabled] = @GMDisabled, [PaymentType] = @PaymentType, [Payment" +
                "Days] = @PaymentDays, [CRMUpdate] = @CRMUpdate, [ComponentDiscount] = @Component" +
                "Discount, [SellingBandNameID] = @SellingBandNameID, [Courier] = @Courier, [Couri" +
                "erServiceID] = @CourierServiceID, [CreatedDate] = @CreatedDate, [Deleted] = @Del" +
                "eted, [DeletedDate] = @DeletedDate, [DeletedBy] = @DeletedBy, [CompanyID] = @Com" +
                "panyID, [PrePressWebEnable] = @PrePressWebEnable, [DefaultPackingLocation] = @De" +
                "faultPackingLocation, [Inactive] = @Inactive, [SecurityGroupID] = @SecurityGroup" +
                "ID, [CustomerStatus] = @CustomerStatus, [PrePaidSalesInvoice] = @PrePaidSalesInv" +
                "oice, [CreateSeriesJobs] = @CreateSeriesJobs, [ExternalID] = @ExternalID, [Latit" +
                "ude] = @Latitude, [Longitude] = @Longitude, [UseShortfall] = @UseShortfall, [Sal" +
                "esTaxCodeID] = @SalesTaxCodeID, [SalesTaxItemID] = @SalesTaxItemID, [CarriageSal" +
                "esTaxCodeID] = @CarriageSalesTaxCodeID, [Department] = @Department, [AllowedOver" +
                "Production] = @AllowedOverProduction, [PriceListCustomerGroupID] = @PriceListCus" +
                "tomerGroupID, [AccountRef] = @AccountRef, [eStatus_id] = @eStatus_id, [Customers" +
                "_AccessString] = @Customers_AccessString, [OnlineLogo] = @OnlineLogo, [GMUpdate]" +
                " = @GMUpdate, [PaymentTermsRef] = @PaymentTermsRef, [CostCentre] = @CostCentre W" +
                "HERE (([ID] = @Original_ID) AND ([dbTimeStamp] = @Original_dbTimeStamp));\r\nSELEC" +
                "T ID, Comment, Code, Name, Address, Town, County, Postcode, Country, Contact, Te" +
                "l, Fax, WebURL, Uplift, CBand, Delivery, ParentCode, Ref1, Ref2, Ref3, Exchange," +
                " CommissionPerc, DontMerge, OverwriteDetails, PostingAccount, IncludeInDistribut" +
                "ions, CountryOfOrigin, VatCode, VatRegNo, SSDNatureOfTransaction, SSDDeliveryTer" +
                "ms, SSDModeOfTransport, UseAltCurrency, OverideProductVat, IsDefault, AllowPartS" +
                "hipment, GMDisabled, PaymentType, PaymentDays, CRMUpdate, ComponentDiscount, Sel" +
                "lingBandNameID, Courier, CourierServiceID, CreatedDate, Deleted, DeletedDate, De" +
                "letedBy, CompanyID, PrePressWebEnable, DefaultPackingLocation, Inactive, Securit" +
                "yGroupID, CustomerStatus, PrePaidSalesInvoice, CreateSeriesJobs, ExternalID, Lat" +
                "itude, Longitude, UseShortfall, SalesTaxCodeID, SalesTaxItemID, CarriageSalesTax" +
                "CodeID, Department, AllowedOverProduction, PriceListCustomerGroupID, AccountRef," +
                " dbTimeStamp, eStatus_id, Customers_AccessString, OnlineLogo, GMUpdate, PaymentT" +
                "ermsRef, CostCentre FROM Customers WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Town", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Town", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@County", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "County", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Postcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Postcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WebURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WebURL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uplift", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uplift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBand", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Delivery", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Delivery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Exchange", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Exchange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommissionPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommissionPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DontMerge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DontMerge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverwriteDetails", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverwriteDetails", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostingAccount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostingAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IncludeInDistributions", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IncludeInDistributions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatRegNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatRegNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDNatureOfTransaction", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDNatureOfTransaction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDDeliveryTerms", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDDeliveryTerms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDModeOfTransport", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDModeOfTransport", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseAltCurrency", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseAltCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverideProductVat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverideProductVat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDefault", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDefault", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowPartShipment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowPartShipment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMDisabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GMDisabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentDays", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRMUpdate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRMUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComponentDiscount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingBandNameID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingBandNameID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Courier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Courier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CourierServiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CourierServiceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeletedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeletedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeletedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeletedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrePressWebEnable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrePressWebEnable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultPackingLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultPackingLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerStatus", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrePaidSalesInvoice", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrePaidSalesInvoice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateSeriesJobs", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateSeriesJobs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExternalID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExternalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Latitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Latitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Longitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Longitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseShortfall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseShortfall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageSalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageSalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowedOverProduction", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowedOverProduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriceListCustomerGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceListCustomerGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@eStatus_id", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eStatus_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Customers_AccessString", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Customers_AccessString", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlineLogo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineLogo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMUpdate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GMUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentTermsRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermsRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dbTimeStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbTimeStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PalletCard.Properties.Settings.Default.ThardataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, Comment, Code, Name, Address, Town, County, Postcode, Country, Contact, Tel, Fax, WebURL, Uplift, CBand, Delivery, ParentCode, Ref1, Ref2, Ref3, Exchange, CommissionPerc, DontMerge, OverwriteDetails, PostingAccount, IncludeInDistributions, CountryOfOrigin, VatCode, VatRegNo, SSDNatureOfTransaction, SSDDeliveryTerms, SSDModeOfTransport, UseAltCurrency, OverideProductVat, IsDefault, AllowPartShipment, GMDisabled, PaymentType, PaymentDays, CRMUpdate, ComponentDiscount, SellingBandNameID, Courier, CourierServiceID, CreatedDate, Deleted, DeletedDate, DeletedBy, CompanyID, PrePressWebEnable, DefaultPackingLocation, Inactive, SecurityGroupID, CustomerStatus, PrePaidSalesInvoice, CreateSeriesJobs, ExternalID, Latitude, Longitude, UseShortfall, SalesTaxCodeID, SalesTaxItemID, CarriageSalesTaxCodeID, Department, AllowedOverProduction, PriceListCustomerGroupID, AccountRef, dbTimeStamp, eStatus_id, Customers_AccessString, OnlineLogo, GMUpdate, PaymentTermsRef, CostCentre FROM dbo.Customers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ThardataDataSet.CustomersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ThardataDataSet.CustomersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ThardataDataSet.CustomersDataTable dataTable = new ThardataDataSet.CustomersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet.CustomersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Customers");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, byte[] Original_dbTimeStamp) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_dbTimeStamp == null)) {
                throw new global::System.ArgumentNullException("Original_dbTimeStamp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_dbTimeStamp));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Comment, 
                    string Code, 
                    string Name, 
                    string Address, 
                    string Town, 
                    string County, 
                    string Postcode, 
                    string Country, 
                    string Contact, 
                    string Tel, 
                    string Fax, 
                    string WebURL, 
                    global::System.Nullable<double> Uplift, 
                    string CBand, 
                    bool Delivery, 
                    string ParentCode, 
                    string Ref1, 
                    string Ref2, 
                    string Ref3, 
                    short Exchange, 
                    global::System.Nullable<double> CommissionPerc, 
                    int DontMerge, 
                    bool OverwriteDetails, 
                    string PostingAccount, 
                    bool IncludeInDistributions, 
                    string CountryOfOrigin, 
                    string VatCode, 
                    string VatRegNo, 
                    byte SSDNatureOfTransaction, 
                    string SSDDeliveryTerms, 
                    byte SSDModeOfTransport, 
                    bool UseAltCurrency, 
                    bool OverideProductVat, 
                    bool IsDefault, 
                    bool AllowPartShipment, 
                    bool GMDisabled, 
                    byte PaymentType, 
                    short PaymentDays, 
                    bool CRMUpdate, 
                    double ComponentDiscount, 
                    global::System.Nullable<int> SellingBandNameID, 
                    string Courier, 
                    int CourierServiceID, 
                    global::System.Nullable<global::System.DateTime> CreatedDate, 
                    bool Deleted, 
                    global::System.Nullable<global::System.DateTime> DeletedDate, 
                    string DeletedBy, 
                    int CompanyID, 
                    bool PrePressWebEnable, 
                    string DefaultPackingLocation, 
                    byte Inactive, 
                    global::System.Nullable<int> SecurityGroupID, 
                    byte CustomerStatus, 
                    byte PrePaidSalesInvoice, 
                    bool CreateSeriesJobs, 
                    string ExternalID, 
                    global::System.Nullable<double> Latitude, 
                    global::System.Nullable<double> Longitude, 
                    bool UseShortfall, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    int CarriageSalesTaxCodeID, 
                    string Department, 
                    double AllowedOverProduction, 
                    int PriceListCustomerGroupID, 
                    string AccountRef, 
                    short eStatus_id, 
                    byte[] Customers_AccessString, 
                    string OnlineLogo, 
                    bool GMUpdate, 
                    string PaymentTermsRef, 
                    string CostCentre) {
            if ((Comment == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Comment));
            }
            if ((Code == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Code));
            }
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Address == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Address));
            }
            if ((Town == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Town));
            }
            if ((County == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(County));
            }
            if ((Postcode == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Postcode));
            }
            if ((Country == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Country));
            }
            if ((Contact == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Contact));
            }
            if ((Tel == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Tel));
            }
            if ((Fax == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Fax));
            }
            if ((WebURL == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(WebURL));
            }
            if ((Uplift.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(Uplift.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CBand == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(CBand));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(Delivery));
            if ((ParentCode == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ParentCode));
            }
            if ((Ref1 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Ref1));
            }
            if ((Ref2 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Ref2));
            }
            if ((Ref3 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Ref3));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((short)(Exchange));
            if ((CommissionPerc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(CommissionPerc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(DontMerge));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(OverwriteDetails));
            if ((PostingAccount == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(PostingAccount));
            }
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(IncludeInDistributions));
            if ((CountryOfOrigin == null)) {
                throw new global::System.ArgumentNullException("CountryOfOrigin");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(CountryOfOrigin));
            }
            if ((VatCode == null)) {
                throw new global::System.ArgumentNullException("VatCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(VatCode));
            }
            if ((VatRegNo == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(VatRegNo));
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((byte)(SSDNatureOfTransaction));
            if ((SSDDeliveryTerms == null)) {
                throw new global::System.ArgumentNullException("SSDDeliveryTerms");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(SSDDeliveryTerms));
            }
            this.Adapter.InsertCommand.Parameters[30].Value = ((byte)(SSDModeOfTransport));
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(UseAltCurrency));
            this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(OverideProductVat));
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(IsDefault));
            this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(AllowPartShipment));
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(GMDisabled));
            this.Adapter.InsertCommand.Parameters[36].Value = ((byte)(PaymentType));
            this.Adapter.InsertCommand.Parameters[37].Value = ((short)(PaymentDays));
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(CRMUpdate));
            this.Adapter.InsertCommand.Parameters[39].Value = ((double)(ComponentDiscount));
            if ((SellingBandNameID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((int)(SellingBandNameID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Courier == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(Courier));
            }
            this.Adapter.InsertCommand.Parameters[42].Value = ((int)(CourierServiceID));
            if ((CreatedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((System.DateTime)(CreatedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[44].Value = ((bool)(Deleted));
            if ((DeletedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((System.DateTime)(DeletedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((DeletedBy == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(DeletedBy));
            }
            this.Adapter.InsertCommand.Parameters[47].Value = ((int)(CompanyID));
            this.Adapter.InsertCommand.Parameters[48].Value = ((bool)(PrePressWebEnable));
            if ((DefaultPackingLocation == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(DefaultPackingLocation));
            }
            this.Adapter.InsertCommand.Parameters[50].Value = ((byte)(Inactive));
            if ((SecurityGroupID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((int)(SecurityGroupID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[52].Value = ((byte)(CustomerStatus));
            this.Adapter.InsertCommand.Parameters[53].Value = ((byte)(PrePaidSalesInvoice));
            this.Adapter.InsertCommand.Parameters[54].Value = ((bool)(CreateSeriesJobs));
            if ((ExternalID == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(ExternalID));
            }
            if ((Latitude.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((double)(Latitude.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Longitude.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((double)(Longitude.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[58].Value = ((bool)(UseShortfall));
            this.Adapter.InsertCommand.Parameters[59].Value = ((int)(SalesTaxCodeID));
            this.Adapter.InsertCommand.Parameters[60].Value = ((int)(SalesTaxItemID));
            this.Adapter.InsertCommand.Parameters[61].Value = ((int)(CarriageSalesTaxCodeID));
            if ((Department == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(Department));
            }
            this.Adapter.InsertCommand.Parameters[63].Value = ((double)(AllowedOverProduction));
            this.Adapter.InsertCommand.Parameters[64].Value = ((int)(PriceListCustomerGroupID));
            if ((AccountRef == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(AccountRef));
            }
            this.Adapter.InsertCommand.Parameters[66].Value = ((short)(eStatus_id));
            if ((Customers_AccessString == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((byte[])(Customers_AccessString));
            }
            if ((OnlineLogo == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(OnlineLogo));
            }
            this.Adapter.InsertCommand.Parameters[69].Value = ((bool)(GMUpdate));
            if ((PaymentTermsRef == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(PaymentTermsRef));
            }
            if ((CostCentre == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(CostCentre));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Comment, 
                    string Code, 
                    string Name, 
                    string Address, 
                    string Town, 
                    string County, 
                    string Postcode, 
                    string Country, 
                    string Contact, 
                    string Tel, 
                    string Fax, 
                    string WebURL, 
                    global::System.Nullable<double> Uplift, 
                    string CBand, 
                    bool Delivery, 
                    string ParentCode, 
                    string Ref1, 
                    string Ref2, 
                    string Ref3, 
                    short Exchange, 
                    global::System.Nullable<double> CommissionPerc, 
                    int DontMerge, 
                    bool OverwriteDetails, 
                    string PostingAccount, 
                    bool IncludeInDistributions, 
                    string CountryOfOrigin, 
                    string VatCode, 
                    string VatRegNo, 
                    byte SSDNatureOfTransaction, 
                    string SSDDeliveryTerms, 
                    byte SSDModeOfTransport, 
                    bool UseAltCurrency, 
                    bool OverideProductVat, 
                    bool IsDefault, 
                    bool AllowPartShipment, 
                    bool GMDisabled, 
                    byte PaymentType, 
                    short PaymentDays, 
                    bool CRMUpdate, 
                    double ComponentDiscount, 
                    global::System.Nullable<int> SellingBandNameID, 
                    string Courier, 
                    int CourierServiceID, 
                    global::System.Nullable<global::System.DateTime> CreatedDate, 
                    bool Deleted, 
                    global::System.Nullable<global::System.DateTime> DeletedDate, 
                    string DeletedBy, 
                    int CompanyID, 
                    bool PrePressWebEnable, 
                    string DefaultPackingLocation, 
                    byte Inactive, 
                    global::System.Nullable<int> SecurityGroupID, 
                    byte CustomerStatus, 
                    byte PrePaidSalesInvoice, 
                    bool CreateSeriesJobs, 
                    string ExternalID, 
                    global::System.Nullable<double> Latitude, 
                    global::System.Nullable<double> Longitude, 
                    bool UseShortfall, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    int CarriageSalesTaxCodeID, 
                    string Department, 
                    double AllowedOverProduction, 
                    int PriceListCustomerGroupID, 
                    string AccountRef, 
                    short eStatus_id, 
                    byte[] Customers_AccessString, 
                    string OnlineLogo, 
                    bool GMUpdate, 
                    string PaymentTermsRef, 
                    string CostCentre, 
                    int Original_ID, 
                    byte[] Original_dbTimeStamp, 
                    int ID) {
            if ((Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Comment));
            }
            if ((Code == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Code));
            }
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Address == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Address));
            }
            if ((Town == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Town));
            }
            if ((County == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(County));
            }
            if ((Postcode == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Postcode));
            }
            if ((Country == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Country));
            }
            if ((Contact == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Contact));
            }
            if ((Tel == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Tel));
            }
            if ((Fax == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Fax));
            }
            if ((WebURL == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(WebURL));
            }
            if ((Uplift.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Uplift.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CBand == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(CBand));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(Delivery));
            if ((ParentCode == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ParentCode));
            }
            if ((Ref1 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Ref1));
            }
            if ((Ref2 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Ref2));
            }
            if ((Ref3 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Ref3));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((short)(Exchange));
            if ((CommissionPerc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(CommissionPerc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(DontMerge));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(OverwriteDetails));
            if ((PostingAccount == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(PostingAccount));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(IncludeInDistributions));
            if ((CountryOfOrigin == null)) {
                throw new global::System.ArgumentNullException("CountryOfOrigin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(CountryOfOrigin));
            }
            if ((VatCode == null)) {
                throw new global::System.ArgumentNullException("VatCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(VatCode));
            }
            if ((VatRegNo == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(VatRegNo));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((byte)(SSDNatureOfTransaction));
            if ((SSDDeliveryTerms == null)) {
                throw new global::System.ArgumentNullException("SSDDeliveryTerms");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(SSDDeliveryTerms));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((byte)(SSDModeOfTransport));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(UseAltCurrency));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(OverideProductVat));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(IsDefault));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(AllowPartShipment));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(GMDisabled));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((byte)(PaymentType));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((short)(PaymentDays));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(CRMUpdate));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(ComponentDiscount));
            if ((SellingBandNameID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(SellingBandNameID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Courier == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Courier));
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(CourierServiceID));
            if ((CreatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(CreatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(Deleted));
            if ((DeletedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(DeletedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((DeletedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(DeletedBy));
            }
            this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(CompanyID));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((bool)(PrePressWebEnable));
            if ((DefaultPackingLocation == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(DefaultPackingLocation));
            }
            this.Adapter.UpdateCommand.Parameters[50].Value = ((byte)(Inactive));
            if ((SecurityGroupID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(SecurityGroupID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((byte)(CustomerStatus));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((byte)(PrePaidSalesInvoice));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(CreateSeriesJobs));
            if ((ExternalID == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(ExternalID));
            }
            if ((Latitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(Latitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Longitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((double)(Longitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(UseShortfall));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(SalesTaxCodeID));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(SalesTaxItemID));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(CarriageSalesTaxCodeID));
            if ((Department == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Department));
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(AllowedOverProduction));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(PriceListCustomerGroupID));
            if ((AccountRef == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(AccountRef));
            }
            this.Adapter.UpdateCommand.Parameters[66].Value = ((short)(eStatus_id));
            if ((Customers_AccessString == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((byte[])(Customers_AccessString));
            }
            if ((OnlineLogo == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(OnlineLogo));
            }
            this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(GMUpdate));
            if ((PaymentTermsRef == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(PaymentTermsRef));
            }
            if ((CostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(CostCentre));
            }
            this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(Original_ID));
            if ((Original_dbTimeStamp == null)) {
                throw new global::System.ArgumentNullException("Original_dbTimeStamp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((byte[])(Original_dbTimeStamp));
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Comment, 
                    string Code, 
                    string Name, 
                    string Address, 
                    string Town, 
                    string County, 
                    string Postcode, 
                    string Country, 
                    string Contact, 
                    string Tel, 
                    string Fax, 
                    string WebURL, 
                    global::System.Nullable<double> Uplift, 
                    string CBand, 
                    bool Delivery, 
                    string ParentCode, 
                    string Ref1, 
                    string Ref2, 
                    string Ref3, 
                    short Exchange, 
                    global::System.Nullable<double> CommissionPerc, 
                    int DontMerge, 
                    bool OverwriteDetails, 
                    string PostingAccount, 
                    bool IncludeInDistributions, 
                    string CountryOfOrigin, 
                    string VatCode, 
                    string VatRegNo, 
                    byte SSDNatureOfTransaction, 
                    string SSDDeliveryTerms, 
                    byte SSDModeOfTransport, 
                    bool UseAltCurrency, 
                    bool OverideProductVat, 
                    bool IsDefault, 
                    bool AllowPartShipment, 
                    bool GMDisabled, 
                    byte PaymentType, 
                    short PaymentDays, 
                    bool CRMUpdate, 
                    double ComponentDiscount, 
                    global::System.Nullable<int> SellingBandNameID, 
                    string Courier, 
                    int CourierServiceID, 
                    global::System.Nullable<global::System.DateTime> CreatedDate, 
                    bool Deleted, 
                    global::System.Nullable<global::System.DateTime> DeletedDate, 
                    string DeletedBy, 
                    int CompanyID, 
                    bool PrePressWebEnable, 
                    string DefaultPackingLocation, 
                    byte Inactive, 
                    global::System.Nullable<int> SecurityGroupID, 
                    byte CustomerStatus, 
                    byte PrePaidSalesInvoice, 
                    bool CreateSeriesJobs, 
                    string ExternalID, 
                    global::System.Nullable<double> Latitude, 
                    global::System.Nullable<double> Longitude, 
                    bool UseShortfall, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    int CarriageSalesTaxCodeID, 
                    string Department, 
                    double AllowedOverProduction, 
                    int PriceListCustomerGroupID, 
                    string AccountRef, 
                    short eStatus_id, 
                    byte[] Customers_AccessString, 
                    string OnlineLogo, 
                    bool GMUpdate, 
                    string PaymentTermsRef, 
                    string CostCentre, 
                    int Original_ID, 
                    byte[] Original_dbTimeStamp) {
            return this.Update(Comment, Code, Name, Address, Town, County, Postcode, Country, Contact, Tel, Fax, WebURL, Uplift, CBand, Delivery, ParentCode, Ref1, Ref2, Ref3, Exchange, CommissionPerc, DontMerge, OverwriteDetails, PostingAccount, IncludeInDistributions, CountryOfOrigin, VatCode, VatRegNo, SSDNatureOfTransaction, SSDDeliveryTerms, SSDModeOfTransport, UseAltCurrency, OverideProductVat, IsDefault, AllowPartShipment, GMDisabled, PaymentType, PaymentDays, CRMUpdate, ComponentDiscount, SellingBandNameID, Courier, CourierServiceID, CreatedDate, Deleted, DeletedDate, DeletedBy, CompanyID, PrePressWebEnable, DefaultPackingLocation, Inactive, SecurityGroupID, CustomerStatus, PrePaidSalesInvoice, CreateSeriesJobs, ExternalID, Latitude, Longitude, UseShortfall, SalesTaxCodeID, SalesTaxItemID, CarriageSalesTaxCodeID, Department, AllowedOverProduction, PriceListCustomerGroupID, AccountRef, eStatus_id, Customers_AccessString, OnlineLogo, GMUpdate, PaymentTermsRef, CostCentre, Original_ID, Original_dbTimeStamp, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class JobProductsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public JobProductsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "JobProducts";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("JobNo", "JobNo");
            tableMapping.ColumnMappings.Add("ProductCode", "ProductCode");
            tableMapping.ColumnMappings.Add("ProductSize", "ProductSize");
            tableMapping.ColumnMappings.Add("ProductNumber", "ProductNumber");
            tableMapping.ColumnMappings.Add("DeliveryCustomerCode", "DeliveryCustomerCode");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("QuantityOrdered", "QuantityOrdered");
            tableMapping.ColumnMappings.Add("QuantityDelivered", "QuantityDelivered");
            tableMapping.ColumnMappings.Add("QuantityInStock", "QuantityInStock");
            tableMapping.ColumnMappings.Add("QuantityInvoiced", "QuantityInvoiced");
            tableMapping.ColumnMappings.Add("QuantityProduced", "QuantityProduced");
            tableMapping.ColumnMappings.Add("Reference1", "Reference1");
            tableMapping.ColumnMappings.Add("Reference2", "Reference2");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("PricePer1000", "PricePer1000");
            tableMapping.ColumnMappings.Add("SalesLineID", "SalesLineID");
            tableMapping.ColumnMappings.Add("JobType", "JobType");
            tableMapping.ColumnMappings.Add("TaxCode", "TaxCode");
            tableMapping.ColumnMappings.Add("Nominal", "Nominal");
            tableMapping.ColumnMappings.Add("CostCentre", "CostCentre");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("EstimateID", "EstimateID");
            tableMapping.ColumnMappings.Add("EstHeaderRef", "EstHeaderRef");
            tableMapping.ColumnMappings.Add("Contact", "Contact");
            tableMapping.ColumnMappings.Add("Exclude", "Exclude");
            tableMapping.ColumnMappings.Add("IsGanged", "IsGanged");
            tableMapping.ColumnMappings.Add("InvoiceToParent", "InvoiceToParent");
            tableMapping.ColumnMappings.Add("Currency", "Currency");
            tableMapping.ColumnMappings.Add("ForeignPrice", "ForeignPrice");
            tableMapping.ColumnMappings.Add("ForeignPricePer1000", "ForeignPricePer1000");
            tableMapping.ColumnMappings.Add("ExchangeRate", "ExchangeRate");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            tableMapping.ColumnMappings.Add("InvoiceCustomerCode", "InvoiceCustomerCode");
            tableMapping.ColumnMappings.Add("DateModified", "DateModified");
            tableMapping.ColumnMappings.Add("ModifiedByUserID", "ModifiedByUserID");
            tableMapping.ColumnMappings.Add("SalesJobNo", "SalesJobNo");
            tableMapping.ColumnMappings.Add("BOMRevision", "BOMRevision");
            tableMapping.ColumnMappings.Add("SalesTaxCodeID", "SalesTaxCodeID");
            tableMapping.ColumnMappings.Add("SalesTaxItemID", "SalesTaxItemID");
            tableMapping.ColumnMappings.Add("BOMParentJobNo", "BOMParentJobNo");
            tableMapping.ColumnMappings.Add("CreatedStockType", "CreatedStockType");
            tableMapping.ColumnMappings.Add("IsAutoCreated", "IsAutoCreated");
            tableMapping.ColumnMappings.Add("EstVersionID", "EstVersionID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[JobProducts] WHERE (([ID] = @Original_ID) AND ([JobNo] = @Orig" +
                "inal_JobNo) AND ((@IsNull_ProductCode = 1 AND [ProductCode] IS NULL) OR ([Produc" +
                "tCode] = @Original_ProductCode)) AND ((@IsNull_ProductSize = 1 AND [ProductSize]" +
                " IS NULL) OR ([ProductSize] = @Original_ProductSize)) AND ([ProductNumber] = @Or" +
                "iginal_ProductNumber) AND ((@IsNull_DeliveryCustomerCode = 1 AND [DeliveryCustom" +
                "erCode] IS NULL) OR ([DeliveryCustomerCode] = @Original_DeliveryCustomerCode)) A" +
                "ND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Ori" +
                "ginal_Description)) AND ([QuantityOrdered] = @Original_QuantityOrdered) AND ([Qu" +
                "antityDelivered] = @Original_QuantityDelivered) AND ([QuantityInStock] = @Origin" +
                "al_QuantityInStock) AND ([QuantityInvoiced] = @Original_QuantityInvoiced) AND ([" +
                "QuantityProduced] = @Original_QuantityProduced) AND ((@IsNull_Reference1 = 1 AND" +
                " [Reference1] IS NULL) OR ([Reference1] = @Original_Reference1)) AND ((@IsNull_R" +
                "eference2 = 1 AND [Reference2] IS NULL) OR ([Reference2] = @Original_Reference2)" +
                ") AND ([Price] = @Original_Price) AND ([PricePer1000] = @Original_PricePer1000) " +
                "AND ([SalesLineID] = @Original_SalesLineID) AND ((@IsNull_JobType = 1 AND [JobTy" +
                "pe] IS NULL) OR ([JobType] = @Original_JobType)) AND ([TaxCode] = @Original_TaxC" +
                "ode) AND ((@IsNull_Nominal = 1 AND [Nominal] IS NULL) OR ([Nominal] = @Original_" +
                "Nominal)) AND ((@IsNull_CostCentre = 1 AND [CostCentre] IS NULL) OR ([CostCentre" +
                "] = @Original_CostCentre)) AND ((@IsNull_Department = 1 AND [Department] IS NULL" +
                ") OR ([Department] = @Original_Department)) AND ([EstimateID] = @Original_Estima" +
                "teID) AND ((@IsNull_EstHeaderRef = 1 AND [EstHeaderRef] IS NULL) OR ([EstHeaderR" +
                "ef] = @Original_EstHeaderRef)) AND ((@IsNull_Contact = 1 AND [Contact] IS NULL) " +
                "OR ([Contact] = @Original_Contact)) AND ([Exclude] = @Original_Exclude) AND ([Is" +
                "Ganged] = @Original_IsGanged) AND ([InvoiceToParent] = @Original_InvoiceToParent" +
                ") AND ([Currency] = @Original_Currency) AND ([ForeignPrice] = @Original_ForeignP" +
                "rice) AND ([ForeignPricePer1000] = @Original_ForeignPricePer1000) AND ([Exchange" +
                "Rate] = @Original_ExchangeRate) AND ([Weight] = @Original_Weight) AND ((@IsNull_" +
                "InvoiceCustomerCode = 1 AND [InvoiceCustomerCode] IS NULL) OR ([InvoiceCustomerC" +
                "ode] = @Original_InvoiceCustomerCode)) AND ((@IsNull_DateModified = 1 AND [DateM" +
                "odified] IS NULL) OR ([DateModified] = @Original_DateModified)) AND ((@IsNull_Mo" +
                "difiedByUserID = 1 AND [ModifiedByUserID] IS NULL) OR ([ModifiedByUserID] = @Ori" +
                "ginal_ModifiedByUserID)) AND ((@IsNull_SalesJobNo = 1 AND [SalesJobNo] IS NULL) " +
                "OR ([SalesJobNo] = @Original_SalesJobNo)) AND ([BOMRevision] = @Original_BOMRevi" +
                "sion) AND ([SalesTaxCodeID] = @Original_SalesTaxCodeID) AND ([SalesTaxItemID] = " +
                "@Original_SalesTaxItemID) AND ((@IsNull_BOMParentJobNo = 1 AND [BOMParentJobNo] " +
                "IS NULL) OR ([BOMParentJobNo] = @Original_BOMParentJobNo)) AND ([CreatedStockTyp" +
                "e] = @Original_CreatedStockType) AND ([IsAutoCreated] = @Original_IsAutoCreated)" +
                " AND ([EstVersionID] = @Original_EstVersionID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryCustomerCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCustomerCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCustomerCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityOrdered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityOrdered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityDelivered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityDelivered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityInStock", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInStock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityInvoiced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInvoiced", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityProduced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityProduced", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reference1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reference1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reference2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reference2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PricePer1000", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricePer1000", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesLineID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JobType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TaxCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nominal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Department", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EstHeaderRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstHeaderRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstHeaderRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Contact", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Exclude", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Exclude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsGanged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsGanged", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceToParent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceToParent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Currency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Currency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignPricePer1000", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignPricePer1000", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceCustomerCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCustomerCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCustomerCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateModified", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SalesJobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesJobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesJobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BOMParentJobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMParentJobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOMParentJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMParentJobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedStockType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedStockType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsAutoCreated", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoCreated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstVersionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstVersionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[JobProducts] ([JobNo], [ProductCode], [ProductSize], [ProductN" +
                "umber], [DeliveryCustomerCode], [Description], [QuantityOrdered], [QuantityDeliv" +
                "ered], [QuantityInStock], [QuantityInvoiced], [QuantityProduced], [Reference1], " +
                "[Reference2], [Price], [PricePer1000], [SalesLineID], [JobType], [TaxCode], [Nom" +
                "inal], [CostCentre], [Department], [EstimateID], [EstHeaderRef], [Contact], [Exc" +
                "lude], [IsGanged], [InvoiceToParent], [Currency], [ForeignPrice], [ForeignPriceP" +
                "er1000], [ExchangeRate], [Weight], [InvoiceCustomerCode], [DateModified], [Modif" +
                "iedByUserID], [SalesJobNo], [BOMRevision], [SalesTaxCodeID], [SalesTaxItemID], [" +
                "BOMParentJobNo], [CreatedStockType], [IsAutoCreated], [EstVersionID]) VALUES (@J" +
                "obNo, @ProductCode, @ProductSize, @ProductNumber, @DeliveryCustomerCode, @Descri" +
                "ption, @QuantityOrdered, @QuantityDelivered, @QuantityInStock, @QuantityInvoiced" +
                ", @QuantityProduced, @Reference1, @Reference2, @Price, @PricePer1000, @SalesLine" +
                "ID, @JobType, @TaxCode, @Nominal, @CostCentre, @Department, @EstimateID, @EstHea" +
                "derRef, @Contact, @Exclude, @IsGanged, @InvoiceToParent, @Currency, @ForeignPric" +
                "e, @ForeignPricePer1000, @ExchangeRate, @Weight, @InvoiceCustomerCode, @DateModi" +
                "fied, @ModifiedByUserID, @SalesJobNo, @BOMRevision, @SalesTaxCodeID, @SalesTaxIt" +
                "emID, @BOMParentJobNo, @CreatedStockType, @IsAutoCreated, @EstVersionID);\r\nSELEC" +
                "T ID, JobNo, ProductCode, ProductSize, ProductNumber, DeliveryCustomerCode, Desc" +
                "ription, QuantityOrdered, QuantityDelivered, QuantityInStock, QuantityInvoiced, " +
                "QuantityProduced, Reference1, Reference2, Price, PricePer1000, SalesLineID, JobT" +
                "ype, TaxCode, Nominal, CostCentre, Department, EstimateID, EstHeaderRef, Contact" +
                ", Exclude, IsGanged, InvoiceToParent, Currency, ForeignPrice, ForeignPricePer100" +
                "0, ExchangeRate, Weight, InvoiceCustomerCode, DateModified, ModifiedByUserID, Sa" +
                "lesJobNo, BOMRevision, SalesTaxCodeID, SalesTaxItemID, BOMParentJobNo, CreatedSt" +
                "ockType, IsAutoCreated, EstVersionID FROM JobProducts WHERE (ID = SCOPE_IDENTITY" +
                "())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCustomerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityOrdered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityOrdered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityDelivered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityDelivered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityInStock", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityInvoiced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityProduced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityProduced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reference1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reference2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PricePer1000", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricePer1000", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesLineID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaxCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstHeaderRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Exclude", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Exclude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsGanged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsGanged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceToParent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceToParent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Currency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Currency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignPricePer1000", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignPricePer1000", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCustomerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesJobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMParentJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMParentJobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedStockType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedStockType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAutoCreated", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstVersionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstVersionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[JobProducts] SET [JobNo] = @JobNo, [ProductCode] = @ProductCode, [P" +
                "roductSize] = @ProductSize, [ProductNumber] = @ProductNumber, [DeliveryCustomerC" +
                "ode] = @DeliveryCustomerCode, [Description] = @Description, [QuantityOrdered] = " +
                "@QuantityOrdered, [QuantityDelivered] = @QuantityDelivered, [QuantityInStock] = " +
                "@QuantityInStock, [QuantityInvoiced] = @QuantityInvoiced, [QuantityProduced] = @" +
                "QuantityProduced, [Reference1] = @Reference1, [Reference2] = @Reference2, [Price" +
                "] = @Price, [PricePer1000] = @PricePer1000, [SalesLineID] = @SalesLineID, [JobTy" +
                "pe] = @JobType, [TaxCode] = @TaxCode, [Nominal] = @Nominal, [CostCentre] = @Cost" +
                "Centre, [Department] = @Department, [EstimateID] = @EstimateID, [EstHeaderRef] =" +
                " @EstHeaderRef, [Contact] = @Contact, [Exclude] = @Exclude, [IsGanged] = @IsGang" +
                "ed, [InvoiceToParent] = @InvoiceToParent, [Currency] = @Currency, [ForeignPrice]" +
                " = @ForeignPrice, [ForeignPricePer1000] = @ForeignPricePer1000, [ExchangeRate] =" +
                " @ExchangeRate, [Weight] = @Weight, [InvoiceCustomerCode] = @InvoiceCustomerCode" +
                ", [DateModified] = @DateModified, [ModifiedByUserID] = @ModifiedByUserID, [Sales" +
                "JobNo] = @SalesJobNo, [BOMRevision] = @BOMRevision, [SalesTaxCodeID] = @SalesTax" +
                "CodeID, [SalesTaxItemID] = @SalesTaxItemID, [BOMParentJobNo] = @BOMParentJobNo, " +
                "[CreatedStockType] = @CreatedStockType, [IsAutoCreated] = @IsAutoCreated, [EstVe" +
                "rsionID] = @EstVersionID WHERE (([ID] = @Original_ID) AND ([JobNo] = @Original_J" +
                "obNo) AND ((@IsNull_ProductCode = 1 AND [ProductCode] IS NULL) OR ([ProductCode]" +
                " = @Original_ProductCode)) AND ((@IsNull_ProductSize = 1 AND [ProductSize] IS NU" +
                "LL) OR ([ProductSize] = @Original_ProductSize)) AND ([ProductNumber] = @Original" +
                "_ProductNumber) AND ((@IsNull_DeliveryCustomerCode = 1 AND [DeliveryCustomerCode" +
                "] IS NULL) OR ([DeliveryCustomerCode] = @Original_DeliveryCustomerCode)) AND ((@" +
                "IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_" +
                "Description)) AND ([QuantityOrdered] = @Original_QuantityOrdered) AND ([Quantity" +
                "Delivered] = @Original_QuantityDelivered) AND ([QuantityInStock] = @Original_Qua" +
                "ntityInStock) AND ([QuantityInvoiced] = @Original_QuantityInvoiced) AND ([Quanti" +
                "tyProduced] = @Original_QuantityProduced) AND ((@IsNull_Reference1 = 1 AND [Refe" +
                "rence1] IS NULL) OR ([Reference1] = @Original_Reference1)) AND ((@IsNull_Referen" +
                "ce2 = 1 AND [Reference2] IS NULL) OR ([Reference2] = @Original_Reference2)) AND " +
                "([Price] = @Original_Price) AND ([PricePer1000] = @Original_PricePer1000) AND ([" +
                "SalesLineID] = @Original_SalesLineID) AND ((@IsNull_JobType = 1 AND [JobType] IS" +
                " NULL) OR ([JobType] = @Original_JobType)) AND ([TaxCode] = @Original_TaxCode) A" +
                "ND ((@IsNull_Nominal = 1 AND [Nominal] IS NULL) OR ([Nominal] = @Original_Nomina" +
                "l)) AND ((@IsNull_CostCentre = 1 AND [CostCentre] IS NULL) OR ([CostCentre] = @O" +
                "riginal_CostCentre)) AND ((@IsNull_Department = 1 AND [Department] IS NULL) OR (" +
                "[Department] = @Original_Department)) AND ([EstimateID] = @Original_EstimateID) " +
                "AND ((@IsNull_EstHeaderRef = 1 AND [EstHeaderRef] IS NULL) OR ([EstHeaderRef] = " +
                "@Original_EstHeaderRef)) AND ((@IsNull_Contact = 1 AND [Contact] IS NULL) OR ([C" +
                "ontact] = @Original_Contact)) AND ([Exclude] = @Original_Exclude) AND ([IsGanged" +
                "] = @Original_IsGanged) AND ([InvoiceToParent] = @Original_InvoiceToParent) AND " +
                "([Currency] = @Original_Currency) AND ([ForeignPrice] = @Original_ForeignPrice) " +
                "AND ([ForeignPricePer1000] = @Original_ForeignPricePer1000) AND ([ExchangeRate] " +
                "= @Original_ExchangeRate) AND ([Weight] = @Original_Weight) AND ((@IsNull_Invoic" +
                "eCustomerCode = 1 AND [InvoiceCustomerCode] IS NULL) OR ([InvoiceCustomerCode] =" +
                " @Original_InvoiceCustomerCode)) AND ((@IsNull_DateModified = 1 AND [DateModifie" +
                "d] IS NULL) OR ([DateModified] = @Original_DateModified)) AND ((@IsNull_Modified" +
                "ByUserID = 1 AND [ModifiedByUserID] IS NULL) OR ([ModifiedByUserID] = @Original_" +
                "ModifiedByUserID)) AND ((@IsNull_SalesJobNo = 1 AND [SalesJobNo] IS NULL) OR ([S" +
                "alesJobNo] = @Original_SalesJobNo)) AND ([BOMRevision] = @Original_BOMRevision) " +
                "AND ([SalesTaxCodeID] = @Original_SalesTaxCodeID) AND ([SalesTaxItemID] = @Origi" +
                "nal_SalesTaxItemID) AND ((@IsNull_BOMParentJobNo = 1 AND [BOMParentJobNo] IS NUL" +
                "L) OR ([BOMParentJobNo] = @Original_BOMParentJobNo)) AND ([CreatedStockType] = @" +
                "Original_CreatedStockType) AND ([IsAutoCreated] = @Original_IsAutoCreated) AND (" +
                "[EstVersionID] = @Original_EstVersionID));\r\nSELECT ID, JobNo, ProductCode, Produ" +
                "ctSize, ProductNumber, DeliveryCustomerCode, Description, QuantityOrdered, Quant" +
                "ityDelivered, QuantityInStock, QuantityInvoiced, QuantityProduced, Reference1, R" +
                "eference2, Price, PricePer1000, SalesLineID, JobType, TaxCode, Nominal, CostCent" +
                "re, Department, EstimateID, EstHeaderRef, Contact, Exclude, IsGanged, InvoiceToP" +
                "arent, Currency, ForeignPrice, ForeignPricePer1000, ExchangeRate, Weight, Invoic" +
                "eCustomerCode, DateModified, ModifiedByUserID, SalesJobNo, BOMRevision, SalesTax" +
                "CodeID, SalesTaxItemID, BOMParentJobNo, CreatedStockType, IsAutoCreated, EstVers" +
                "ionID FROM JobProducts WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCustomerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityOrdered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityOrdered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityDelivered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityDelivered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityInStock", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityInvoiced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityProduced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityProduced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reference1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reference2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PricePer1000", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricePer1000", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesLineID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaxCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstHeaderRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Exclude", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Exclude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsGanged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsGanged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceToParent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceToParent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Currency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Currency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignPricePer1000", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignPricePer1000", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCustomerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesJobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMParentJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMParentJobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedStockType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedStockType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAutoCreated", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstVersionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstVersionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryCustomerCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCustomerCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCustomerCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityOrdered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityOrdered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityDelivered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityDelivered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityInStock", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInStock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityInvoiced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInvoiced", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityProduced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityProduced", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reference1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reference1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reference2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reference2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reference2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PricePer1000", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricePer1000", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesLineID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JobType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TaxCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nominal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Department", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EstHeaderRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstHeaderRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstHeaderRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Contact", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Exclude", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Exclude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsGanged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsGanged", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceToParent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceToParent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Currency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Currency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignPricePer1000", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignPricePer1000", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExchangeRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceCustomerCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCustomerCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCustomerCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateModified", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SalesJobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesJobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesJobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BOMParentJobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMParentJobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOMParentJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMParentJobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedStockType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedStockType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsAutoCreated", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoCreated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstVersionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstVersionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PalletCard.Properties.Settings.Default.ThardataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, JobNo, ProductCode, ProductSize, ProductNumber, DeliveryCustomerCode, Description, QuantityOrdered, QuantityDelivered, QuantityInStock, QuantityInvoiced, QuantityProduced, Reference1, Reference2, Price, PricePer1000, SalesLineID, JobType, TaxCode, Nominal, CostCentre, Department, EstimateID, EstHeaderRef, Contact, Exclude, IsGanged, InvoiceToParent, Currency, ForeignPrice, ForeignPricePer1000, ExchangeRate, Weight, InvoiceCustomerCode, DateModified, ModifiedByUserID, SalesJobNo, BOMRevision, SalesTaxCodeID, SalesTaxItemID, BOMParentJobNo, CreatedStockType, IsAutoCreated, EstVersionID FROM dbo.JobProducts";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ThardataDataSet.JobProductsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ThardataDataSet.JobProductsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ThardataDataSet.JobProductsDataTable dataTable = new ThardataDataSet.JobProductsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet.JobProductsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "JobProducts");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    string Original_JobNo, 
                    string Original_ProductCode, 
                    string Original_ProductSize, 
                    int Original_ProductNumber, 
                    string Original_DeliveryCustomerCode, 
                    string Original_Description, 
                    double Original_QuantityOrdered, 
                    double Original_QuantityDelivered, 
                    double Original_QuantityInStock, 
                    double Original_QuantityInvoiced, 
                    double Original_QuantityProduced, 
                    string Original_Reference1, 
                    string Original_Reference2, 
                    double Original_Price, 
                    double Original_PricePer1000, 
                    int Original_SalesLineID, 
                    string Original_JobType, 
                    string Original_TaxCode, 
                    string Original_Nominal, 
                    string Original_CostCentre, 
                    string Original_Department, 
                    int Original_EstimateID, 
                    string Original_EstHeaderRef, 
                    string Original_Contact, 
                    bool Original_Exclude, 
                    bool Original_IsGanged, 
                    bool Original_InvoiceToParent, 
                    int Original_Currency, 
                    double Original_ForeignPrice, 
                    double Original_ForeignPricePer1000, 
                    double Original_ExchangeRate, 
                    double Original_Weight, 
                    string Original_InvoiceCustomerCode, 
                    global::System.Nullable<global::System.DateTime> Original_DateModified, 
                    global::System.Nullable<int> Original_ModifiedByUserID, 
                    string Original_SalesJobNo, 
                    int Original_BOMRevision, 
                    int Original_SalesTaxCodeID, 
                    int Original_SalesTaxItemID, 
                    string Original_BOMParentJobNo, 
                    byte Original_CreatedStockType, 
                    bool Original_IsAutoCreated, 
                    int Original_EstVersionID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_JobNo == null)) {
                throw new global::System.ArgumentNullException("Original_JobNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_JobNo));
            }
            if ((Original_ProductCode == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ProductCode));
            }
            if ((Original_ProductSize == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ProductSize));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ProductNumber));
            if ((Original_DeliveryCustomerCode == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DeliveryCustomerCode));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Description));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_QuantityOrdered));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_QuantityDelivered));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_QuantityInStock));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_QuantityInvoiced));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_QuantityProduced));
            if ((Original_Reference1 == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Reference1));
            }
            if ((Original_Reference2 == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Reference2));
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_Price));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_PricePer1000));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_SalesLineID));
            if ((Original_JobType == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_JobType));
            }
            if ((Original_TaxCode == null)) {
                throw new global::System.ArgumentNullException("Original_TaxCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_TaxCode));
            }
            if ((Original_Nominal == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_Nominal));
            }
            if ((Original_CostCentre == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_CostCentre));
            }
            if ((Original_Department == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_Department));
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_EstimateID));
            if ((Original_EstHeaderRef == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_EstHeaderRef));
            }
            if ((Original_Contact == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_Contact));
            }
            this.Adapter.DeleteCommand.Parameters[37].Value = ((bool)(Original_Exclude));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((bool)(Original_IsGanged));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((bool)(Original_InvoiceToParent));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_Currency));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((double)(Original_ForeignPrice));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((double)(Original_ForeignPricePer1000));
            this.Adapter.DeleteCommand.Parameters[43].Value = ((double)(Original_ExchangeRate));
            this.Adapter.DeleteCommand.Parameters[44].Value = ((double)(Original_Weight));
            if ((Original_InvoiceCustomerCode == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_InvoiceCustomerCode));
            }
            if ((Original_DateModified.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((System.DateTime)(Original_DateModified.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_ModifiedByUserID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((int)(Original_ModifiedByUserID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_SalesJobNo == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_SalesJobNo));
            }
            this.Adapter.DeleteCommand.Parameters[53].Value = ((int)(Original_BOMRevision));
            this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_SalesTaxCodeID));
            this.Adapter.DeleteCommand.Parameters[55].Value = ((int)(Original_SalesTaxItemID));
            if ((Original_BOMParentJobNo == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_BOMParentJobNo));
            }
            this.Adapter.DeleteCommand.Parameters[58].Value = ((byte)(Original_CreatedStockType));
            this.Adapter.DeleteCommand.Parameters[59].Value = ((bool)(Original_IsAutoCreated));
            this.Adapter.DeleteCommand.Parameters[60].Value = ((int)(Original_EstVersionID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string JobNo, 
                    string ProductCode, 
                    string ProductSize, 
                    int ProductNumber, 
                    string DeliveryCustomerCode, 
                    string Description, 
                    double QuantityOrdered, 
                    double QuantityDelivered, 
                    double QuantityInStock, 
                    double QuantityInvoiced, 
                    double QuantityProduced, 
                    string Reference1, 
                    string Reference2, 
                    double Price, 
                    double PricePer1000, 
                    int SalesLineID, 
                    string JobType, 
                    string TaxCode, 
                    string Nominal, 
                    string CostCentre, 
                    string Department, 
                    int EstimateID, 
                    string EstHeaderRef, 
                    string Contact, 
                    bool Exclude, 
                    bool IsGanged, 
                    bool InvoiceToParent, 
                    int Currency, 
                    double ForeignPrice, 
                    double ForeignPricePer1000, 
                    double ExchangeRate, 
                    double Weight, 
                    string InvoiceCustomerCode, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    string SalesJobNo, 
                    int BOMRevision, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    string BOMParentJobNo, 
                    byte CreatedStockType, 
                    bool IsAutoCreated, 
                    int EstVersionID) {
            if ((JobNo == null)) {
                throw new global::System.ArgumentNullException("JobNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(JobNo));
            }
            if ((ProductCode == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ProductCode));
            }
            if ((ProductSize == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ProductSize));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ProductNumber));
            if ((DeliveryCustomerCode == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DeliveryCustomerCode));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Description));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(QuantityOrdered));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(QuantityDelivered));
            this.Adapter.InsertCommand.Parameters[8].Value = ((double)(QuantityInStock));
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(QuantityInvoiced));
            this.Adapter.InsertCommand.Parameters[10].Value = ((double)(QuantityProduced));
            if ((Reference1 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Reference1));
            }
            if ((Reference2 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Reference2));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((double)(Price));
            this.Adapter.InsertCommand.Parameters[14].Value = ((double)(PricePer1000));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(SalesLineID));
            if ((JobType == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(JobType));
            }
            if ((TaxCode == null)) {
                throw new global::System.ArgumentNullException("TaxCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(TaxCode));
            }
            if ((Nominal == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Nominal));
            }
            if ((CostCentre == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(CostCentre));
            }
            if ((Department == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Department));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(EstimateID));
            if ((EstHeaderRef == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(EstHeaderRef));
            }
            if ((Contact == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Contact));
            }
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(Exclude));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(IsGanged));
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(InvoiceToParent));
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(Currency));
            this.Adapter.InsertCommand.Parameters[28].Value = ((double)(ForeignPrice));
            this.Adapter.InsertCommand.Parameters[29].Value = ((double)(ForeignPricePer1000));
            this.Adapter.InsertCommand.Parameters[30].Value = ((double)(ExchangeRate));
            this.Adapter.InsertCommand.Parameters[31].Value = ((double)(Weight));
            if ((InvoiceCustomerCode == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(InvoiceCustomerCode));
            }
            if ((DateModified.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((System.DateTime)(DateModified.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((ModifiedByUserID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(ModifiedByUserID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((SalesJobNo == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(SalesJobNo));
            }
            this.Adapter.InsertCommand.Parameters[36].Value = ((int)(BOMRevision));
            this.Adapter.InsertCommand.Parameters[37].Value = ((int)(SalesTaxCodeID));
            this.Adapter.InsertCommand.Parameters[38].Value = ((int)(SalesTaxItemID));
            if ((BOMParentJobNo == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(BOMParentJobNo));
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((byte)(CreatedStockType));
            this.Adapter.InsertCommand.Parameters[41].Value = ((bool)(IsAutoCreated));
            this.Adapter.InsertCommand.Parameters[42].Value = ((int)(EstVersionID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string JobNo, 
                    string ProductCode, 
                    string ProductSize, 
                    int ProductNumber, 
                    string DeliveryCustomerCode, 
                    string Description, 
                    double QuantityOrdered, 
                    double QuantityDelivered, 
                    double QuantityInStock, 
                    double QuantityInvoiced, 
                    double QuantityProduced, 
                    string Reference1, 
                    string Reference2, 
                    double Price, 
                    double PricePer1000, 
                    int SalesLineID, 
                    string JobType, 
                    string TaxCode, 
                    string Nominal, 
                    string CostCentre, 
                    string Department, 
                    int EstimateID, 
                    string EstHeaderRef, 
                    string Contact, 
                    bool Exclude, 
                    bool IsGanged, 
                    bool InvoiceToParent, 
                    int Currency, 
                    double ForeignPrice, 
                    double ForeignPricePer1000, 
                    double ExchangeRate, 
                    double Weight, 
                    string InvoiceCustomerCode, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    string SalesJobNo, 
                    int BOMRevision, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    string BOMParentJobNo, 
                    byte CreatedStockType, 
                    bool IsAutoCreated, 
                    int EstVersionID, 
                    int Original_ID, 
                    string Original_JobNo, 
                    string Original_ProductCode, 
                    string Original_ProductSize, 
                    int Original_ProductNumber, 
                    string Original_DeliveryCustomerCode, 
                    string Original_Description, 
                    double Original_QuantityOrdered, 
                    double Original_QuantityDelivered, 
                    double Original_QuantityInStock, 
                    double Original_QuantityInvoiced, 
                    double Original_QuantityProduced, 
                    string Original_Reference1, 
                    string Original_Reference2, 
                    double Original_Price, 
                    double Original_PricePer1000, 
                    int Original_SalesLineID, 
                    string Original_JobType, 
                    string Original_TaxCode, 
                    string Original_Nominal, 
                    string Original_CostCentre, 
                    string Original_Department, 
                    int Original_EstimateID, 
                    string Original_EstHeaderRef, 
                    string Original_Contact, 
                    bool Original_Exclude, 
                    bool Original_IsGanged, 
                    bool Original_InvoiceToParent, 
                    int Original_Currency, 
                    double Original_ForeignPrice, 
                    double Original_ForeignPricePer1000, 
                    double Original_ExchangeRate, 
                    double Original_Weight, 
                    string Original_InvoiceCustomerCode, 
                    global::System.Nullable<global::System.DateTime> Original_DateModified, 
                    global::System.Nullable<int> Original_ModifiedByUserID, 
                    string Original_SalesJobNo, 
                    int Original_BOMRevision, 
                    int Original_SalesTaxCodeID, 
                    int Original_SalesTaxItemID, 
                    string Original_BOMParentJobNo, 
                    byte Original_CreatedStockType, 
                    bool Original_IsAutoCreated, 
                    int Original_EstVersionID, 
                    int ID) {
            if ((JobNo == null)) {
                throw new global::System.ArgumentNullException("JobNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(JobNo));
            }
            if ((ProductCode == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ProductCode));
            }
            if ((ProductSize == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ProductSize));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ProductNumber));
            if ((DeliveryCustomerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DeliveryCustomerCode));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(QuantityOrdered));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(QuantityDelivered));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(QuantityInStock));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(QuantityInvoiced));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(QuantityProduced));
            if ((Reference1 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Reference1));
            }
            if ((Reference2 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Reference2));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Price));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(PricePer1000));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(SalesLineID));
            if ((JobType == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(JobType));
            }
            if ((TaxCode == null)) {
                throw new global::System.ArgumentNullException("TaxCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(TaxCode));
            }
            if ((Nominal == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Nominal));
            }
            if ((CostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(CostCentre));
            }
            if ((Department == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Department));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(EstimateID));
            if ((EstHeaderRef == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(EstHeaderRef));
            }
            if ((Contact == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Contact));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Exclude));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(IsGanged));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(InvoiceToParent));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Currency));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(ForeignPrice));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(ForeignPricePer1000));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(ExchangeRate));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Weight));
            if ((InvoiceCustomerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(InvoiceCustomerCode));
            }
            if ((DateModified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(DateModified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((ModifiedByUserID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(ModifiedByUserID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((SalesJobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(SalesJobNo));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(BOMRevision));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(SalesTaxCodeID));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(SalesTaxItemID));
            if ((BOMParentJobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(BOMParentJobNo));
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((byte)(CreatedStockType));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(IsAutoCreated));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(EstVersionID));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_ID));
            if ((Original_JobNo == null)) {
                throw new global::System.ArgumentNullException("Original_JobNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_JobNo));
            }
            if ((Original_ProductCode == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_ProductCode));
            }
            if ((Original_ProductSize == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_ProductSize));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_ProductNumber));
            if ((Original_DeliveryCustomerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_DeliveryCustomerCode));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_Description));
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(Original_QuantityOrdered));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(Original_QuantityDelivered));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(Original_QuantityInStock));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((double)(Original_QuantityInvoiced));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(Original_QuantityProduced));
            if ((Original_Reference1 == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_Reference1));
            }
            if ((Original_Reference2 == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_Reference2));
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(Original_Price));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((double)(Original_PricePer1000));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(Original_SalesLineID));
            if ((Original_JobType == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_JobType));
            }
            if ((Original_TaxCode == null)) {
                throw new global::System.ArgumentNullException("Original_TaxCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_TaxCode));
            }
            if ((Original_Nominal == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_Nominal));
            }
            if ((Original_CostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_CostCentre));
            }
            if ((Original_Department == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_Department));
            }
            this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_EstimateID));
            if ((Original_EstHeaderRef == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_EstHeaderRef));
            }
            if ((Original_Contact == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_Contact));
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((bool)(Original_Exclude));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((bool)(Original_IsGanged));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((bool)(Original_InvoiceToParent));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((int)(Original_Currency));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((double)(Original_ForeignPrice));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((double)(Original_ForeignPricePer1000));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((double)(Original_ExchangeRate));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((double)(Original_Weight));
            if ((Original_InvoiceCustomerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_InvoiceCustomerCode));
            }
            if ((Original_DateModified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((System.DateTime)(Original_DateModified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_ModifiedByUserID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(Original_ModifiedByUserID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_SalesJobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_SalesJobNo));
            }
            this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(Original_BOMRevision));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((int)(Original_SalesTaxCodeID));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((int)(Original_SalesTaxItemID));
            if ((Original_BOMParentJobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_BOMParentJobNo));
            }
            this.Adapter.UpdateCommand.Parameters[101].Value = ((byte)(Original_CreatedStockType));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((bool)(Original_IsAutoCreated));
            this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(Original_EstVersionID));
            this.Adapter.UpdateCommand.Parameters[104].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string JobNo, 
                    string ProductCode, 
                    string ProductSize, 
                    int ProductNumber, 
                    string DeliveryCustomerCode, 
                    string Description, 
                    double QuantityOrdered, 
                    double QuantityDelivered, 
                    double QuantityInStock, 
                    double QuantityInvoiced, 
                    double QuantityProduced, 
                    string Reference1, 
                    string Reference2, 
                    double Price, 
                    double PricePer1000, 
                    int SalesLineID, 
                    string JobType, 
                    string TaxCode, 
                    string Nominal, 
                    string CostCentre, 
                    string Department, 
                    int EstimateID, 
                    string EstHeaderRef, 
                    string Contact, 
                    bool Exclude, 
                    bool IsGanged, 
                    bool InvoiceToParent, 
                    int Currency, 
                    double ForeignPrice, 
                    double ForeignPricePer1000, 
                    double ExchangeRate, 
                    double Weight, 
                    string InvoiceCustomerCode, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    string SalesJobNo, 
                    int BOMRevision, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    string BOMParentJobNo, 
                    byte CreatedStockType, 
                    bool IsAutoCreated, 
                    int EstVersionID, 
                    int Original_ID, 
                    string Original_JobNo, 
                    string Original_ProductCode, 
                    string Original_ProductSize, 
                    int Original_ProductNumber, 
                    string Original_DeliveryCustomerCode, 
                    string Original_Description, 
                    double Original_QuantityOrdered, 
                    double Original_QuantityDelivered, 
                    double Original_QuantityInStock, 
                    double Original_QuantityInvoiced, 
                    double Original_QuantityProduced, 
                    string Original_Reference1, 
                    string Original_Reference2, 
                    double Original_Price, 
                    double Original_PricePer1000, 
                    int Original_SalesLineID, 
                    string Original_JobType, 
                    string Original_TaxCode, 
                    string Original_Nominal, 
                    string Original_CostCentre, 
                    string Original_Department, 
                    int Original_EstimateID, 
                    string Original_EstHeaderRef, 
                    string Original_Contact, 
                    bool Original_Exclude, 
                    bool Original_IsGanged, 
                    bool Original_InvoiceToParent, 
                    int Original_Currency, 
                    double Original_ForeignPrice, 
                    double Original_ForeignPricePer1000, 
                    double Original_ExchangeRate, 
                    double Original_Weight, 
                    string Original_InvoiceCustomerCode, 
                    global::System.Nullable<global::System.DateTime> Original_DateModified, 
                    global::System.Nullable<int> Original_ModifiedByUserID, 
                    string Original_SalesJobNo, 
                    int Original_BOMRevision, 
                    int Original_SalesTaxCodeID, 
                    int Original_SalesTaxItemID, 
                    string Original_BOMParentJobNo, 
                    byte Original_CreatedStockType, 
                    bool Original_IsAutoCreated, 
                    int Original_EstVersionID) {
            return this.Update(JobNo, ProductCode, ProductSize, ProductNumber, DeliveryCustomerCode, Description, QuantityOrdered, QuantityDelivered, QuantityInStock, QuantityInvoiced, QuantityProduced, Reference1, Reference2, Price, PricePer1000, SalesLineID, JobType, TaxCode, Nominal, CostCentre, Department, EstimateID, EstHeaderRef, Contact, Exclude, IsGanged, InvoiceToParent, Currency, ForeignPrice, ForeignPricePer1000, ExchangeRate, Weight, InvoiceCustomerCode, DateModified, ModifiedByUserID, SalesJobNo, BOMRevision, SalesTaxCodeID, SalesTaxItemID, BOMParentJobNo, CreatedStockType, IsAutoCreated, EstVersionID, Original_ID, Original_JobNo, Original_ProductCode, Original_ProductSize, Original_ProductNumber, Original_DeliveryCustomerCode, Original_Description, Original_QuantityOrdered, Original_QuantityDelivered, Original_QuantityInStock, Original_QuantityInvoiced, Original_QuantityProduced, Original_Reference1, Original_Reference2, Original_Price, Original_PricePer1000, Original_SalesLineID, Original_JobType, Original_TaxCode, Original_Nominal, Original_CostCentre, Original_Department, Original_EstimateID, Original_EstHeaderRef, Original_Contact, Original_Exclude, Original_IsGanged, Original_InvoiceToParent, Original_Currency, Original_ForeignPrice, Original_ForeignPricePer1000, Original_ExchangeRate, Original_Weight, Original_InvoiceCustomerCode, Original_DateModified, Original_ModifiedByUserID, Original_SalesJobNo, Original_BOMRevision, Original_SalesTaxCodeID, Original_SalesTaxItemID, Original_BOMParentJobNo, Original_CreatedStockType, Original_IsAutoCreated, Original_EstVersionID, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MainEstimateDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MainEstimateDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MainEstimateDetails";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("MethodOfWorking", "MethodOfWorking");
            tableMapping.ColumnMappings.Add("IsTemplate", "IsTemplate");
            tableMapping.ColumnMappings.Add("EstimateDate", "EstimateDate");
            tableMapping.ColumnMappings.Add("Required", "Required");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            tableMapping.ColumnMappings.Add("JobTypeDesc", "JobTypeDesc");
            tableMapping.ColumnMappings.Add("CustomerRef", "CustomerRef");
            tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
            tableMapping.ColumnMappings.Add("CustomerAddress", "CustomerAddress");
            tableMapping.ColumnMappings.Add("CustomerTown", "CustomerTown");
            tableMapping.ColumnMappings.Add("CustomerCounty", "CustomerCounty");
            tableMapping.ColumnMappings.Add("CustomerPostcode", "CustomerPostcode");
            tableMapping.ColumnMappings.Add("CustomerCountry", "CustomerCountry");
            tableMapping.ColumnMappings.Add("CustomerCountryOfOrigin", "CustomerCountryOfOrigin");
            tableMapping.ColumnMappings.Add("CustomerContact", "CustomerContact");
            tableMapping.ColumnMappings.Add("CustomerTel", "CustomerTel");
            tableMapping.ColumnMappings.Add("CustomerFax", "CustomerFax");
            tableMapping.ColumnMappings.Add("CustomerEmail", "CustomerEmail");
            tableMapping.ColumnMappings.Add("CustomerUplift", "CustomerUplift");
            tableMapping.ColumnMappings.Add("CustomerExchange", "CustomerExchange");
            tableMapping.ColumnMappings.Add("Ordered", "Ordered");
            tableMapping.ColumnMappings.Add("JobCreated", "JobCreated");
            tableMapping.ColumnMappings.Add("Ref1", "Ref1");
            tableMapping.ColumnMappings.Add("Ref2", "Ref2");
            tableMapping.ColumnMappings.Add("Ref3", "Ref3");
            tableMapping.ColumnMappings.Add("Ref4", "Ref4");
            tableMapping.ColumnMappings.Add("Ref5", "Ref5");
            tableMapping.ColumnMappings.Add("Ref6", "Ref6");
            tableMapping.ColumnMappings.Add("Ref7", "Ref7");
            tableMapping.ColumnMappings.Add("Ref8", "Ref8");
            tableMapping.ColumnMappings.Add("Ref9", "Ref9");
            tableMapping.ColumnMappings.Add("Ref10", "Ref10");
            tableMapping.ColumnMappings.Add("JobType", "JobType");
            tableMapping.ColumnMappings.Add("OrderExpense", "OrderExpense");
            tableMapping.ColumnMappings.Add("Estimator", "Estimator");
            tableMapping.ColumnMappings.Add("UpdateUserName", "UpdateUserName");
            tableMapping.ColumnMappings.Add("LastModified", "LastModified");
            tableMapping.ColumnMappings.Add("RunOnPer", "RunOnPer");
            tableMapping.ColumnMappings.Add("PaperSubTot", "PaperSubTot");
            tableMapping.ColumnMappings.Add("PaperMarkUpPercent", "PaperMarkUpPercent");
            tableMapping.ColumnMappings.Add("PaperMarkup", "PaperMarkup");
            tableMapping.ColumnMappings.Add("OriginMatSubTot", "OriginMatSubTot");
            tableMapping.ColumnMappings.Add("OriginMatMarkUpPercent", "OriginMatMarkUpPercent");
            tableMapping.ColumnMappings.Add("OriginMatMarkUp", "OriginMatMarkUp");
            tableMapping.ColumnMappings.Add("OriginLabSubTot", "OriginLabSubTot");
            tableMapping.ColumnMappings.Add("OriginLabMarkUpPercent", "OriginLabMarkUpPercent");
            tableMapping.ColumnMappings.Add("OriginLabMarkUp", "OriginLabMarkUp");
            tableMapping.ColumnMappings.Add("OriginLabLabSubTot", "OriginLabLabSubTot");
            tableMapping.ColumnMappings.Add("OutworkSubtot", "OutworkSubtot");
            tableMapping.ColumnMappings.Add("OutworkMarkUpPercent", "OutworkMarkUpPercent");
            tableMapping.ColumnMappings.Add("OutworkMarkUp", "OutworkMarkUp");
            tableMapping.ColumnMappings.Add("OtherMatSubTotal", "OtherMatSubTotal");
            tableMapping.ColumnMappings.Add("OtherMatMarkUpPercent", "OtherMatMarkUpPercent");
            tableMapping.ColumnMappings.Add("OtherMatMarkUp", "OtherMatMarkUp");
            tableMapping.ColumnMappings.Add("PrintingLabSubTotal", "PrintingLabSubTotal");
            tableMapping.ColumnMappings.Add("PrintingOHSubTotal", "PrintingOHSubTotal");
            tableMapping.ColumnMappings.Add("PrintingSubTotal", "PrintingSubTotal");
            tableMapping.ColumnMappings.Add("PrintingMarkUpPercent", "PrintingMarkUpPercent");
            tableMapping.ColumnMappings.Add("PrintingMarkUp", "PrintingMarkUp");
            tableMapping.ColumnMappings.Add("FinishingLabSubTotal", "FinishingLabSubTotal");
            tableMapping.ColumnMappings.Add("FinishingOHSubTotal", "FinishingOHSubTotal");
            tableMapping.ColumnMappings.Add("FinishingSubTotal", "FinishingSubTotal");
            tableMapping.ColumnMappings.Add("FinishingMarkUpPercent", "FinishingMarkUpPercent");
            tableMapping.ColumnMappings.Add("FinishingMarkUp", "FinishingMarkUp");
            tableMapping.ColumnMappings.Add("CarriageSubTotal", "CarriageSubTotal");
            tableMapping.ColumnMappings.Add("CarriageMarkUpPercent", "CarriageMarkUpPercent");
            tableMapping.ColumnMappings.Add("CarriageMarkUp", "CarriageMarkUp");
            tableMapping.ColumnMappings.Add("TotalSubTotal", "TotalSubTotal");
            tableMapping.ColumnMappings.Add("TotalMarkUpPercent", "TotalMarkUpPercent");
            tableMapping.ColumnMappings.Add("TotalMarkUp", "TotalMarkUp");
            tableMapping.ColumnMappings.Add("TotalTotal", "TotalTotal");
            tableMapping.ColumnMappings.Add("ExchangeCurrency", "ExchangeCurrency");
            tableMapping.ColumnMappings.Add("ExchangeRate", "ExchangeRate");
            tableMapping.ColumnMappings.Add("ForeignTotal", "ForeignTotal");
            tableMapping.ColumnMappings.Add("RunOnValue", "RunOnValue");
            tableMapping.ColumnMappings.Add("JobDescription", "JobDescription");
            tableMapping.ColumnMappings.Add("NoOfJobDescLines", "NoOfJobDescLines");
            tableMapping.ColumnMappings.Add("PaperRunOn", "PaperRunOn");
            tableMapping.ColumnMappings.Add("OriginMatRunOn", "OriginMatRunOn");
            tableMapping.ColumnMappings.Add("OriginLabRunOn", "OriginLabRunOn");
            tableMapping.ColumnMappings.Add("OutworkRunOn", "OutworkRunOn");
            tableMapping.ColumnMappings.Add("OtherMatRunOn", "OtherMatRunOn");
            tableMapping.ColumnMappings.Add("PrintingRunOn", "PrintingRunOn");
            tableMapping.ColumnMappings.Add("FinishingRunOn", "FinishingRunOn");
            tableMapping.ColumnMappings.Add("CarriageRunOn", "CarriageRunOn");
            tableMapping.ColumnMappings.Add("EstimateHeaderRef", "EstimateHeaderRef");
            tableMapping.ColumnMappings.Add("UseManualCarriage", "UseManualCarriage");
            tableMapping.ColumnMappings.Add("WorkingLevel", "WorkingLevel");
            tableMapping.ColumnMappings.Add("AgencyComPerc", "AgencyComPerc");
            tableMapping.ColumnMappings.Add("AgencyComValue", "AgencyComValue");
            tableMapping.ColumnMappings.Add("IsRevision", "IsRevision");
            tableMapping.ColumnMappings.Add("RevisedFromID", "RevisedFromID");
            tableMapping.ColumnMappings.Add("RFQStatus", "RFQStatus");
            tableMapping.ColumnMappings.Add("RFQID", "RFQID");
            tableMapping.ColumnMappings.Add("DeliveryRef", "DeliveryRef");
            tableMapping.ColumnMappings.Add("DeliveryContact", "DeliveryContact");
            tableMapping.ColumnMappings.Add("SalutationName", "SalutationName");
            tableMapping.ColumnMappings.Add("ComponentMarkupPerc", "ComponentMarkupPerc");
            tableMapping.ColumnMappings.Add("OtherTotal", "OtherTotal");
            tableMapping.ColumnMappings.Add("PricePerRunOnLocked", "PricePerRunOnLocked");
            tableMapping.ColumnMappings.Add("PricePerRunOn", "PricePerRunOn");
            tableMapping.ColumnMappings.Add("ForeignPricePerRunOn", "ForeignPricePerRunOn");
            tableMapping.ColumnMappings.Add("PricingUnits", "PricingUnits");
            tableMapping.ColumnMappings.Add("EstRefNum", "EstRefNum");
            tableMapping.ColumnMappings.Add("RunOnLocked", "RunOnLocked");
            tableMapping.ColumnMappings.Add("CurrencyValueLocked", "CurrencyValueLocked");
            tableMapping.ColumnMappings.Add("SellingPriceBandID", "SellingPriceBandID");
            tableMapping.ColumnMappings.Add("LockedCurrencyID", "LockedCurrencyID");
            tableMapping.ColumnMappings.Add("LockedForeignTotal", "LockedForeignTotal");
            tableMapping.ColumnMappings.Add("IsCompositeEst", "IsCompositeEst");
            tableMapping.ColumnMappings.Add("ComponentTotal", "ComponentTotal");
            tableMapping.ColumnMappings.Add("CustomerAgencyCommPerc", "CustomerAgencyCommPerc");
            tableMapping.ColumnMappings.Add("OtherTotalNonRounded", "OtherTotalNonRounded");
            tableMapping.ColumnMappings.Add("EstDescriptionTemplateID", "EstDescriptionTemplateID");
            tableMapping.ColumnMappings.Add("EstDescriptionTemplateName", "EstDescriptionTemplateName");
            tableMapping.ColumnMappings.Add("ExcPaperFromCompPriceMatrix", "ExcPaperFromCompPriceMatrix");
            tableMapping.ColumnMappings.Add("ExcOrigMFromCompPriceMatrix", "ExcOrigMFromCompPriceMatrix");
            tableMapping.ColumnMappings.Add("ExcOrigLFromCompPriceMatrix", "ExcOrigLFromCompPriceMatrix");
            tableMapping.ColumnMappings.Add("ExcOthermFromCompPriceMatrix", "ExcOthermFromCompPriceMatrix");
            tableMapping.ColumnMappings.Add("ExcOutworkFromCompPriceMatrix", "ExcOutworkFromCompPriceMatrix");
            tableMapping.ColumnMappings.Add("ExcPrintingFromCompPriceMatrix", "ExcPrintingFromCompPriceMatrix");
            tableMapping.ColumnMappings.Add("ExcFinishingFromCompPriceMatrix", "ExcFinishingFromCompPriceMatrix");
            tableMapping.ColumnMappings.Add("IsFreeTypeCustomer", "IsFreeTypeCustomer");
            tableMapping.ColumnMappings.Add("KeepFinishedSize", "KeepFinishedSize");
            tableMapping.ColumnMappings.Add("CreatedDateTime", "CreatedDateTime");
            tableMapping.ColumnMappings.Add("TaxCode", "TaxCode");
            tableMapping.ColumnMappings.Add("CourierServiceID", "CourierServiceID");
            tableMapping.ColumnMappings.Add("Courier", "Courier");
            tableMapping.ColumnMappings.Add("Published", "Published");
            tableMapping.ColumnMappings.Add("UseRounding", "UseRounding");
            tableMapping.ColumnMappings.Add("QuantityPerPaperLine", "QuantityPerPaperLine");
            tableMapping.ColumnMappings.Add("CampaignNo", "CampaignNo");
            tableMapping.ColumnMappings.Add("CompanyID", "CompanyID");
            tableMapping.ColumnMappings.Add("CreateSubJob", "CreateSubJob");
            tableMapping.ColumnMappings.Add("DisplayComponentOnInput", "DisplayComponentOnInput");
            tableMapping.ColumnMappings.Add("ComponentAgencyComValue", "ComponentAgencyComValue");
            tableMapping.ColumnMappings.Add("UseAgencyUndersandOvers", "UseAgencyUndersandOvers");
            tableMapping.ColumnMappings.Add("Version", "Version");
            tableMapping.ColumnMappings.Add("SecurityGroupID", "SecurityGroupID");
            tableMapping.ColumnMappings.Add("OpRecID", "OpRecID");
            tableMapping.ColumnMappings.Add("FSRecID", "FSRecID");
            tableMapping.ColumnMappings.Add("GMLink", "GMLink");
            tableMapping.ColumnMappings.Add("ExcludedCost", "ExcludedCost");
            tableMapping.ColumnMappings.Add("StatusRef", "StatusRef");
            tableMapping.ColumnMappings.Add("EstRequestProductID", "EstRequestProductID");
            tableMapping.ColumnMappings.Add("UserLimitsApplied", "UserLimitsApplied");
            tableMapping.ColumnMappings.Add("InUse", "InUse");
            tableMapping.ColumnMappings.Add("LockDate", "LockDate");
            tableMapping.ColumnMappings.Add("dbTimeStamp", "dbTimeStamp");
            tableMapping.ColumnMappings.Add("MarkupExclusionsSubTotal", "MarkupExclusionsSubTotal");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MainEstimateDetails] WHERE (([ID] = @Original_ID) AND ([dbTime" +
                "Stamp] = @Original_dbTimeStamp))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dbTimeStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbTimeStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MainEstimateDetails] ([MethodOfWorking], [IsTemplate], [Estima" +
                "teDate], [Required], [Quantity], [Weight], [JobTypeDesc], [CustomerRef], [Custom" +
                "erName], [CustomerAddress], [CustomerTown], [CustomerCounty], [CustomerPostcode]" +
                ", [CustomerCountry], [CustomerCountryOfOrigin], [CustomerContact], [CustomerTel]" +
                ", [CustomerFax], [CustomerEmail], [CustomerUplift], [CustomerExchange], [Ordered" +
                "], [JobCreated], [Ref1], [Ref2], [Ref3], [Ref4], [Ref5], [Ref6], [Ref7], [Ref8]," +
                " [Ref9], [Ref10], [JobType], [OrderExpense], [Estimator], [UpdateUserName], [Las" +
                "tModified], [RunOnPer], [PaperSubTot], [PaperMarkUpPercent], [PaperMarkup], [Ori" +
                "ginMatSubTot], [OriginMatMarkUpPercent], [OriginMatMarkUp], [OriginLabSubTot], [" +
                "OriginLabMarkUpPercent], [OriginLabMarkUp], [OriginLabLabSubTot], [OutworkSubtot" +
                "], [OutworkMarkUpPercent], [OutworkMarkUp], [OtherMatSubTotal], [OtherMatMarkUpP" +
                "ercent], [OtherMatMarkUp], [PrintingLabSubTotal], [PrintingOHSubTotal], [Printin" +
                "gSubTotal], [PrintingMarkUpPercent], [PrintingMarkUp], [FinishingLabSubTotal], [" +
                "FinishingOHSubTotal], [FinishingSubTotal], [FinishingMarkUpPercent], [FinishingM" +
                "arkUp], [CarriageSubTotal], [CarriageMarkUpPercent], [CarriageMarkUp], [TotalSub" +
                "Total], [TotalMarkUpPercent], [TotalMarkUp], [TotalTotal], [ExchangeCurrency], [" +
                "ExchangeRate], [ForeignTotal], [RunOnValue], [JobDescription], [NoOfJobDescLines" +
                "], [PaperRunOn], [OriginMatRunOn], [OriginLabRunOn], [OutworkRunOn], [OtherMatRu" +
                "nOn], [PrintingRunOn], [FinishingRunOn], [CarriageRunOn], [EstimateHeaderRef], [" +
                "UseManualCarriage], [WorkingLevel], [AgencyComPerc], [AgencyComValue], [IsRevisi" +
                "on], [RevisedFromID], [RFQStatus], [RFQID], [DeliveryRef], [DeliveryContact], [S" +
                "alutationName], [ComponentMarkupPerc], [OtherTotal], [PricePerRunOnLocked], [Pri" +
                "cePerRunOn], [ForeignPricePerRunOn], [PricingUnits], [EstRefNum], [RunOnLocked]," +
                " [CurrencyValueLocked], [SellingPriceBandID], [LockedCurrencyID], [LockedForeign" +
                "Total], [IsCompositeEst], [ComponentTotal], [CustomerAgencyCommPerc], [OtherTota" +
                "lNonRounded], [EstDescriptionTemplateID], [EstDescriptionTemplateName], [ExcPape" +
                "rFromCompPriceMatrix], [ExcOrigMFromCompPriceMatrix], [ExcOrigLFromCompPriceMatr" +
                "ix], [ExcOthermFromCompPriceMatrix], [ExcOutworkFromCompPriceMatrix], [ExcPrinti" +
                "ngFromCompPriceMatrix], [ExcFinishingFromCompPriceMatrix], [IsFreeTypeCustomer]," +
                " [KeepFinishedSize], [CreatedDateTime], [TaxCode], [CourierServiceID], [Courier]" +
                ", [Published], [UseRounding], [QuantityPerPaperLine], [CampaignNo], [CompanyID]," +
                " [CreateSubJob], [DisplayComponentOnInput], [ComponentAgencyComValue], [UseAgenc" +
                "yUndersandOvers], [Version], [SecurityGroupID], [OpRecID], [FSRecID], [GMLink], " +
                "[ExcludedCost], [StatusRef], [EstRequestProductID], [UserLimitsApplied], [InUse]" +
                ", [LockDate], [MarkupExclusionsSubTotal]) VALUES (@MethodOfWorking, @IsTemplate," +
                " @EstimateDate, @Required, @Quantity, @Weight, @JobTypeDesc, @CustomerRef, @Cust" +
                "omerName, @CustomerAddress, @CustomerTown, @CustomerCounty, @CustomerPostcode, @" +
                "CustomerCountry, @CustomerCountryOfOrigin, @CustomerContact, @CustomerTel, @Cust" +
                "omerFax, @CustomerEmail, @CustomerUplift, @CustomerExchange, @Ordered, @JobCreat" +
                "ed, @Ref1, @Ref2, @Ref3, @Ref4, @Ref5, @Ref6, @Ref7, @Ref8, @Ref9, @Ref10, @JobT" +
                "ype, @OrderExpense, @Estimator, @UpdateUserName, @LastModified, @RunOnPer, @Pape" +
                "rSubTot, @PaperMarkUpPercent, @PaperMarkup, @OriginMatSubTot, @OriginMatMarkUpPe" +
                "rcent, @OriginMatMarkUp, @OriginLabSubTot, @OriginLabMarkUpPercent, @OriginLabMa" +
                "rkUp, @OriginLabLabSubTot, @OutworkSubtot, @OutworkMarkUpPercent, @OutworkMarkUp" +
                ", @OtherMatSubTotal, @OtherMatMarkUpPercent, @OtherMatMarkUp, @PrintingLabSubTot" +
                "al, @PrintingOHSubTotal, @PrintingSubTotal, @PrintingMarkUpPercent, @PrintingMar" +
                "kUp, @FinishingLabSubTotal, @FinishingOHSubTotal, @FinishingSubTotal, @Finishing" +
                "MarkUpPercent, @FinishingMarkUp, @CarriageSubTotal, @CarriageMarkUpPercent, @Car" +
                "riageMarkUp, @TotalSubTotal, @TotalMarkUpPercent, @TotalMarkUp, @TotalTotal, @Ex" +
                "changeCurrency, @ExchangeRate, @ForeignTotal, @RunOnValue, @JobDescription, @NoO" +
                "fJobDescLines, @PaperRunOn, @OriginMatRunOn, @OriginLabRunOn, @OutworkRunOn, @Ot" +
                "herMatRunOn, @PrintingRunOn, @FinishingRunOn, @CarriageRunOn, @EstimateHeaderRef" +
                ", @UseManualCarriage, @WorkingLevel, @AgencyComPerc, @AgencyComValue, @IsRevisio" +
                "n, @RevisedFromID, @RFQStatus, @RFQID, @DeliveryRef, @DeliveryContact, @Salutati" +
                "onName, @ComponentMarkupPerc, @OtherTotal, @PricePerRunOnLocked, @PricePerRunOn," +
                " @ForeignPricePerRunOn, @PricingUnits, @EstRefNum, @RunOnLocked, @CurrencyValueL" +
                "ocked, @SellingPriceBandID, @LockedCurrencyID, @LockedForeignTotal, @IsComposite" +
                "Est, @ComponentTotal, @CustomerAgencyCommPerc, @OtherTotalNonRounded, @EstDescri" +
                "ptionTemplateID, @EstDescriptionTemplateName, @ExcPaperFromCompPriceMatrix, @Exc" +
                "OrigMFromCompPriceMatrix, @ExcOrigLFromCompPriceMatrix, @ExcOthermFromCompPriceM" +
                "atrix, @ExcOutworkFromCompPriceMatrix, @ExcPrintingFromCompPriceMatrix, @ExcFini" +
                "shingFromCompPriceMatrix, @IsFreeTypeCustomer, @KeepFinishedSize, @CreatedDateTi" +
                "me, @TaxCode, @CourierServiceID, @Courier, @Published, @UseRounding, @QuantityPe" +
                "rPaperLine, @CampaignNo, @CompanyID, @CreateSubJob, @DisplayComponentOnInput, @C" +
                "omponentAgencyComValue, @UseAgencyUndersandOvers, @Version, @SecurityGroupID, @O" +
                "pRecID, @FSRecID, @GMLink, @ExcludedCost, @StatusRef, @EstRequestProductID, @Use" +
                "rLimitsApplied, @InUse, @LockDate, @MarkupExclusionsSubTotal);\r\nSELECT ID, Metho" +
                "dOfWorking, IsTemplate, EstimateDate, Required, Quantity, Weight, JobTypeDesc, C" +
                "ustomerRef, CustomerName, CustomerAddress, CustomerTown, CustomerCounty, Custome" +
                "rPostcode, CustomerCountry, CustomerCountryOfOrigin, CustomerContact, CustomerTe" +
                "l, CustomerFax, CustomerEmail, CustomerUplift, CustomerExchange, Ordered, JobCre" +
                "ated, Ref1, Ref2, Ref3, Ref4, Ref5, Ref6, Ref7, Ref8, Ref9, Ref10, JobType, Orde" +
                "rExpense, Estimator, UpdateUserName, LastModified, RunOnPer, PaperSubTot, PaperM" +
                "arkUpPercent, PaperMarkup, OriginMatSubTot, OriginMatMarkUpPercent, OriginMatMar" +
                "kUp, OriginLabSubTot, OriginLabMarkUpPercent, OriginLabMarkUp, OriginLabLabSubTo" +
                "t, OutworkSubtot, OutworkMarkUpPercent, OutworkMarkUp, OtherMatSubTotal, OtherMa" +
                "tMarkUpPercent, OtherMatMarkUp, PrintingLabSubTotal, PrintingOHSubTotal, Printin" +
                "gSubTotal, PrintingMarkUpPercent, PrintingMarkUp, FinishingLabSubTotal, Finishin" +
                "gOHSubTotal, FinishingSubTotal, FinishingMarkUpPercent, FinishingMarkUp, Carriag" +
                "eSubTotal, CarriageMarkUpPercent, CarriageMarkUp, TotalSubTotal, TotalMarkUpPerc" +
                "ent, TotalMarkUp, TotalTotal, ExchangeCurrency, ExchangeRate, ForeignTotal, RunO" +
                "nValue, JobDescription, NoOfJobDescLines, PaperRunOn, OriginMatRunOn, OriginLabR" +
                "unOn, OutworkRunOn, OtherMatRunOn, PrintingRunOn, FinishingRunOn, CarriageRunOn," +
                " EstimateHeaderRef, UseManualCarriage, WorkingLevel, AgencyComPerc, AgencyComVal" +
                "ue, IsRevision, RevisedFromID, RFQStatus, RFQID, DeliveryRef, DeliveryContact, S" +
                "alutationName, ComponentMarkupPerc, OtherTotal, PricePerRunOnLocked, PricePerRun" +
                "On, ForeignPricePerRunOn, PricingUnits, EstRefNum, RunOnLocked, CurrencyValueLoc" +
                "ked, SellingPriceBandID, LockedCurrencyID, LockedForeignTotal, IsCompositeEst, C" +
                "omponentTotal, CustomerAgencyCommPerc, OtherTotalNonRounded, EstDescriptionTempl" +
                "ateID, EstDescriptionTemplateName, ExcPaperFromCompPriceMatrix, ExcOrigMFromComp" +
                "PriceMatrix, ExcOrigLFromCompPriceMatrix, ExcOthermFromCompPriceMatrix, ExcOutwo" +
                "rkFromCompPriceMatrix, ExcPrintingFromCompPriceMatrix, ExcFinishingFromCompPrice" +
                "Matrix, IsFreeTypeCustomer, KeepFinishedSize, CreatedDateTime, TaxCode, CourierS" +
                "erviceID, Courier, Published, UseRounding, QuantityPerPaperLine, CampaignNo, Com" +
                "panyID, CreateSubJob, DisplayComponentOnInput, ComponentAgencyComValue, UseAgenc" +
                "yUndersandOvers, Version, SecurityGroupID, OpRecID, FSRecID, GMLink, ExcludedCos" +
                "t, StatusRef, EstRequestProductID, UserLimitsApplied, InUse, LockDate, dbTimeSta" +
                "mp, MarkupExclusionsSubTotal FROM MainEstimateDetails WHERE (ID = SCOPE_IDENTITY" +
                "())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethodOfWorking", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodOfWorking", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsTemplate", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTemplate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Required", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTypeDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTypeDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerTown", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerTown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerCounty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerCounty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerPostcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerPostcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerCountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerCountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerContact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerTel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerTel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerFax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerUplift", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerUplift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerExchange", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerExchange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ordered", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ordered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCreated", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderExpense", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderExpense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estimator", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estimator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RunOnPer", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOnPer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaperSubTot", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperSubTot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaperMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaperMarkup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperMarkup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginMatSubTot", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginMatSubTot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginMatMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginMatMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginMatMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginMatMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginLabSubTot", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginLabSubTot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginLabMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginLabMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginLabMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginLabMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginLabLabSubTot", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginLabLabSubTot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutworkSubtot", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutworkSubtot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutworkMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutworkMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutworkMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutworkMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherMatSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherMatSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherMatMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherMatMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherMatMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherMatMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingLabSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingLabSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingOHSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingOHSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingLabSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingLabSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingOHSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingOHSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RunOnValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOnValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoOfJobDescLines", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfJobDescLines", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaperRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginMatRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginMatRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginLabRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginLabRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutworkRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutworkRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherMatRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherMatRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateHeaderRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseManualCarriage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseManualCarriage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkingLevel", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgencyComPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgencyComPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgencyComValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgencyComValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsRevision", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRevision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RevisedFromID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RevisedFromID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RFQStatus", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFQStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RFQID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFQID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryContact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalutationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalutationName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComponentMarkupPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentMarkupPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PricePerRunOnLocked", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricePerRunOnLocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PricePerRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricePerRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignPricePerRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignPricePerRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PricingUnits", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricingUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstRefNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstRefNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RunOnLocked", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOnLocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrencyValueLocked", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrencyValueLocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingPriceBandID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPriceBandID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LockedCurrencyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockedCurrencyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LockedForeignTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockedForeignTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCompositeEst", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCompositeEst", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComponentTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerAgencyCommPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAgencyCommPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTotalNonRounded", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTotalNonRounded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstDescriptionTemplateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstDescriptionTemplateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstDescriptionTemplateName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstDescriptionTemplateName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcPaperFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcPaperFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcOrigMFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcOrigMFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcOrigLFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcOrigLFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcOthermFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcOthermFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcOutworkFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcOutworkFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcPrintingFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcPrintingFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcFinishingFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcFinishingFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsFreeTypeCustomer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFreeTypeCustomer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KeepFinishedSize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeepFinishedSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaxCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CourierServiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CourierServiceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Courier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Courier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Published", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Published", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseRounding", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseRounding", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityPerPaperLine", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityPerPaperLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CampaignNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CampaignNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateSubJob", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateSubJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DisplayComponentOnInput", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisplayComponentOnInput", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComponentAgencyComValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentAgencyComValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseAgencyUndersandOvers", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseAgencyUndersandOvers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Version", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Version", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OpRecID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OpRecID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FSRecID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FSRecID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMLink", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GMLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcludedCost", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcludedCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StatusRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StatusRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstRequestProductID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstRequestProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserLimitsApplied", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLimitsApplied", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InUse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InUse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LockDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarkupExclusionsSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkupExclusionsSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MainEstimateDetails] SET [MethodOfWorking] = @MethodOfWorking, [IsT" +
                "emplate] = @IsTemplate, [EstimateDate] = @EstimateDate, [Required] = @Required, " +
                "[Quantity] = @Quantity, [Weight] = @Weight, [JobTypeDesc] = @JobTypeDesc, [Custo" +
                "merRef] = @CustomerRef, [CustomerName] = @CustomerName, [CustomerAddress] = @Cus" +
                "tomerAddress, [CustomerTown] = @CustomerTown, [CustomerCounty] = @CustomerCounty" +
                ", [CustomerPostcode] = @CustomerPostcode, [CustomerCountry] = @CustomerCountry, " +
                "[CustomerCountryOfOrigin] = @CustomerCountryOfOrigin, [CustomerContact] = @Custo" +
                "merContact, [CustomerTel] = @CustomerTel, [CustomerFax] = @CustomerFax, [Custome" +
                "rEmail] = @CustomerEmail, [CustomerUplift] = @CustomerUplift, [CustomerExchange]" +
                " = @CustomerExchange, [Ordered] = @Ordered, [JobCreated] = @JobCreated, [Ref1] =" +
                " @Ref1, [Ref2] = @Ref2, [Ref3] = @Ref3, [Ref4] = @Ref4, [Ref5] = @Ref5, [Ref6] =" +
                " @Ref6, [Ref7] = @Ref7, [Ref8] = @Ref8, [Ref9] = @Ref9, [Ref10] = @Ref10, [JobTy" +
                "pe] = @JobType, [OrderExpense] = @OrderExpense, [Estimator] = @Estimator, [Updat" +
                "eUserName] = @UpdateUserName, [LastModified] = @LastModified, [RunOnPer] = @RunO" +
                "nPer, [PaperSubTot] = @PaperSubTot, [PaperMarkUpPercent] = @PaperMarkUpPercent, " +
                "[PaperMarkup] = @PaperMarkup, [OriginMatSubTot] = @OriginMatSubTot, [OriginMatMa" +
                "rkUpPercent] = @OriginMatMarkUpPercent, [OriginMatMarkUp] = @OriginMatMarkUp, [O" +
                "riginLabSubTot] = @OriginLabSubTot, [OriginLabMarkUpPercent] = @OriginLabMarkUpP" +
                "ercent, [OriginLabMarkUp] = @OriginLabMarkUp, [OriginLabLabSubTot] = @OriginLabL" +
                "abSubTot, [OutworkSubtot] = @OutworkSubtot, [OutworkMarkUpPercent] = @OutworkMar" +
                "kUpPercent, [OutworkMarkUp] = @OutworkMarkUp, [OtherMatSubTotal] = @OtherMatSubT" +
                "otal, [OtherMatMarkUpPercent] = @OtherMatMarkUpPercent, [OtherMatMarkUp] = @Othe" +
                "rMatMarkUp, [PrintingLabSubTotal] = @PrintingLabSubTotal, [PrintingOHSubTotal] =" +
                " @PrintingOHSubTotal, [PrintingSubTotal] = @PrintingSubTotal, [PrintingMarkUpPer" +
                "cent] = @PrintingMarkUpPercent, [PrintingMarkUp] = @PrintingMarkUp, [FinishingLa" +
                "bSubTotal] = @FinishingLabSubTotal, [FinishingOHSubTotal] = @FinishingOHSubTotal" +
                ", [FinishingSubTotal] = @FinishingSubTotal, [FinishingMarkUpPercent] = @Finishin" +
                "gMarkUpPercent, [FinishingMarkUp] = @FinishingMarkUp, [CarriageSubTotal] = @Carr" +
                "iageSubTotal, [CarriageMarkUpPercent] = @CarriageMarkUpPercent, [CarriageMarkUp]" +
                " = @CarriageMarkUp, [TotalSubTotal] = @TotalSubTotal, [TotalMarkUpPercent] = @To" +
                "talMarkUpPercent, [TotalMarkUp] = @TotalMarkUp, [TotalTotal] = @TotalTotal, [Exc" +
                "hangeCurrency] = @ExchangeCurrency, [ExchangeRate] = @ExchangeRate, [ForeignTota" +
                "l] = @ForeignTotal, [RunOnValue] = @RunOnValue, [JobDescription] = @JobDescripti" +
                "on, [NoOfJobDescLines] = @NoOfJobDescLines, [PaperRunOn] = @PaperRunOn, [OriginM" +
                "atRunOn] = @OriginMatRunOn, [OriginLabRunOn] = @OriginLabRunOn, [OutworkRunOn] =" +
                " @OutworkRunOn, [OtherMatRunOn] = @OtherMatRunOn, [PrintingRunOn] = @PrintingRun" +
                "On, [FinishingRunOn] = @FinishingRunOn, [CarriageRunOn] = @CarriageRunOn, [Estim" +
                "ateHeaderRef] = @EstimateHeaderRef, [UseManualCarriage] = @UseManualCarriage, [W" +
                "orkingLevel] = @WorkingLevel, [AgencyComPerc] = @AgencyComPerc, [AgencyComValue]" +
                " = @AgencyComValue, [IsRevision] = @IsRevision, [RevisedFromID] = @RevisedFromID" +
                ", [RFQStatus] = @RFQStatus, [RFQID] = @RFQID, [DeliveryRef] = @DeliveryRef, [Del" +
                "iveryContact] = @DeliveryContact, [SalutationName] = @SalutationName, [Component" +
                "MarkupPerc] = @ComponentMarkupPerc, [OtherTotal] = @OtherTotal, [PricePerRunOnLo" +
                "cked] = @PricePerRunOnLocked, [PricePerRunOn] = @PricePerRunOn, [ForeignPricePer" +
                "RunOn] = @ForeignPricePerRunOn, [PricingUnits] = @PricingUnits, [EstRefNum] = @E" +
                "stRefNum, [RunOnLocked] = @RunOnLocked, [CurrencyValueLocked] = @CurrencyValueLo" +
                "cked, [SellingPriceBandID] = @SellingPriceBandID, [LockedCurrencyID] = @LockedCu" +
                "rrencyID, [LockedForeignTotal] = @LockedForeignTotal, [IsCompositeEst] = @IsComp" +
                "ositeEst, [ComponentTotal] = @ComponentTotal, [CustomerAgencyCommPerc] = @Custom" +
                "erAgencyCommPerc, [OtherTotalNonRounded] = @OtherTotalNonRounded, [EstDescriptio" +
                "nTemplateID] = @EstDescriptionTemplateID, [EstDescriptionTemplateName] = @EstDes" +
                "criptionTemplateName, [ExcPaperFromCompPriceMatrix] = @ExcPaperFromCompPriceMatr" +
                "ix, [ExcOrigMFromCompPriceMatrix] = @ExcOrigMFromCompPriceMatrix, [ExcOrigLFromC" +
                "ompPriceMatrix] = @ExcOrigLFromCompPriceMatrix, [ExcOthermFromCompPriceMatrix] =" +
                " @ExcOthermFromCompPriceMatrix, [ExcOutworkFromCompPriceMatrix] = @ExcOutworkFro" +
                "mCompPriceMatrix, [ExcPrintingFromCompPriceMatrix] = @ExcPrintingFromCompPriceMa" +
                "trix, [ExcFinishingFromCompPriceMatrix] = @ExcFinishingFromCompPriceMatrix, [IsF" +
                "reeTypeCustomer] = @IsFreeTypeCustomer, [KeepFinishedSize] = @KeepFinishedSize, " +
                "[CreatedDateTime] = @CreatedDateTime, [TaxCode] = @TaxCode, [CourierServiceID] =" +
                " @CourierServiceID, [Courier] = @Courier, [Published] = @Published, [UseRounding" +
                "] = @UseRounding, [QuantityPerPaperLine] = @QuantityPerPaperLine, [CampaignNo] =" +
                " @CampaignNo, [CompanyID] = @CompanyID, [CreateSubJob] = @CreateSubJob, [Display" +
                "ComponentOnInput] = @DisplayComponentOnInput, [ComponentAgencyComValue] = @Compo" +
                "nentAgencyComValue, [UseAgencyUndersandOvers] = @UseAgencyUndersandOvers, [Versi" +
                "on] = @Version, [SecurityGroupID] = @SecurityGroupID, [OpRecID] = @OpRecID, [FSR" +
                "ecID] = @FSRecID, [GMLink] = @GMLink, [ExcludedCost] = @ExcludedCost, [StatusRef" +
                "] = @StatusRef, [EstRequestProductID] = @EstRequestProductID, [UserLimitsApplied" +
                "] = @UserLimitsApplied, [InUse] = @InUse, [LockDate] = @LockDate, [MarkupExclusi" +
                "onsSubTotal] = @MarkupExclusionsSubTotal WHERE (([ID] = @Original_ID) AND ([dbTi" +
                "meStamp] = @Original_dbTimeStamp));\r\nSELECT ID, MethodOfWorking, IsTemplate, Est" +
                "imateDate, Required, Quantity, Weight, JobTypeDesc, CustomerRef, CustomerName, C" +
                "ustomerAddress, CustomerTown, CustomerCounty, CustomerPostcode, CustomerCountry," +
                " CustomerCountryOfOrigin, CustomerContact, CustomerTel, CustomerFax, CustomerEma" +
                "il, CustomerUplift, CustomerExchange, Ordered, JobCreated, Ref1, Ref2, Ref3, Ref" +
                "4, Ref5, Ref6, Ref7, Ref8, Ref9, Ref10, JobType, OrderExpense, Estimator, Update" +
                "UserName, LastModified, RunOnPer, PaperSubTot, PaperMarkUpPercent, PaperMarkup, " +
                "OriginMatSubTot, OriginMatMarkUpPercent, OriginMatMarkUp, OriginLabSubTot, Origi" +
                "nLabMarkUpPercent, OriginLabMarkUp, OriginLabLabSubTot, OutworkSubtot, OutworkMa" +
                "rkUpPercent, OutworkMarkUp, OtherMatSubTotal, OtherMatMarkUpPercent, OtherMatMar" +
                "kUp, PrintingLabSubTotal, PrintingOHSubTotal, PrintingSubTotal, PrintingMarkUpPe" +
                "rcent, PrintingMarkUp, FinishingLabSubTotal, FinishingOHSubTotal, FinishingSubTo" +
                "tal, FinishingMarkUpPercent, FinishingMarkUp, CarriageSubTotal, CarriageMarkUpPe" +
                "rcent, CarriageMarkUp, TotalSubTotal, TotalMarkUpPercent, TotalMarkUp, TotalTota" +
                "l, ExchangeCurrency, ExchangeRate, ForeignTotal, RunOnValue, JobDescription, NoO" +
                "fJobDescLines, PaperRunOn, OriginMatRunOn, OriginLabRunOn, OutworkRunOn, OtherMa" +
                "tRunOn, PrintingRunOn, FinishingRunOn, CarriageRunOn, EstimateHeaderRef, UseManu" +
                "alCarriage, WorkingLevel, AgencyComPerc, AgencyComValue, IsRevision, RevisedFrom" +
                "ID, RFQStatus, RFQID, DeliveryRef, DeliveryContact, SalutationName, ComponentMar" +
                "kupPerc, OtherTotal, PricePerRunOnLocked, PricePerRunOn, ForeignPricePerRunOn, P" +
                "ricingUnits, EstRefNum, RunOnLocked, CurrencyValueLocked, SellingPriceBandID, Lo" +
                "ckedCurrencyID, LockedForeignTotal, IsCompositeEst, ComponentTotal, CustomerAgen" +
                "cyCommPerc, OtherTotalNonRounded, EstDescriptionTemplateID, EstDescriptionTempla" +
                "teName, ExcPaperFromCompPriceMatrix, ExcOrigMFromCompPriceMatrix, ExcOrigLFromCo" +
                "mpPriceMatrix, ExcOthermFromCompPriceMatrix, ExcOutworkFromCompPriceMatrix, ExcP" +
                "rintingFromCompPriceMatrix, ExcFinishingFromCompPriceMatrix, IsFreeTypeCustomer," +
                " KeepFinishedSize, CreatedDateTime, TaxCode, CourierServiceID, Courier, Publishe" +
                "d, UseRounding, QuantityPerPaperLine, CampaignNo, CompanyID, CreateSubJob, Displ" +
                "ayComponentOnInput, ComponentAgencyComValue, UseAgencyUndersandOvers, Version, S" +
                "ecurityGroupID, OpRecID, FSRecID, GMLink, ExcludedCost, StatusRef, EstRequestPro" +
                "ductID, UserLimitsApplied, InUse, LockDate, dbTimeStamp, MarkupExclusionsSubTota" +
                "l FROM MainEstimateDetails WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethodOfWorking", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodOfWorking", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsTemplate", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTemplate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Required", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTypeDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTypeDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerTown", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerTown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerCounty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerCounty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerPostcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerPostcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerCountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerCountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerContact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerTel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerTel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerFax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerEmail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerUplift", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerUplift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerExchange", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerExchange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ordered", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ordered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCreated", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderExpense", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderExpense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estimator", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estimator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RunOnPer", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOnPer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaperSubTot", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperSubTot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaperMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaperMarkup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperMarkup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginMatSubTot", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginMatSubTot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginMatMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginMatMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginMatMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginMatMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginLabSubTot", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginLabSubTot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginLabMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginLabMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginLabMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginLabMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginLabLabSubTot", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginLabLabSubTot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutworkSubtot", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutworkSubtot", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutworkMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutworkMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutworkMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutworkMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherMatSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherMatSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherMatMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherMatMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherMatMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherMatMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingLabSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingLabSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingOHSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingOHSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingLabSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingLabSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingOHSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingOHSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalMarkUpPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalMarkUpPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalMarkUp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalMarkUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RunOnValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOnValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoOfJobDescLines", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfJobDescLines", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaperRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginMatRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginMatRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginLabRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginLabRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutworkRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutworkRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherMatRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherMatRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintingRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintingRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishingRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishingRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateHeaderRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseManualCarriage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseManualCarriage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkingLevel", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkingLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgencyComPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgencyComPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgencyComValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgencyComValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsRevision", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRevision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RevisedFromID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RevisedFromID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RFQStatus", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFQStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RFQID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFQID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryContact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalutationName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalutationName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComponentMarkupPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentMarkupPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PricePerRunOnLocked", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricePerRunOnLocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PricePerRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricePerRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignPricePerRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignPricePerRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PricingUnits", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricingUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstRefNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstRefNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RunOnLocked", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOnLocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrencyValueLocked", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrencyValueLocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingPriceBandID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPriceBandID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LockedCurrencyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockedCurrencyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LockedForeignTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockedForeignTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCompositeEst", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCompositeEst", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComponentTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerAgencyCommPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAgencyCommPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTotalNonRounded", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTotalNonRounded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstDescriptionTemplateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstDescriptionTemplateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstDescriptionTemplateName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstDescriptionTemplateName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcPaperFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcPaperFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcOrigMFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcOrigMFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcOrigLFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcOrigLFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcOthermFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcOthermFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcOutworkFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcOutworkFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcPrintingFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcPrintingFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcFinishingFromCompPriceMatrix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcFinishingFromCompPriceMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsFreeTypeCustomer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFreeTypeCustomer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KeepFinishedSize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeepFinishedSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaxCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CourierServiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CourierServiceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Courier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Courier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Published", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Published", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseRounding", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseRounding", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityPerPaperLine", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityPerPaperLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CampaignNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CampaignNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateSubJob", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateSubJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DisplayComponentOnInput", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DisplayComponentOnInput", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComponentAgencyComValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentAgencyComValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseAgencyUndersandOvers", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseAgencyUndersandOvers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Version", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Version", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OpRecID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OpRecID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FSRecID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FSRecID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMLink", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GMLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcludedCost", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcludedCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StatusRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StatusRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstRequestProductID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstRequestProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserLimitsApplied", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLimitsApplied", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InUse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InUse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LockDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarkupExclusionsSubTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkupExclusionsSubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dbTimeStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbTimeStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PalletCard.Properties.Settings.Default.ThardataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, MethodOfWorking, IsTemplate, EstimateDate, Required, Quantity, Weight," +
                " JobTypeDesc, CustomerRef, CustomerName, CustomerAddress, CustomerTown, Customer" +
                "County, CustomerPostcode, CustomerCountry, CustomerCountryOfOrigin, CustomerCont" +
                "act, CustomerTel, CustomerFax, CustomerEmail, CustomerUplift, CustomerExchange, " +
                "Ordered, JobCreated, Ref1, Ref2, Ref3, Ref4, Ref5, Ref6, Ref7, Ref8, Ref9, Ref10" +
                ", JobType, OrderExpense, Estimator, UpdateUserName, LastModified, RunOnPer, Pape" +
                "rSubTot, PaperMarkUpPercent, PaperMarkup, OriginMatSubTot, OriginMatMarkUpPercen" +
                "t, OriginMatMarkUp, OriginLabSubTot, OriginLabMarkUpPercent, OriginLabMarkUp, Or" +
                "iginLabLabSubTot, OutworkSubtot, OutworkMarkUpPercent, OutworkMarkUp, OtherMatSu" +
                "bTotal, OtherMatMarkUpPercent, OtherMatMarkUp, PrintingLabSubTotal, PrintingOHSu" +
                "bTotal, PrintingSubTotal, PrintingMarkUpPercent, PrintingMarkUp, FinishingLabSub" +
                "Total, FinishingOHSubTotal, FinishingSubTotal, FinishingMarkUpPercent, Finishing" +
                "MarkUp, CarriageSubTotal, CarriageMarkUpPercent, CarriageMarkUp, TotalSubTotal, " +
                "TotalMarkUpPercent, TotalMarkUp, TotalTotal, ExchangeCurrency, ExchangeRate, For" +
                "eignTotal, RunOnValue, JobDescription, NoOfJobDescLines, PaperRunOn, OriginMatRu" +
                "nOn, OriginLabRunOn, OutworkRunOn, OtherMatRunOn, PrintingRunOn, FinishingRunOn," +
                " CarriageRunOn, EstimateHeaderRef, UseManualCarriage, WorkingLevel, AgencyComPer" +
                "c, AgencyComValue, IsRevision, RevisedFromID, RFQStatus, RFQID, DeliveryRef, Del" +
                "iveryContact, SalutationName, ComponentMarkupPerc, OtherTotal, PricePerRunOnLock" +
                "ed, PricePerRunOn, ForeignPricePerRunOn, PricingUnits, EstRefNum, RunOnLocked, C" +
                "urrencyValueLocked, SellingPriceBandID, LockedCurrencyID, LockedForeignTotal, Is" +
                "CompositeEst, ComponentTotal, CustomerAgencyCommPerc, OtherTotalNonRounded, EstD" +
                "escriptionTemplateID, EstDescriptionTemplateName, ExcPaperFromCompPriceMatrix, E" +
                "xcOrigMFromCompPriceMatrix, ExcOrigLFromCompPriceMatrix, ExcOthermFromCompPriceM" +
                "atrix, ExcOutworkFromCompPriceMatrix, ExcPrintingFromCompPriceMatrix, ExcFinishi" +
                "ngFromCompPriceMatrix, IsFreeTypeCustomer, KeepFinishedSize, CreatedDateTime, Ta" +
                "xCode, CourierServiceID, Courier, Published, UseRounding, QuantityPerPaperLine, " +
                "CampaignNo, CompanyID, CreateSubJob, DisplayComponentOnInput, ComponentAgencyCom" +
                "Value, UseAgencyUndersandOvers, Version, SecurityGroupID, OpRecID, FSRecID, GMLi" +
                "nk, ExcludedCost, StatusRef, EstRequestProductID, UserLimitsApplied, InUse, Lock" +
                "Date, dbTimeStamp, MarkupExclusionsSubTotal FROM dbo.MainEstimateDetails";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ThardataDataSet.MainEstimateDetailsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ThardataDataSet.MainEstimateDetailsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ThardataDataSet.MainEstimateDetailsDataTable dataTable = new ThardataDataSet.MainEstimateDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet.MainEstimateDetailsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MainEstimateDetails");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, byte[] Original_dbTimeStamp) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_dbTimeStamp == null)) {
                throw new global::System.ArgumentNullException("Original_dbTimeStamp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_dbTimeStamp));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string MethodOfWorking, 
                    global::System.Nullable<byte> IsTemplate, 
                    global::System.Nullable<global::System.DateTime> EstimateDate, 
                    global::System.Nullable<global::System.DateTime> Required, 
                    global::System.Nullable<double> Quantity, 
                    global::System.Nullable<double> Weight, 
                    string JobTypeDesc, 
                    string CustomerRef, 
                    string CustomerName, 
                    string CustomerAddress, 
                    string CustomerTown, 
                    string CustomerCounty, 
                    string CustomerPostcode, 
                    string CustomerCountry, 
                    string CustomerCountryOfOrigin, 
                    string CustomerContact, 
                    string CustomerTel, 
                    string CustomerFax, 
                    string CustomerEmail, 
                    global::System.Nullable<double> CustomerUplift, 
                    global::System.Nullable<short> CustomerExchange, 
                    global::System.Nullable<byte> Ordered, 
                    string JobCreated, 
                    string Ref1, 
                    string Ref2, 
                    string Ref3, 
                    string Ref4, 
                    string Ref5, 
                    string Ref6, 
                    string Ref7, 
                    string Ref8, 
                    string Ref9, 
                    string Ref10, 
                    string JobType, 
                    global::System.Nullable<double> OrderExpense, 
                    string Estimator, 
                    string UpdateUserName, 
                    global::System.Nullable<global::System.DateTime> LastModified, 
                    global::System.Nullable<double> RunOnPer, 
                    global::System.Nullable<double> PaperSubTot, 
                    global::System.Nullable<double> PaperMarkUpPercent, 
                    global::System.Nullable<double> PaperMarkup, 
                    global::System.Nullable<double> OriginMatSubTot, 
                    global::System.Nullable<double> OriginMatMarkUpPercent, 
                    global::System.Nullable<double> OriginMatMarkUp, 
                    global::System.Nullable<double> OriginLabSubTot, 
                    global::System.Nullable<double> OriginLabMarkUpPercent, 
                    global::System.Nullable<double> OriginLabMarkUp, 
                    global::System.Nullable<double> OriginLabLabSubTot, 
                    global::System.Nullable<double> OutworkSubtot, 
                    global::System.Nullable<double> OutworkMarkUpPercent, 
                    global::System.Nullable<double> OutworkMarkUp, 
                    global::System.Nullable<double> OtherMatSubTotal, 
                    global::System.Nullable<double> OtherMatMarkUpPercent, 
                    global::System.Nullable<double> OtherMatMarkUp, 
                    global::System.Nullable<double> PrintingLabSubTotal, 
                    global::System.Nullable<double> PrintingOHSubTotal, 
                    global::System.Nullable<double> PrintingSubTotal, 
                    global::System.Nullable<double> PrintingMarkUpPercent, 
                    global::System.Nullable<double> PrintingMarkUp, 
                    global::System.Nullable<double> FinishingLabSubTotal, 
                    global::System.Nullable<double> FinishingOHSubTotal, 
                    global::System.Nullable<double> FinishingSubTotal, 
                    global::System.Nullable<double> FinishingMarkUpPercent, 
                    global::System.Nullable<double> FinishingMarkUp, 
                    global::System.Nullable<double> CarriageSubTotal, 
                    global::System.Nullable<double> CarriageMarkUpPercent, 
                    global::System.Nullable<double> CarriageMarkUp, 
                    global::System.Nullable<double> TotalSubTotal, 
                    global::System.Nullable<double> TotalMarkUpPercent, 
                    global::System.Nullable<double> TotalMarkUp, 
                    global::System.Nullable<double> TotalTotal, 
                    global::System.Nullable<int> ExchangeCurrency, 
                    global::System.Nullable<double> ExchangeRate, 
                    global::System.Nullable<double> ForeignTotal, 
                    global::System.Nullable<double> RunOnValue, 
                    string JobDescription, 
                    global::System.Nullable<double> NoOfJobDescLines, 
                    global::System.Nullable<double> PaperRunOn, 
                    global::System.Nullable<double> OriginMatRunOn, 
                    global::System.Nullable<double> OriginLabRunOn, 
                    global::System.Nullable<double> OutworkRunOn, 
                    global::System.Nullable<double> OtherMatRunOn, 
                    global::System.Nullable<double> PrintingRunOn, 
                    global::System.Nullable<double> FinishingRunOn, 
                    global::System.Nullable<double> CarriageRunOn, 
                    string EstimateHeaderRef, 
                    bool UseManualCarriage, 
                    global::System.Nullable<byte> WorkingLevel, 
                    global::System.Nullable<double> AgencyComPerc, 
                    global::System.Nullable<double> AgencyComValue, 
                    byte IsRevision, 
                    global::System.Nullable<int> RevisedFromID, 
                    global::System.Nullable<byte> RFQStatus, 
                    global::System.Nullable<int> RFQID, 
                    string DeliveryRef, 
                    string DeliveryContact, 
                    string SalutationName, 
                    global::System.Nullable<double> ComponentMarkupPerc, 
                    global::System.Nullable<double> OtherTotal, 
                    bool PricePerRunOnLocked, 
                    global::System.Nullable<double> PricePerRunOn, 
                    double ForeignPricePerRunOn, 
                    global::System.Nullable<byte> PricingUnits, 
                    global::System.Nullable<int> EstRefNum, 
                    bool RunOnLocked, 
                    bool CurrencyValueLocked, 
                    global::System.Nullable<int> SellingPriceBandID, 
                    global::System.Nullable<int> LockedCurrencyID, 
                    global::System.Nullable<double> LockedForeignTotal, 
                    global::System.Nullable<bool> IsCompositeEst, 
                    global::System.Nullable<double> ComponentTotal, 
                    global::System.Nullable<double> CustomerAgencyCommPerc, 
                    global::System.Nullable<double> OtherTotalNonRounded, 
                    global::System.Nullable<int> EstDescriptionTemplateID, 
                    string EstDescriptionTemplateName, 
                    bool ExcPaperFromCompPriceMatrix, 
                    bool ExcOrigMFromCompPriceMatrix, 
                    bool ExcOrigLFromCompPriceMatrix, 
                    bool ExcOthermFromCompPriceMatrix, 
                    bool ExcOutworkFromCompPriceMatrix, 
                    bool ExcPrintingFromCompPriceMatrix, 
                    bool ExcFinishingFromCompPriceMatrix, 
                    bool IsFreeTypeCustomer, 
                    bool KeepFinishedSize, 
                    global::System.Nullable<global::System.DateTime> CreatedDateTime, 
                    string TaxCode, 
                    global::System.Nullable<int> CourierServiceID, 
                    string Courier, 
                    bool Published, 
                    bool UseRounding, 
                    bool QuantityPerPaperLine, 
                    string CampaignNo, 
                    int CompanyID, 
                    bool CreateSubJob, 
                    bool DisplayComponentOnInput, 
                    global::System.Nullable<double> ComponentAgencyComValue, 
                    bool UseAgencyUndersandOvers, 
                    int Version, 
                    global::System.Nullable<int> SecurityGroupID, 
                    string OpRecID, 
                    string FSRecID, 
                    global::System.Nullable<byte> GMLink, 
                    global::System.Nullable<double> ExcludedCost, 
                    string StatusRef, 
                    int EstRequestProductID, 
                    bool UserLimitsApplied, 
                    bool InUse, 
                    global::System.Nullable<global::System.DateTime> LockDate, 
                    global::System.Nullable<double> MarkupExclusionsSubTotal) {
            if ((MethodOfWorking == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MethodOfWorking));
            }
            if ((IsTemplate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte)(IsTemplate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EstimateDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(EstimateDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Required.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Required.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Weight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Weight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((JobTypeDesc == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(JobTypeDesc));
            }
            if ((CustomerRef == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(CustomerRef));
            }
            if ((CustomerName == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(CustomerName));
            }
            if ((CustomerAddress == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CustomerAddress));
            }
            if ((CustomerTown == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CustomerTown));
            }
            if ((CustomerCounty == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CustomerCounty));
            }
            if ((CustomerPostcode == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(CustomerPostcode));
            }
            if ((CustomerCountry == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(CustomerCountry));
            }
            if ((CustomerCountryOfOrigin == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(CustomerCountryOfOrigin));
            }
            if ((CustomerContact == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(CustomerContact));
            }
            if ((CustomerTel == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(CustomerTel));
            }
            if ((CustomerFax == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(CustomerFax));
            }
            if ((CustomerEmail == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(CustomerEmail));
            }
            if ((CustomerUplift.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(CustomerUplift.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((CustomerExchange.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((short)(CustomerExchange.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Ordered.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((byte)(Ordered.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((JobCreated == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(JobCreated));
            }
            if ((Ref1 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Ref1));
            }
            if ((Ref2 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Ref2));
            }
            if ((Ref3 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Ref3));
            }
            if ((Ref4 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Ref4));
            }
            if ((Ref5 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Ref5));
            }
            if ((Ref6 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Ref6));
            }
            if ((Ref7 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Ref7));
            }
            if ((Ref8 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Ref8));
            }
            if ((Ref9 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Ref9));
            }
            if ((Ref10 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Ref10));
            }
            if ((JobType == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(JobType));
            }
            if ((OrderExpense.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(OrderExpense.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Estimator == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(Estimator));
            }
            if ((UpdateUserName == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(UpdateUserName));
            }
            if ((LastModified.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(LastModified.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((RunOnPer.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(RunOnPer.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((PaperSubTot.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(PaperSubTot.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((PaperMarkUpPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(PaperMarkUpPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((PaperMarkup.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(PaperMarkup.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((OriginMatSubTot.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((double)(OriginMatSubTot.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((OriginMatMarkUpPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((double)(OriginMatMarkUpPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((OriginMatMarkUp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((double)(OriginMatMarkUp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((OriginLabSubTot.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((double)(OriginLabSubTot.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((OriginLabMarkUpPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((double)(OriginLabMarkUpPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((OriginLabMarkUp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((double)(OriginLabMarkUp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((OriginLabLabSubTot.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((double)(OriginLabLabSubTot.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((OutworkSubtot.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((double)(OutworkSubtot.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((OutworkMarkUpPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((double)(OutworkMarkUpPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((OutworkMarkUp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((double)(OutworkMarkUp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((OtherMatSubTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((double)(OtherMatSubTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((OtherMatMarkUpPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((double)(OtherMatMarkUpPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((OtherMatMarkUp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((double)(OtherMatMarkUp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((PrintingLabSubTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((double)(PrintingLabSubTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((PrintingOHSubTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((double)(PrintingOHSubTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((PrintingSubTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((double)(PrintingSubTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((PrintingMarkUpPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((double)(PrintingMarkUpPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((PrintingMarkUp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((double)(PrintingMarkUp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((FinishingLabSubTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((double)(FinishingLabSubTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((FinishingOHSubTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((double)(FinishingOHSubTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((FinishingSubTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((double)(FinishingSubTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((FinishingMarkUpPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((double)(FinishingMarkUpPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((FinishingMarkUp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((double)(FinishingMarkUp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((CarriageSubTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((double)(CarriageSubTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((CarriageMarkUpPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((double)(CarriageMarkUpPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((CarriageMarkUp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((double)(CarriageMarkUp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((TotalSubTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((double)(TotalSubTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((TotalMarkUpPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((double)(TotalMarkUpPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((TotalMarkUp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((double)(TotalMarkUp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((TotalTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((double)(TotalTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((ExchangeCurrency.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((int)(ExchangeCurrency.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((ExchangeRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((double)(ExchangeRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((ForeignTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((double)(ForeignTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((RunOnValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((double)(RunOnValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((JobDescription == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(JobDescription));
            }
            if ((NoOfJobDescLines.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((double)(NoOfJobDescLines.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((PaperRunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((double)(PaperRunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((OriginMatRunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((double)(OriginMatRunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((OriginLabRunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((double)(OriginLabRunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((OutworkRunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[81].Value = ((double)(OutworkRunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((OtherMatRunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((double)(OtherMatRunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((PrintingRunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[83].Value = ((double)(PrintingRunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((FinishingRunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((double)(FinishingRunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((CarriageRunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((double)(CarriageRunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((EstimateHeaderRef == null)) {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = ((string)(EstimateHeaderRef));
            }
            this.Adapter.InsertCommand.Parameters[87].Value = ((bool)(UseManualCarriage));
            if ((WorkingLevel.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[88].Value = ((byte)(WorkingLevel.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((AgencyComPerc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[89].Value = ((double)(AgencyComPerc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((AgencyComValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[90].Value = ((double)(AgencyComValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[91].Value = ((byte)(IsRevision));
            if ((RevisedFromID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[92].Value = ((int)(RevisedFromID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((RFQStatus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[93].Value = ((byte)(RFQStatus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((RFQID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[94].Value = ((int)(RFQID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((DeliveryRef == null)) {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = ((string)(DeliveryRef));
            }
            if ((DeliveryContact == null)) {
                this.Adapter.InsertCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[96].Value = ((string)(DeliveryContact));
            }
            if ((SalutationName == null)) {
                this.Adapter.InsertCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[97].Value = ((string)(SalutationName));
            }
            if ((ComponentMarkupPerc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[98].Value = ((double)(ComponentMarkupPerc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((OtherTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[99].Value = ((double)(OtherTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[100].Value = ((bool)(PricePerRunOnLocked));
            if ((PricePerRunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[101].Value = ((double)(PricePerRunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[102].Value = ((double)(ForeignPricePerRunOn));
            if ((PricingUnits.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[103].Value = ((byte)(PricingUnits.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((EstRefNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[104].Value = ((int)(EstRefNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[105].Value = ((bool)(RunOnLocked));
            this.Adapter.InsertCommand.Parameters[106].Value = ((bool)(CurrencyValueLocked));
            if ((SellingPriceBandID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[107].Value = ((int)(SellingPriceBandID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((LockedCurrencyID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[108].Value = ((int)(LockedCurrencyID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((LockedForeignTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[109].Value = ((double)(LockedForeignTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((IsCompositeEst.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[110].Value = ((bool)(IsCompositeEst.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((ComponentTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[111].Value = ((double)(ComponentTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((CustomerAgencyCommPerc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[112].Value = ((double)(CustomerAgencyCommPerc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((OtherTotalNonRounded.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[113].Value = ((double)(OtherTotalNonRounded.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((EstDescriptionTemplateID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[114].Value = ((int)(EstDescriptionTemplateID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((EstDescriptionTemplateName == null)) {
                this.Adapter.InsertCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[115].Value = ((string)(EstDescriptionTemplateName));
            }
            this.Adapter.InsertCommand.Parameters[116].Value = ((bool)(ExcPaperFromCompPriceMatrix));
            this.Adapter.InsertCommand.Parameters[117].Value = ((bool)(ExcOrigMFromCompPriceMatrix));
            this.Adapter.InsertCommand.Parameters[118].Value = ((bool)(ExcOrigLFromCompPriceMatrix));
            this.Adapter.InsertCommand.Parameters[119].Value = ((bool)(ExcOthermFromCompPriceMatrix));
            this.Adapter.InsertCommand.Parameters[120].Value = ((bool)(ExcOutworkFromCompPriceMatrix));
            this.Adapter.InsertCommand.Parameters[121].Value = ((bool)(ExcPrintingFromCompPriceMatrix));
            this.Adapter.InsertCommand.Parameters[122].Value = ((bool)(ExcFinishingFromCompPriceMatrix));
            this.Adapter.InsertCommand.Parameters[123].Value = ((bool)(IsFreeTypeCustomer));
            this.Adapter.InsertCommand.Parameters[124].Value = ((bool)(KeepFinishedSize));
            if ((CreatedDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[125].Value = ((System.DateTime)(CreatedDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((TaxCode == null)) {
                this.Adapter.InsertCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[126].Value = ((string)(TaxCode));
            }
            if ((CourierServiceID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[127].Value = ((int)(CourierServiceID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Courier == null)) {
                this.Adapter.InsertCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[128].Value = ((string)(Courier));
            }
            this.Adapter.InsertCommand.Parameters[129].Value = ((bool)(Published));
            this.Adapter.InsertCommand.Parameters[130].Value = ((bool)(UseRounding));
            this.Adapter.InsertCommand.Parameters[131].Value = ((bool)(QuantityPerPaperLine));
            if ((CampaignNo == null)) {
                this.Adapter.InsertCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[132].Value = ((string)(CampaignNo));
            }
            this.Adapter.InsertCommand.Parameters[133].Value = ((int)(CompanyID));
            this.Adapter.InsertCommand.Parameters[134].Value = ((bool)(CreateSubJob));
            this.Adapter.InsertCommand.Parameters[135].Value = ((bool)(DisplayComponentOnInput));
            if ((ComponentAgencyComValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[136].Value = ((double)(ComponentAgencyComValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[137].Value = ((bool)(UseAgencyUndersandOvers));
            this.Adapter.InsertCommand.Parameters[138].Value = ((int)(Version));
            if ((SecurityGroupID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[139].Value = ((int)(SecurityGroupID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((OpRecID == null)) {
                this.Adapter.InsertCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[140].Value = ((string)(OpRecID));
            }
            if ((FSRecID == null)) {
                this.Adapter.InsertCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[141].Value = ((string)(FSRecID));
            }
            if ((GMLink.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[142].Value = ((byte)(GMLink.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((ExcludedCost.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[143].Value = ((double)(ExcludedCost.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((StatusRef == null)) {
                this.Adapter.InsertCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[144].Value = ((string)(StatusRef));
            }
            this.Adapter.InsertCommand.Parameters[145].Value = ((int)(EstRequestProductID));
            this.Adapter.InsertCommand.Parameters[146].Value = ((bool)(UserLimitsApplied));
            this.Adapter.InsertCommand.Parameters[147].Value = ((bool)(InUse));
            if ((LockDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[148].Value = ((System.DateTime)(LockDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((MarkupExclusionsSubTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[149].Value = ((double)(MarkupExclusionsSubTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MethodOfWorking, 
                    global::System.Nullable<byte> IsTemplate, 
                    global::System.Nullable<global::System.DateTime> EstimateDate, 
                    global::System.Nullable<global::System.DateTime> Required, 
                    global::System.Nullable<double> Quantity, 
                    global::System.Nullable<double> Weight, 
                    string JobTypeDesc, 
                    string CustomerRef, 
                    string CustomerName, 
                    string CustomerAddress, 
                    string CustomerTown, 
                    string CustomerCounty, 
                    string CustomerPostcode, 
                    string CustomerCountry, 
                    string CustomerCountryOfOrigin, 
                    string CustomerContact, 
                    string CustomerTel, 
                    string CustomerFax, 
                    string CustomerEmail, 
                    global::System.Nullable<double> CustomerUplift, 
                    global::System.Nullable<short> CustomerExchange, 
                    global::System.Nullable<byte> Ordered, 
                    string JobCreated, 
                    string Ref1, 
                    string Ref2, 
                    string Ref3, 
                    string Ref4, 
                    string Ref5, 
                    string Ref6, 
                    string Ref7, 
                    string Ref8, 
                    string Ref9, 
                    string Ref10, 
                    string JobType, 
                    global::System.Nullable<double> OrderExpense, 
                    string Estimator, 
                    string UpdateUserName, 
                    global::System.Nullable<global::System.DateTime> LastModified, 
                    global::System.Nullable<double> RunOnPer, 
                    global::System.Nullable<double> PaperSubTot, 
                    global::System.Nullable<double> PaperMarkUpPercent, 
                    global::System.Nullable<double> PaperMarkup, 
                    global::System.Nullable<double> OriginMatSubTot, 
                    global::System.Nullable<double> OriginMatMarkUpPercent, 
                    global::System.Nullable<double> OriginMatMarkUp, 
                    global::System.Nullable<double> OriginLabSubTot, 
                    global::System.Nullable<double> OriginLabMarkUpPercent, 
                    global::System.Nullable<double> OriginLabMarkUp, 
                    global::System.Nullable<double> OriginLabLabSubTot, 
                    global::System.Nullable<double> OutworkSubtot, 
                    global::System.Nullable<double> OutworkMarkUpPercent, 
                    global::System.Nullable<double> OutworkMarkUp, 
                    global::System.Nullable<double> OtherMatSubTotal, 
                    global::System.Nullable<double> OtherMatMarkUpPercent, 
                    global::System.Nullable<double> OtherMatMarkUp, 
                    global::System.Nullable<double> PrintingLabSubTotal, 
                    global::System.Nullable<double> PrintingOHSubTotal, 
                    global::System.Nullable<double> PrintingSubTotal, 
                    global::System.Nullable<double> PrintingMarkUpPercent, 
                    global::System.Nullable<double> PrintingMarkUp, 
                    global::System.Nullable<double> FinishingLabSubTotal, 
                    global::System.Nullable<double> FinishingOHSubTotal, 
                    global::System.Nullable<double> FinishingSubTotal, 
                    global::System.Nullable<double> FinishingMarkUpPercent, 
                    global::System.Nullable<double> FinishingMarkUp, 
                    global::System.Nullable<double> CarriageSubTotal, 
                    global::System.Nullable<double> CarriageMarkUpPercent, 
                    global::System.Nullable<double> CarriageMarkUp, 
                    global::System.Nullable<double> TotalSubTotal, 
                    global::System.Nullable<double> TotalMarkUpPercent, 
                    global::System.Nullable<double> TotalMarkUp, 
                    global::System.Nullable<double> TotalTotal, 
                    global::System.Nullable<int> ExchangeCurrency, 
                    global::System.Nullable<double> ExchangeRate, 
                    global::System.Nullable<double> ForeignTotal, 
                    global::System.Nullable<double> RunOnValue, 
                    string JobDescription, 
                    global::System.Nullable<double> NoOfJobDescLines, 
                    global::System.Nullable<double> PaperRunOn, 
                    global::System.Nullable<double> OriginMatRunOn, 
                    global::System.Nullable<double> OriginLabRunOn, 
                    global::System.Nullable<double> OutworkRunOn, 
                    global::System.Nullable<double> OtherMatRunOn, 
                    global::System.Nullable<double> PrintingRunOn, 
                    global::System.Nullable<double> FinishingRunOn, 
                    global::System.Nullable<double> CarriageRunOn, 
                    string EstimateHeaderRef, 
                    bool UseManualCarriage, 
                    global::System.Nullable<byte> WorkingLevel, 
                    global::System.Nullable<double> AgencyComPerc, 
                    global::System.Nullable<double> AgencyComValue, 
                    byte IsRevision, 
                    global::System.Nullable<int> RevisedFromID, 
                    global::System.Nullable<byte> RFQStatus, 
                    global::System.Nullable<int> RFQID, 
                    string DeliveryRef, 
                    string DeliveryContact, 
                    string SalutationName, 
                    global::System.Nullable<double> ComponentMarkupPerc, 
                    global::System.Nullable<double> OtherTotal, 
                    bool PricePerRunOnLocked, 
                    global::System.Nullable<double> PricePerRunOn, 
                    double ForeignPricePerRunOn, 
                    global::System.Nullable<byte> PricingUnits, 
                    global::System.Nullable<int> EstRefNum, 
                    bool RunOnLocked, 
                    bool CurrencyValueLocked, 
                    global::System.Nullable<int> SellingPriceBandID, 
                    global::System.Nullable<int> LockedCurrencyID, 
                    global::System.Nullable<double> LockedForeignTotal, 
                    global::System.Nullable<bool> IsCompositeEst, 
                    global::System.Nullable<double> ComponentTotal, 
                    global::System.Nullable<double> CustomerAgencyCommPerc, 
                    global::System.Nullable<double> OtherTotalNonRounded, 
                    global::System.Nullable<int> EstDescriptionTemplateID, 
                    string EstDescriptionTemplateName, 
                    bool ExcPaperFromCompPriceMatrix, 
                    bool ExcOrigMFromCompPriceMatrix, 
                    bool ExcOrigLFromCompPriceMatrix, 
                    bool ExcOthermFromCompPriceMatrix, 
                    bool ExcOutworkFromCompPriceMatrix, 
                    bool ExcPrintingFromCompPriceMatrix, 
                    bool ExcFinishingFromCompPriceMatrix, 
                    bool IsFreeTypeCustomer, 
                    bool KeepFinishedSize, 
                    global::System.Nullable<global::System.DateTime> CreatedDateTime, 
                    string TaxCode, 
                    global::System.Nullable<int> CourierServiceID, 
                    string Courier, 
                    bool Published, 
                    bool UseRounding, 
                    bool QuantityPerPaperLine, 
                    string CampaignNo, 
                    int CompanyID, 
                    bool CreateSubJob, 
                    bool DisplayComponentOnInput, 
                    global::System.Nullable<double> ComponentAgencyComValue, 
                    bool UseAgencyUndersandOvers, 
                    int Version, 
                    global::System.Nullable<int> SecurityGroupID, 
                    string OpRecID, 
                    string FSRecID, 
                    global::System.Nullable<byte> GMLink, 
                    global::System.Nullable<double> ExcludedCost, 
                    string StatusRef, 
                    int EstRequestProductID, 
                    bool UserLimitsApplied, 
                    bool InUse, 
                    global::System.Nullable<global::System.DateTime> LockDate, 
                    global::System.Nullable<double> MarkupExclusionsSubTotal, 
                    int Original_ID, 
                    byte[] Original_dbTimeStamp, 
                    int ID) {
            if ((MethodOfWorking == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MethodOfWorking));
            }
            if ((IsTemplate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte)(IsTemplate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EstimateDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(EstimateDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Required.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Required.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((JobTypeDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(JobTypeDesc));
            }
            if ((CustomerRef == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(CustomerRef));
            }
            if ((CustomerName == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(CustomerName));
            }
            if ((CustomerAddress == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CustomerAddress));
            }
            if ((CustomerTown == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CustomerTown));
            }
            if ((CustomerCounty == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CustomerCounty));
            }
            if ((CustomerPostcode == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(CustomerPostcode));
            }
            if ((CustomerCountry == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(CustomerCountry));
            }
            if ((CustomerCountryOfOrigin == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(CustomerCountryOfOrigin));
            }
            if ((CustomerContact == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(CustomerContact));
            }
            if ((CustomerTel == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(CustomerTel));
            }
            if ((CustomerFax == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(CustomerFax));
            }
            if ((CustomerEmail == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(CustomerEmail));
            }
            if ((CustomerUplift.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(CustomerUplift.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((CustomerExchange.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((short)(CustomerExchange.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Ordered.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((byte)(Ordered.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((JobCreated == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(JobCreated));
            }
            if ((Ref1 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Ref1));
            }
            if ((Ref2 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Ref2));
            }
            if ((Ref3 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Ref3));
            }
            if ((Ref4 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Ref4));
            }
            if ((Ref5 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Ref5));
            }
            if ((Ref6 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Ref6));
            }
            if ((Ref7 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Ref7));
            }
            if ((Ref8 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Ref8));
            }
            if ((Ref9 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Ref9));
            }
            if ((Ref10 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Ref10));
            }
            if ((JobType == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(JobType));
            }
            if ((OrderExpense.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(OrderExpense.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Estimator == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Estimator));
            }
            if ((UpdateUserName == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(UpdateUserName));
            }
            if ((LastModified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(LastModified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((RunOnPer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(RunOnPer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((PaperSubTot.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(PaperSubTot.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((PaperMarkUpPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(PaperMarkUpPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((PaperMarkup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(PaperMarkup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((OriginMatSubTot.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(OriginMatSubTot.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((OriginMatMarkUpPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(OriginMatMarkUpPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((OriginMatMarkUp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(OriginMatMarkUp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((OriginLabSubTot.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(OriginLabSubTot.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((OriginLabMarkUpPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(OriginLabMarkUpPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((OriginLabMarkUp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(OriginLabMarkUp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((OriginLabLabSubTot.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(OriginLabLabSubTot.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((OutworkSubtot.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(OutworkSubtot.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((OutworkMarkUpPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(OutworkMarkUpPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((OutworkMarkUp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(OutworkMarkUp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((OtherMatSubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(OtherMatSubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((OtherMatMarkUpPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(OtherMatMarkUpPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((OtherMatMarkUp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(OtherMatMarkUp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((PrintingLabSubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(PrintingLabSubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((PrintingOHSubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(PrintingOHSubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((PrintingSubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((double)(PrintingSubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((PrintingMarkUpPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(PrintingMarkUpPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((PrintingMarkUp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((double)(PrintingMarkUp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((FinishingLabSubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(FinishingLabSubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((FinishingOHSubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((double)(FinishingOHSubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((FinishingSubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((double)(FinishingSubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((FinishingMarkUpPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(FinishingMarkUpPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((FinishingMarkUp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((double)(FinishingMarkUp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((CarriageSubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((double)(CarriageSubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((CarriageMarkUpPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((double)(CarriageMarkUpPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((CarriageMarkUp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((double)(CarriageMarkUp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((TotalSubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((double)(TotalSubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((TotalMarkUpPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((double)(TotalMarkUpPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((TotalMarkUp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((double)(TotalMarkUp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((TotalTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((double)(TotalTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((ExchangeCurrency.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(ExchangeCurrency.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((ExchangeRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((double)(ExchangeRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((ForeignTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((double)(ForeignTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((RunOnValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((double)(RunOnValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((JobDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(JobDescription));
            }
            if ((NoOfJobDescLines.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((double)(NoOfJobDescLines.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((PaperRunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((double)(PaperRunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((OriginMatRunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((double)(OriginMatRunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((OriginLabRunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((double)(OriginLabRunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((OutworkRunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((double)(OutworkRunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((OtherMatRunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((double)(OtherMatRunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((PrintingRunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((double)(PrintingRunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((FinishingRunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((double)(FinishingRunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((CarriageRunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((double)(CarriageRunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((EstimateHeaderRef == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(EstimateHeaderRef));
            }
            this.Adapter.UpdateCommand.Parameters[87].Value = ((bool)(UseManualCarriage));
            if ((WorkingLevel.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((byte)(WorkingLevel.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((AgencyComPerc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((double)(AgencyComPerc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((AgencyComValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((double)(AgencyComValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[91].Value = ((byte)(IsRevision));
            if ((RevisedFromID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(RevisedFromID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((RFQStatus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((byte)(RFQStatus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((RFQID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((int)(RFQID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((DeliveryRef == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(DeliveryRef));
            }
            if ((DeliveryContact == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(DeliveryContact));
            }
            if ((SalutationName == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(SalutationName));
            }
            if ((ComponentMarkupPerc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((double)(ComponentMarkupPerc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((OtherTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((double)(OtherTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[100].Value = ((bool)(PricePerRunOnLocked));
            if ((PricePerRunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((double)(PricePerRunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[102].Value = ((double)(ForeignPricePerRunOn));
            if ((PricingUnits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((byte)(PricingUnits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((EstRefNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((int)(EstRefNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[105].Value = ((bool)(RunOnLocked));
            this.Adapter.UpdateCommand.Parameters[106].Value = ((bool)(CurrencyValueLocked));
            if ((SellingPriceBandID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((int)(SellingPriceBandID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((LockedCurrencyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((int)(LockedCurrencyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((LockedForeignTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((double)(LockedForeignTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((IsCompositeEst.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((bool)(IsCompositeEst.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((ComponentTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((double)(ComponentTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((CustomerAgencyCommPerc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((double)(CustomerAgencyCommPerc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((OtherTotalNonRounded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((double)(OtherTotalNonRounded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((EstDescriptionTemplateID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((int)(EstDescriptionTemplateID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((EstDescriptionTemplateName == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(EstDescriptionTemplateName));
            }
            this.Adapter.UpdateCommand.Parameters[116].Value = ((bool)(ExcPaperFromCompPriceMatrix));
            this.Adapter.UpdateCommand.Parameters[117].Value = ((bool)(ExcOrigMFromCompPriceMatrix));
            this.Adapter.UpdateCommand.Parameters[118].Value = ((bool)(ExcOrigLFromCompPriceMatrix));
            this.Adapter.UpdateCommand.Parameters[119].Value = ((bool)(ExcOthermFromCompPriceMatrix));
            this.Adapter.UpdateCommand.Parameters[120].Value = ((bool)(ExcOutworkFromCompPriceMatrix));
            this.Adapter.UpdateCommand.Parameters[121].Value = ((bool)(ExcPrintingFromCompPriceMatrix));
            this.Adapter.UpdateCommand.Parameters[122].Value = ((bool)(ExcFinishingFromCompPriceMatrix));
            this.Adapter.UpdateCommand.Parameters[123].Value = ((bool)(IsFreeTypeCustomer));
            this.Adapter.UpdateCommand.Parameters[124].Value = ((bool)(KeepFinishedSize));
            if ((CreatedDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((System.DateTime)(CreatedDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((TaxCode == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(TaxCode));
            }
            if ((CourierServiceID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((int)(CourierServiceID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Courier == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((string)(Courier));
            }
            this.Adapter.UpdateCommand.Parameters[129].Value = ((bool)(Published));
            this.Adapter.UpdateCommand.Parameters[130].Value = ((bool)(UseRounding));
            this.Adapter.UpdateCommand.Parameters[131].Value = ((bool)(QuantityPerPaperLine));
            if ((CampaignNo == null)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(CampaignNo));
            }
            this.Adapter.UpdateCommand.Parameters[133].Value = ((int)(CompanyID));
            this.Adapter.UpdateCommand.Parameters[134].Value = ((bool)(CreateSubJob));
            this.Adapter.UpdateCommand.Parameters[135].Value = ((bool)(DisplayComponentOnInput));
            if ((ComponentAgencyComValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((double)(ComponentAgencyComValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[137].Value = ((bool)(UseAgencyUndersandOvers));
            this.Adapter.UpdateCommand.Parameters[138].Value = ((int)(Version));
            if ((SecurityGroupID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((int)(SecurityGroupID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((OpRecID == null)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(OpRecID));
            }
            if ((FSRecID == null)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((string)(FSRecID));
            }
            if ((GMLink.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((byte)(GMLink.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((ExcludedCost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((double)(ExcludedCost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((StatusRef == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((string)(StatusRef));
            }
            this.Adapter.UpdateCommand.Parameters[145].Value = ((int)(EstRequestProductID));
            this.Adapter.UpdateCommand.Parameters[146].Value = ((bool)(UserLimitsApplied));
            this.Adapter.UpdateCommand.Parameters[147].Value = ((bool)(InUse));
            if ((LockDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((System.DateTime)(LockDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((MarkupExclusionsSubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((double)(MarkupExclusionsSubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[150].Value = ((int)(Original_ID));
            if ((Original_dbTimeStamp == null)) {
                throw new global::System.ArgumentNullException("Original_dbTimeStamp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((byte[])(Original_dbTimeStamp));
            }
            this.Adapter.UpdateCommand.Parameters[152].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MethodOfWorking, 
                    global::System.Nullable<byte> IsTemplate, 
                    global::System.Nullable<global::System.DateTime> EstimateDate, 
                    global::System.Nullable<global::System.DateTime> Required, 
                    global::System.Nullable<double> Quantity, 
                    global::System.Nullable<double> Weight, 
                    string JobTypeDesc, 
                    string CustomerRef, 
                    string CustomerName, 
                    string CustomerAddress, 
                    string CustomerTown, 
                    string CustomerCounty, 
                    string CustomerPostcode, 
                    string CustomerCountry, 
                    string CustomerCountryOfOrigin, 
                    string CustomerContact, 
                    string CustomerTel, 
                    string CustomerFax, 
                    string CustomerEmail, 
                    global::System.Nullable<double> CustomerUplift, 
                    global::System.Nullable<short> CustomerExchange, 
                    global::System.Nullable<byte> Ordered, 
                    string JobCreated, 
                    string Ref1, 
                    string Ref2, 
                    string Ref3, 
                    string Ref4, 
                    string Ref5, 
                    string Ref6, 
                    string Ref7, 
                    string Ref8, 
                    string Ref9, 
                    string Ref10, 
                    string JobType, 
                    global::System.Nullable<double> OrderExpense, 
                    string Estimator, 
                    string UpdateUserName, 
                    global::System.Nullable<global::System.DateTime> LastModified, 
                    global::System.Nullable<double> RunOnPer, 
                    global::System.Nullable<double> PaperSubTot, 
                    global::System.Nullable<double> PaperMarkUpPercent, 
                    global::System.Nullable<double> PaperMarkup, 
                    global::System.Nullable<double> OriginMatSubTot, 
                    global::System.Nullable<double> OriginMatMarkUpPercent, 
                    global::System.Nullable<double> OriginMatMarkUp, 
                    global::System.Nullable<double> OriginLabSubTot, 
                    global::System.Nullable<double> OriginLabMarkUpPercent, 
                    global::System.Nullable<double> OriginLabMarkUp, 
                    global::System.Nullable<double> OriginLabLabSubTot, 
                    global::System.Nullable<double> OutworkSubtot, 
                    global::System.Nullable<double> OutworkMarkUpPercent, 
                    global::System.Nullable<double> OutworkMarkUp, 
                    global::System.Nullable<double> OtherMatSubTotal, 
                    global::System.Nullable<double> OtherMatMarkUpPercent, 
                    global::System.Nullable<double> OtherMatMarkUp, 
                    global::System.Nullable<double> PrintingLabSubTotal, 
                    global::System.Nullable<double> PrintingOHSubTotal, 
                    global::System.Nullable<double> PrintingSubTotal, 
                    global::System.Nullable<double> PrintingMarkUpPercent, 
                    global::System.Nullable<double> PrintingMarkUp, 
                    global::System.Nullable<double> FinishingLabSubTotal, 
                    global::System.Nullable<double> FinishingOHSubTotal, 
                    global::System.Nullable<double> FinishingSubTotal, 
                    global::System.Nullable<double> FinishingMarkUpPercent, 
                    global::System.Nullable<double> FinishingMarkUp, 
                    global::System.Nullable<double> CarriageSubTotal, 
                    global::System.Nullable<double> CarriageMarkUpPercent, 
                    global::System.Nullable<double> CarriageMarkUp, 
                    global::System.Nullable<double> TotalSubTotal, 
                    global::System.Nullable<double> TotalMarkUpPercent, 
                    global::System.Nullable<double> TotalMarkUp, 
                    global::System.Nullable<double> TotalTotal, 
                    global::System.Nullable<int> ExchangeCurrency, 
                    global::System.Nullable<double> ExchangeRate, 
                    global::System.Nullable<double> ForeignTotal, 
                    global::System.Nullable<double> RunOnValue, 
                    string JobDescription, 
                    global::System.Nullable<double> NoOfJobDescLines, 
                    global::System.Nullable<double> PaperRunOn, 
                    global::System.Nullable<double> OriginMatRunOn, 
                    global::System.Nullable<double> OriginLabRunOn, 
                    global::System.Nullable<double> OutworkRunOn, 
                    global::System.Nullable<double> OtherMatRunOn, 
                    global::System.Nullable<double> PrintingRunOn, 
                    global::System.Nullable<double> FinishingRunOn, 
                    global::System.Nullable<double> CarriageRunOn, 
                    string EstimateHeaderRef, 
                    bool UseManualCarriage, 
                    global::System.Nullable<byte> WorkingLevel, 
                    global::System.Nullable<double> AgencyComPerc, 
                    global::System.Nullable<double> AgencyComValue, 
                    byte IsRevision, 
                    global::System.Nullable<int> RevisedFromID, 
                    global::System.Nullable<byte> RFQStatus, 
                    global::System.Nullable<int> RFQID, 
                    string DeliveryRef, 
                    string DeliveryContact, 
                    string SalutationName, 
                    global::System.Nullable<double> ComponentMarkupPerc, 
                    global::System.Nullable<double> OtherTotal, 
                    bool PricePerRunOnLocked, 
                    global::System.Nullable<double> PricePerRunOn, 
                    double ForeignPricePerRunOn, 
                    global::System.Nullable<byte> PricingUnits, 
                    global::System.Nullable<int> EstRefNum, 
                    bool RunOnLocked, 
                    bool CurrencyValueLocked, 
                    global::System.Nullable<int> SellingPriceBandID, 
                    global::System.Nullable<int> LockedCurrencyID, 
                    global::System.Nullable<double> LockedForeignTotal, 
                    global::System.Nullable<bool> IsCompositeEst, 
                    global::System.Nullable<double> ComponentTotal, 
                    global::System.Nullable<double> CustomerAgencyCommPerc, 
                    global::System.Nullable<double> OtherTotalNonRounded, 
                    global::System.Nullable<int> EstDescriptionTemplateID, 
                    string EstDescriptionTemplateName, 
                    bool ExcPaperFromCompPriceMatrix, 
                    bool ExcOrigMFromCompPriceMatrix, 
                    bool ExcOrigLFromCompPriceMatrix, 
                    bool ExcOthermFromCompPriceMatrix, 
                    bool ExcOutworkFromCompPriceMatrix, 
                    bool ExcPrintingFromCompPriceMatrix, 
                    bool ExcFinishingFromCompPriceMatrix, 
                    bool IsFreeTypeCustomer, 
                    bool KeepFinishedSize, 
                    global::System.Nullable<global::System.DateTime> CreatedDateTime, 
                    string TaxCode, 
                    global::System.Nullable<int> CourierServiceID, 
                    string Courier, 
                    bool Published, 
                    bool UseRounding, 
                    bool QuantityPerPaperLine, 
                    string CampaignNo, 
                    int CompanyID, 
                    bool CreateSubJob, 
                    bool DisplayComponentOnInput, 
                    global::System.Nullable<double> ComponentAgencyComValue, 
                    bool UseAgencyUndersandOvers, 
                    int Version, 
                    global::System.Nullable<int> SecurityGroupID, 
                    string OpRecID, 
                    string FSRecID, 
                    global::System.Nullable<byte> GMLink, 
                    global::System.Nullable<double> ExcludedCost, 
                    string StatusRef, 
                    int EstRequestProductID, 
                    bool UserLimitsApplied, 
                    bool InUse, 
                    global::System.Nullable<global::System.DateTime> LockDate, 
                    global::System.Nullable<double> MarkupExclusionsSubTotal, 
                    int Original_ID, 
                    byte[] Original_dbTimeStamp) {
            return this.Update(MethodOfWorking, IsTemplate, EstimateDate, Required, Quantity, Weight, JobTypeDesc, CustomerRef, CustomerName, CustomerAddress, CustomerTown, CustomerCounty, CustomerPostcode, CustomerCountry, CustomerCountryOfOrigin, CustomerContact, CustomerTel, CustomerFax, CustomerEmail, CustomerUplift, CustomerExchange, Ordered, JobCreated, Ref1, Ref2, Ref3, Ref4, Ref5, Ref6, Ref7, Ref8, Ref9, Ref10, JobType, OrderExpense, Estimator, UpdateUserName, LastModified, RunOnPer, PaperSubTot, PaperMarkUpPercent, PaperMarkup, OriginMatSubTot, OriginMatMarkUpPercent, OriginMatMarkUp, OriginLabSubTot, OriginLabMarkUpPercent, OriginLabMarkUp, OriginLabLabSubTot, OutworkSubtot, OutworkMarkUpPercent, OutworkMarkUp, OtherMatSubTotal, OtherMatMarkUpPercent, OtherMatMarkUp, PrintingLabSubTotal, PrintingOHSubTotal, PrintingSubTotal, PrintingMarkUpPercent, PrintingMarkUp, FinishingLabSubTotal, FinishingOHSubTotal, FinishingSubTotal, FinishingMarkUpPercent, FinishingMarkUp, CarriageSubTotal, CarriageMarkUpPercent, CarriageMarkUp, TotalSubTotal, TotalMarkUpPercent, TotalMarkUp, TotalTotal, ExchangeCurrency, ExchangeRate, ForeignTotal, RunOnValue, JobDescription, NoOfJobDescLines, PaperRunOn, OriginMatRunOn, OriginLabRunOn, OutworkRunOn, OtherMatRunOn, PrintingRunOn, FinishingRunOn, CarriageRunOn, EstimateHeaderRef, UseManualCarriage, WorkingLevel, AgencyComPerc, AgencyComValue, IsRevision, RevisedFromID, RFQStatus, RFQID, DeliveryRef, DeliveryContact, SalutationName, ComponentMarkupPerc, OtherTotal, PricePerRunOnLocked, PricePerRunOn, ForeignPricePerRunOn, PricingUnits, EstRefNum, RunOnLocked, CurrencyValueLocked, SellingPriceBandID, LockedCurrencyID, LockedForeignTotal, IsCompositeEst, ComponentTotal, CustomerAgencyCommPerc, OtherTotalNonRounded, EstDescriptionTemplateID, EstDescriptionTemplateName, ExcPaperFromCompPriceMatrix, ExcOrigMFromCompPriceMatrix, ExcOrigLFromCompPriceMatrix, ExcOthermFromCompPriceMatrix, ExcOutworkFromCompPriceMatrix, ExcPrintingFromCompPriceMatrix, ExcFinishingFromCompPriceMatrix, IsFreeTypeCustomer, KeepFinishedSize, CreatedDateTime, TaxCode, CourierServiceID, Courier, Published, UseRounding, QuantityPerPaperLine, CampaignNo, CompanyID, CreateSubJob, DisplayComponentOnInput, ComponentAgencyComValue, UseAgencyUndersandOvers, Version, SecurityGroupID, OpRecID, FSRecID, GMLink, ExcludedCost, StatusRef, EstRequestProductID, UserLimitsApplied, InUse, LockDate, MarkupExclusionsSubTotal, Original_ID, Original_dbTimeStamp, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MainJobDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MainJobDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MainJobDetails";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("MethodOfWorking", "MethodOfWorking");
            tableMapping.ColumnMappings.Add("WorksPrinted", "WorksPrinted");
            tableMapping.ColumnMappings.Add("MultipleProducts", "MultipleProducts");
            tableMapping.ColumnMappings.Add("JobNo", "JobNo");
            tableMapping.ColumnMappings.Add("Datedb", "Datedb");
            tableMapping.ColumnMappings.Add("InvoiceID", "InvoiceID");
            tableMapping.ColumnMappings.Add("InvoiceCustomerCode", "InvoiceCustomerCode");
            tableMapping.ColumnMappings.Add("InvoiceCustomerName", "InvoiceCustomerName");
            tableMapping.ColumnMappings.Add("InvoiceAddress", "InvoiceAddress");
            tableMapping.ColumnMappings.Add("InvoiceTown", "InvoiceTown");
            tableMapping.ColumnMappings.Add("InvoiceCounty", "InvoiceCounty");
            tableMapping.ColumnMappings.Add("InvoicePostcode", "InvoicePostcode");
            tableMapping.ColumnMappings.Add("InvoiceCountry", "InvoiceCountry");
            tableMapping.ColumnMappings.Add("InvoiceContact", "InvoiceContact");
            tableMapping.ColumnMappings.Add("InvoiceTel", "InvoiceTel");
            tableMapping.ColumnMappings.Add("InvoiceFax", "InvoiceFax");
            tableMapping.ColumnMappings.Add("InvoiceExchange", "InvoiceExchange");
            tableMapping.ColumnMappings.Add("DeliveryCustomerCode", "DeliveryCustomerCode");
            tableMapping.ColumnMappings.Add("DeliveryCustomerName", "DeliveryCustomerName");
            tableMapping.ColumnMappings.Add("DeliveryAddress", "DeliveryAddress");
            tableMapping.ColumnMappings.Add("DeliveryTown", "DeliveryTown");
            tableMapping.ColumnMappings.Add("DeliveryCounty", "DeliveryCounty");
            tableMapping.ColumnMappings.Add("DeliveryPostcode", "DeliveryPostcode");
            tableMapping.ColumnMappings.Add("DeliveryCountry", "DeliveryCountry");
            tableMapping.ColumnMappings.Add("DeliveryContact", "DeliveryContact");
            tableMapping.ColumnMappings.Add("DeliveryTel", "DeliveryTel");
            tableMapping.ColumnMappings.Add("DeliveryFax", "DeliveryFax");
            tableMapping.ColumnMappings.Add("PrevJob", "PrevJob");
            tableMapping.ColumnMappings.Add("OrderNo", "OrderNo");
            tableMapping.ColumnMappings.Add("QuantityOrdered", "QuantityOrdered");
            tableMapping.ColumnMappings.Add("QuantityDelivered", "QuantityDelivered");
            tableMapping.ColumnMappings.Add("QuantityInStock", "QuantityInStock");
            tableMapping.ColumnMappings.Add("StockCode", "StockCode");
            tableMapping.ColumnMappings.Add("StockSize", "StockSize");
            tableMapping.ColumnMappings.Add("Ref1", "Ref1");
            tableMapping.ColumnMappings.Add("Ref2", "Ref2");
            tableMapping.ColumnMappings.Add("Ref3", "Ref3");
            tableMapping.ColumnMappings.Add("Ref4", "Ref4");
            tableMapping.ColumnMappings.Add("Ref5", "Ref5");
            tableMapping.ColumnMappings.Add("Ref6", "Ref6");
            tableMapping.ColumnMappings.Add("Ref7", "Ref7");
            tableMapping.ColumnMappings.Add("Ref8", "Ref8");
            tableMapping.ColumnMappings.Add("Ref9", "Ref9");
            tableMapping.ColumnMappings.Add("Ref10", "Ref10");
            tableMapping.ColumnMappings.Add("JobType", "JobType");
            tableMapping.ColumnMappings.Add("VatCode", "VatCode");
            tableMapping.ColumnMappings.Add("PriceEst", "PriceEst");
            tableMapping.ColumnMappings.Add("ProfitEst", "ProfitEst");
            tableMapping.ColumnMappings.Add("ProfitAct", "ProfitAct");
            tableMapping.ColumnMappings.Add("JobDesc", "JobDesc");
            tableMapping.ColumnMappings.Add("OurOrderNo", "OurOrderNo");
            tableMapping.ColumnMappings.Add("LastOpDate", "LastOpDate");
            tableMapping.ColumnMappings.Add("LastOpCode", "LastOpCode");
            tableMapping.ColumnMappings.Add("LastOpDesc", "LastOpDesc");
            tableMapping.ColumnMappings.Add("JobCompleted", "JobCompleted");
            tableMapping.ColumnMappings.Add("JobCompletionDate", "JobCompletionDate");
            tableMapping.ColumnMappings.Add("EstimateHeaderRef", "EstimateHeaderRef");
            tableMapping.ColumnMappings.Add("EstimateID", "EstimateID");
            tableMapping.ColumnMappings.Add("JobTypeDesc", "JobTypeDesc");
            tableMapping.ColumnMappings.Add("JobDept", "JobDept");
            tableMapping.ColumnMappings.Add("OrderLineID", "OrderLineID");
            tableMapping.ColumnMappings.Add("Nominal", "Nominal");
            tableMapping.ColumnMappings.Add("CostCentre", "CostCentre");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("QuantityInvoiced", "QuantityInvoiced");
            tableMapping.ColumnMappings.Add("QuantityProduced", "QuantityProduced");
            tableMapping.ColumnMappings.Add("InvoiceCompleted", "InvoiceCompleted");
            tableMapping.ColumnMappings.Add("JobCancelled", "JobCancelled");
            tableMapping.ColumnMappings.Add("Estimator", "Estimator");
            tableMapping.ColumnMappings.Add("RequiredTime", "RequiredTime");
            tableMapping.ColumnMappings.Add("CustomerRef2", "CustomerRef2");
            tableMapping.ColumnMappings.Add("CreateUserName", "CreateUserName");
            tableMapping.ColumnMappings.Add("CreateDateTime", "CreateDateTime");
            tableMapping.ColumnMappings.Add("UpdateUserName", "UpdateUserName");
            tableMapping.ColumnMappings.Add("UpdateDateTime", "UpdateDateTime");
            tableMapping.ColumnMappings.Add("OverHeadPercent", "OverHeadPercent");
            tableMapping.ColumnMappings.Add("IssueNumber", "IssueNumber");
            tableMapping.ColumnMappings.Add("Derived", "Derived");
            tableMapping.ColumnMappings.Add("FinishedProductionDate", "FinishedProductionDate");
            tableMapping.ColumnMappings.Add("PostingCode", "PostingCode");
            tableMapping.ColumnMappings.Add("PostingContact", "PostingContact");
            tableMapping.ColumnMappings.Add("OriginalEstimateHeaderRef", "OriginalEstimateHeaderRef");
            tableMapping.ColumnMappings.Add("OriginalEstimateID", "OriginalEstimateID");
            tableMapping.ColumnMappings.Add("IsAltered", "IsAltered");
            tableMapping.ColumnMappings.Add("OriginalEstimateQuantity", "OriginalEstimateQuantity");
            tableMapping.ColumnMappings.Add("ParentJob", "ParentJob");
            tableMapping.ColumnMappings.Add("OutOnProof", "OutOnProof");
            tableMapping.ColumnMappings.Add("ProofSentDateTime", "ProofSentDateTime");
            tableMapping.ColumnMappings.Add("ProofReturnedDateTime", "ProofReturnedDateTime");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            tableMapping.ColumnMappings.Add("SSDModeOfTransport", "SSDModeOfTransport");
            tableMapping.ColumnMappings.Add("SSDNatureOfTransaction", "SSDNatureOfTransaction");
            tableMapping.ColumnMappings.Add("SSDDeliveryTerms", "SSDDeliveryTerms");
            tableMapping.ColumnMappings.Add("Currency", "Currency");
            tableMapping.ColumnMappings.Add("ExchangeRate", "ExchangeRate");
            tableMapping.ColumnMappings.Add("ForeignTotal", "ForeignTotal");
            tableMapping.ColumnMappings.Add("RoleInSeries", "RoleInSeries");
            tableMapping.ColumnMappings.Add("SentToJDF", "SentToJDF");
            tableMapping.ColumnMappings.Add("InvoiceCountryOfOrigin", "InvoiceCountryOfOrigin");
            tableMapping.ColumnMappings.Add("DeliveryCountryOfOrigin", "DeliveryCountryOfOrigin");
            tableMapping.ColumnMappings.Add("IsInvoiced", "IsInvoiced");
            tableMapping.ColumnMappings.Add("AgencyComPerc", "AgencyComPerc");
            tableMapping.ColumnMappings.Add("JDFStatus", "JDFStatus");
            tableMapping.ColumnMappings.Add("IsProductionJob", "IsProductionJob");
            tableMapping.ColumnMappings.Add("OriginationOfJob", "OriginationOfJob");
            tableMapping.ColumnMappings.Add("JDFRef", "JDFRef");
            tableMapping.ColumnMappings.Add("NewJDFAcknowledged", "NewJDFAcknowledged");
            tableMapping.ColumnMappings.Add("MilestoneGroup", "MilestoneGroup");
            tableMapping.ColumnMappings.Add("MethodOfWorkingModified", "MethodOfWorkingModified");
            tableMapping.ColumnMappings.Add("CompanyID", "CompanyID");
            tableMapping.ColumnMappings.Add("JobGanged", "JobGanged");
            tableMapping.ColumnMappings.Add("DateModified", "DateModified");
            tableMapping.ColumnMappings.Add("ModifiedByUserID", "ModifiedByUserID");
            tableMapping.ColumnMappings.Add("SecurityGroupID", "SecurityGroupID");
            tableMapping.ColumnMappings.Add("LastMilestone", "LastMilestone");
            tableMapping.ColumnMappings.Add("IsAssemblyJob", "IsAssemblyJob");
            tableMapping.ColumnMappings.Add("DespatchDate", "DespatchDate");
            tableMapping.ColumnMappings.Add("BOMRevision", "BOMRevision");
            tableMapping.ColumnMappings.Add("dbTimeStamp", "dbTimeStamp");
            tableMapping.ColumnMappings.Add("SalesTaxCodeID", "SalesTaxCodeID");
            tableMapping.ColumnMappings.Add("SalesTaxItemID", "SalesTaxItemID");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("CreatedStockType", "CreatedStockType");
            tableMapping.ColumnMappings.Add("ProductTypeID", "ProductTypeID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MainJobDetails] WHERE (([ID] = @Original_ID) AND ([dbTimeStamp" +
                "] = @Original_dbTimeStamp))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dbTimeStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbTimeStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MainJobDetails] ([MethodOfWorking], [WorksPrinted], [MultipleP" +
                "roducts], [JobNo], [Datedb], [InvoiceID], [InvoiceCustomerCode], [InvoiceCustome" +
                "rName], [InvoiceAddress], [InvoiceTown], [InvoiceCounty], [InvoicePostcode], [In" +
                "voiceCountry], [InvoiceContact], [InvoiceTel], [InvoiceFax], [InvoiceExchange], " +
                "[DeliveryCustomerCode], [DeliveryCustomerName], [DeliveryAddress], [DeliveryTown" +
                "], [DeliveryCounty], [DeliveryPostcode], [DeliveryCountry], [DeliveryContact], [" +
                "DeliveryTel], [DeliveryFax], [PrevJob], [OrderNo], [QuantityOrdered], [QuantityD" +
                "elivered], [QuantityInStock], [StockCode], [StockSize], [Ref1], [Ref2], [Ref3], " +
                "[Ref4], [Ref5], [Ref6], [Ref7], [Ref8], [Ref9], [Ref10], [JobType], [VatCode], [" +
                "PriceEst], [ProfitEst], [ProfitAct], [JobDesc], [OurOrderNo], [LastOpDate], [Las" +
                "tOpCode], [LastOpDesc], [JobCompleted], [JobCompletionDate], [EstimateHeaderRef]" +
                ", [EstimateID], [JobTypeDesc], [JobDept], [OrderLineID], [Nominal], [CostCentre]" +
                ", [Department], [UnitPrice], [QuantityInvoiced], [QuantityProduced], [InvoiceCom" +
                "pleted], [JobCancelled], [Estimator], [RequiredTime], [CustomerRef2], [CreateUse" +
                "rName], [CreateDateTime], [UpdateUserName], [UpdateDateTime], [OverHeadPercent]," +
                " [IssueNumber], [Derived], [FinishedProductionDate], [PostingCode], [PostingCont" +
                "act], [OriginalEstimateHeaderRef], [OriginalEstimateID], [IsAltered], [OriginalE" +
                "stimateQuantity], [ParentJob], [OutOnProof], [ProofSentDateTime], [ProofReturned" +
                "DateTime], [Weight], [SSDModeOfTransport], [SSDNatureOfTransaction], [SSDDeliver" +
                "yTerms], [Currency], [ExchangeRate], [ForeignTotal], [RoleInSeries], [SentToJDF]" +
                ", [InvoiceCountryOfOrigin], [DeliveryCountryOfOrigin], [IsInvoiced], [AgencyComP" +
                "erc], [JDFStatus], [IsProductionJob], [OriginationOfJob], [JDFRef], [NewJDFAckno" +
                "wledged], [MilestoneGroup], [MethodOfWorkingModified], [CompanyID], [JobGanged]," +
                " [DateModified], [ModifiedByUserID], [SecurityGroupID], [LastMilestone], [IsAsse" +
                "mblyJob], [DespatchDate], [BOMRevision], [SalesTaxCodeID], [SalesTaxItemID], [Em" +
                "ail], [CreatedStockType], [ProductTypeID]) VALUES (@MethodOfWorking, @WorksPrint" +
                "ed, @MultipleProducts, @JobNo, @Datedb, @InvoiceID, @InvoiceCustomerCode, @Invoi" +
                "ceCustomerName, @InvoiceAddress, @InvoiceTown, @InvoiceCounty, @InvoicePostcode," +
                " @InvoiceCountry, @InvoiceContact, @InvoiceTel, @InvoiceFax, @InvoiceExchange, @" +
                "DeliveryCustomerCode, @DeliveryCustomerName, @DeliveryAddress, @DeliveryTown, @D" +
                "eliveryCounty, @DeliveryPostcode, @DeliveryCountry, @DeliveryContact, @DeliveryT" +
                "el, @DeliveryFax, @PrevJob, @OrderNo, @QuantityOrdered, @QuantityDelivered, @Qua" +
                "ntityInStock, @StockCode, @StockSize, @Ref1, @Ref2, @Ref3, @Ref4, @Ref5, @Ref6, " +
                "@Ref7, @Ref8, @Ref9, @Ref10, @JobType, @VatCode, @PriceEst, @ProfitEst, @ProfitA" +
                "ct, @JobDesc, @OurOrderNo, @LastOpDate, @LastOpCode, @LastOpDesc, @JobCompleted," +
                " @JobCompletionDate, @EstimateHeaderRef, @EstimateID, @JobTypeDesc, @JobDept, @O" +
                "rderLineID, @Nominal, @CostCentre, @Department, @UnitPrice, @QuantityInvoiced, @" +
                "QuantityProduced, @InvoiceCompleted, @JobCancelled, @Estimator, @RequiredTime, @" +
                "CustomerRef2, @CreateUserName, @CreateDateTime, @UpdateUserName, @UpdateDateTime" +
                ", @OverHeadPercent, @IssueNumber, @Derived, @FinishedProductionDate, @PostingCod" +
                "e, @PostingContact, @OriginalEstimateHeaderRef, @OriginalEstimateID, @IsAltered," +
                " @OriginalEstimateQuantity, @ParentJob, @OutOnProof, @ProofSentDateTime, @ProofR" +
                "eturnedDateTime, @Weight, @SSDModeOfTransport, @SSDNatureOfTransaction, @SSDDeli" +
                "veryTerms, @Currency, @ExchangeRate, @ForeignTotal, @RoleInSeries, @SentToJDF, @" +
                "InvoiceCountryOfOrigin, @DeliveryCountryOfOrigin, @IsInvoiced, @AgencyComPerc, @" +
                "JDFStatus, @IsProductionJob, @OriginationOfJob, @JDFRef, @NewJDFAcknowledged, @M" +
                "ilestoneGroup, @MethodOfWorkingModified, @CompanyID, @JobGanged, @DateModified, " +
                "@ModifiedByUserID, @SecurityGroupID, @LastMilestone, @IsAssemblyJob, @DespatchDa" +
                "te, @BOMRevision, @SalesTaxCodeID, @SalesTaxItemID, @Email, @CreatedStockType, @" +
                "ProductTypeID);\r\nSELECT ID, MethodOfWorking, WorksPrinted, MultipleProducts, Job" +
                "No, Datedb, InvoiceID, InvoiceCustomerCode, InvoiceCustomerName, InvoiceAddress," +
                " InvoiceTown, InvoiceCounty, InvoicePostcode, InvoiceCountry, InvoiceContact, In" +
                "voiceTel, InvoiceFax, InvoiceExchange, DeliveryCustomerCode, DeliveryCustomerNam" +
                "e, DeliveryAddress, DeliveryTown, DeliveryCounty, DeliveryPostcode, DeliveryCoun" +
                "try, DeliveryContact, DeliveryTel, DeliveryFax, PrevJob, OrderNo, QuantityOrdere" +
                "d, QuantityDelivered, QuantityInStock, StockCode, StockSize, Ref1, Ref2, Ref3, R" +
                "ef4, Ref5, Ref6, Ref7, Ref8, Ref9, Ref10, JobType, VatCode, PriceEst, ProfitEst," +
                " ProfitAct, JobDesc, OurOrderNo, LastOpDate, LastOpCode, LastOpDesc, JobComplete" +
                "d, JobCompletionDate, EstimateHeaderRef, EstimateID, JobTypeDesc, JobDept, Order" +
                "LineID, Nominal, CostCentre, Department, UnitPrice, QuantityInvoiced, QuantityPr" +
                "oduced, InvoiceCompleted, JobCancelled, Estimator, RequiredTime, CustomerRef2, C" +
                "reateUserName, CreateDateTime, UpdateUserName, UpdateDateTime, OverHeadPercent, " +
                "IssueNumber, Derived, FinishedProductionDate, PostingCode, PostingContact, Origi" +
                "nalEstimateHeaderRef, OriginalEstimateID, IsAltered, OriginalEstimateQuantity, P" +
                "arentJob, OutOnProof, ProofSentDateTime, ProofReturnedDateTime, Weight, SSDModeO" +
                "fTransport, SSDNatureOfTransaction, SSDDeliveryTerms, Currency, ExchangeRate, Fo" +
                "reignTotal, RoleInSeries, SentToJDF, InvoiceCountryOfOrigin, DeliveryCountryOfOr" +
                "igin, IsInvoiced, AgencyComPerc, JDFStatus, IsProductionJob, OriginationOfJob, J" +
                "DFRef, NewJDFAcknowledged, MilestoneGroup, MethodOfWorkingModified, CompanyID, J" +
                "obGanged, DateModified, ModifiedByUserID, SecurityGroupID, LastMilestone, IsAsse" +
                "mblyJob, DespatchDate, BOMRevision, dbTimeStamp, SalesTaxCodeID, SalesTaxItemID," +
                " Email, CreatedStockType, ProductTypeID FROM MainJobDetails WHERE (ID = SCOPE_ID" +
                "ENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethodOfWorking", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodOfWorking", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorksPrinted", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorksPrinted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MultipleProducts", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleProducts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Datedb", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datedb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCustomerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCustomerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceTown", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceTown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCounty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCounty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoicePostcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoicePostcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceContact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceTel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceTel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceFax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceExchange", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceExchange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCustomerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCustomerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryTown", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryTown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCounty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCounty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryPostcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryPostcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryContact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryTel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryTel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryFax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrevJob", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrevJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityOrdered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityOrdered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityDelivered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityDelivered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityInStock", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriceEst", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceEst", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfitEst", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfitEst", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfitAct", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfitAct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OurOrderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OurOrderNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastOpDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastOpDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastOpCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastOpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastOpDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastOpDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCompleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCompletionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCompletionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateHeaderRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTypeDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTypeDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDept", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderLineID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityInvoiced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityProduced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityProduced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCompleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCancelled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCancelled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estimator", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estimator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequiredTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequiredTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerRef2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerRef2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateUserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverHeadPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverHeadPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IssueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Derived", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Derived", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishedProductionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishedProductionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostingCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostingCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostingContact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostingContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalEstimateHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalEstimateHeaderRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalEstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalEstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAltered", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAltered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalEstimateQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalEstimateQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentJob", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutOnProof", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutOnProof", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProofSentDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProofSentDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProofReturnedDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProofReturnedDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDModeOfTransport", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDModeOfTransport", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDNatureOfTransaction", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDNatureOfTransaction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDDeliveryTerms", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDDeliveryTerms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Currency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Currency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoleInSeries", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoleInSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SentToJDF", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SentToJDF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsInvoiced", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgencyComPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgencyComPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsProductionJob", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProductionJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginationOfJob", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginationOfJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewJDFAcknowledged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewJDFAcknowledged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MilestoneGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MilestoneGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethodOfWorkingModified", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodOfWorkingModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobGanged", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobGanged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastMilestone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastMilestone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAssemblyJob", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAssemblyJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedStockType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedStockType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MainJobDetails] SET [MethodOfWorking] = @MethodOfWorking, [WorksPri" +
                "nted] = @WorksPrinted, [MultipleProducts] = @MultipleProducts, [JobNo] = @JobNo," +
                " [Datedb] = @Datedb, [InvoiceID] = @InvoiceID, [InvoiceCustomerCode] = @InvoiceC" +
                "ustomerCode, [InvoiceCustomerName] = @InvoiceCustomerName, [InvoiceAddress] = @I" +
                "nvoiceAddress, [InvoiceTown] = @InvoiceTown, [InvoiceCounty] = @InvoiceCounty, [" +
                "InvoicePostcode] = @InvoicePostcode, [InvoiceCountry] = @InvoiceCountry, [Invoic" +
                "eContact] = @InvoiceContact, [InvoiceTel] = @InvoiceTel, [InvoiceFax] = @Invoice" +
                "Fax, [InvoiceExchange] = @InvoiceExchange, [DeliveryCustomerCode] = @DeliveryCus" +
                "tomerCode, [DeliveryCustomerName] = @DeliveryCustomerName, [DeliveryAddress] = @" +
                "DeliveryAddress, [DeliveryTown] = @DeliveryTown, [DeliveryCounty] = @DeliveryCou" +
                "nty, [DeliveryPostcode] = @DeliveryPostcode, [DeliveryCountry] = @DeliveryCountr" +
                "y, [DeliveryContact] = @DeliveryContact, [DeliveryTel] = @DeliveryTel, [Delivery" +
                "Fax] = @DeliveryFax, [PrevJob] = @PrevJob, [OrderNo] = @OrderNo, [QuantityOrdere" +
                "d] = @QuantityOrdered, [QuantityDelivered] = @QuantityDelivered, [QuantityInStoc" +
                "k] = @QuantityInStock, [StockCode] = @StockCode, [StockSize] = @StockSize, [Ref1" +
                "] = @Ref1, [Ref2] = @Ref2, [Ref3] = @Ref3, [Ref4] = @Ref4, [Ref5] = @Ref5, [Ref6" +
                "] = @Ref6, [Ref7] = @Ref7, [Ref8] = @Ref8, [Ref9] = @Ref9, [Ref10] = @Ref10, [Jo" +
                "bType] = @JobType, [VatCode] = @VatCode, [PriceEst] = @PriceEst, [ProfitEst] = @" +
                "ProfitEst, [ProfitAct] = @ProfitAct, [JobDesc] = @JobDesc, [OurOrderNo] = @OurOr" +
                "derNo, [LastOpDate] = @LastOpDate, [LastOpCode] = @LastOpCode, [LastOpDesc] = @L" +
                "astOpDesc, [JobCompleted] = @JobCompleted, [JobCompletionDate] = @JobCompletionD" +
                "ate, [EstimateHeaderRef] = @EstimateHeaderRef, [EstimateID] = @EstimateID, [JobT" +
                "ypeDesc] = @JobTypeDesc, [JobDept] = @JobDept, [OrderLineID] = @OrderLineID, [No" +
                "minal] = @Nominal, [CostCentre] = @CostCentre, [Department] = @Department, [Unit" +
                "Price] = @UnitPrice, [QuantityInvoiced] = @QuantityInvoiced, [QuantityProduced] " +
                "= @QuantityProduced, [InvoiceCompleted] = @InvoiceCompleted, [JobCancelled] = @J" +
                "obCancelled, [Estimator] = @Estimator, [RequiredTime] = @RequiredTime, [Customer" +
                "Ref2] = @CustomerRef2, [CreateUserName] = @CreateUserName, [CreateDateTime] = @C" +
                "reateDateTime, [UpdateUserName] = @UpdateUserName, [UpdateDateTime] = @UpdateDat" +
                "eTime, [OverHeadPercent] = @OverHeadPercent, [IssueNumber] = @IssueNumber, [Deri" +
                "ved] = @Derived, [FinishedProductionDate] = @FinishedProductionDate, [PostingCod" +
                "e] = @PostingCode, [PostingContact] = @PostingContact, [OriginalEstimateHeaderRe" +
                "f] = @OriginalEstimateHeaderRef, [OriginalEstimateID] = @OriginalEstimateID, [Is" +
                "Altered] = @IsAltered, [OriginalEstimateQuantity] = @OriginalEstimateQuantity, [" +
                "ParentJob] = @ParentJob, [OutOnProof] = @OutOnProof, [ProofSentDateTime] = @Proo" +
                "fSentDateTime, [ProofReturnedDateTime] = @ProofReturnedDateTime, [Weight] = @Wei" +
                "ght, [SSDModeOfTransport] = @SSDModeOfTransport, [SSDNatureOfTransaction] = @SSD" +
                "NatureOfTransaction, [SSDDeliveryTerms] = @SSDDeliveryTerms, [Currency] = @Curre" +
                "ncy, [ExchangeRate] = @ExchangeRate, [ForeignTotal] = @ForeignTotal, [RoleInSeri" +
                "es] = @RoleInSeries, [SentToJDF] = @SentToJDF, [InvoiceCountryOfOrigin] = @Invoi" +
                "ceCountryOfOrigin, [DeliveryCountryOfOrigin] = @DeliveryCountryOfOrigin, [IsInvo" +
                "iced] = @IsInvoiced, [AgencyComPerc] = @AgencyComPerc, [JDFStatus] = @JDFStatus," +
                " [IsProductionJob] = @IsProductionJob, [OriginationOfJob] = @OriginationOfJob, [" +
                "JDFRef] = @JDFRef, [NewJDFAcknowledged] = @NewJDFAcknowledged, [MilestoneGroup] " +
                "= @MilestoneGroup, [MethodOfWorkingModified] = @MethodOfWorkingModified, [Compan" +
                "yID] = @CompanyID, [JobGanged] = @JobGanged, [DateModified] = @DateModified, [Mo" +
                "difiedByUserID] = @ModifiedByUserID, [SecurityGroupID] = @SecurityGroupID, [Last" +
                "Milestone] = @LastMilestone, [IsAssemblyJob] = @IsAssemblyJob, [DespatchDate] = " +
                "@DespatchDate, [BOMRevision] = @BOMRevision, [SalesTaxCodeID] = @SalesTaxCodeID," +
                " [SalesTaxItemID] = @SalesTaxItemID, [Email] = @Email, [CreatedStockType] = @Cre" +
                "atedStockType, [ProductTypeID] = @ProductTypeID WHERE (([ID] = @Original_ID) AND" +
                " ([dbTimeStamp] = @Original_dbTimeStamp));\r\nSELECT ID, MethodOfWorking, WorksPri" +
                "nted, MultipleProducts, JobNo, Datedb, InvoiceID, InvoiceCustomerCode, InvoiceCu" +
                "stomerName, InvoiceAddress, InvoiceTown, InvoiceCounty, InvoicePostcode, Invoice" +
                "Country, InvoiceContact, InvoiceTel, InvoiceFax, InvoiceExchange, DeliveryCustom" +
                "erCode, DeliveryCustomerName, DeliveryAddress, DeliveryTown, DeliveryCounty, Del" +
                "iveryPostcode, DeliveryCountry, DeliveryContact, DeliveryTel, DeliveryFax, PrevJ" +
                "ob, OrderNo, QuantityOrdered, QuantityDelivered, QuantityInStock, StockCode, Sto" +
                "ckSize, Ref1, Ref2, Ref3, Ref4, Ref5, Ref6, Ref7, Ref8, Ref9, Ref10, JobType, Va" +
                "tCode, PriceEst, ProfitEst, ProfitAct, JobDesc, OurOrderNo, LastOpDate, LastOpCo" +
                "de, LastOpDesc, JobCompleted, JobCompletionDate, EstimateHeaderRef, EstimateID, " +
                "JobTypeDesc, JobDept, OrderLineID, Nominal, CostCentre, Department, UnitPrice, Q" +
                "uantityInvoiced, QuantityProduced, InvoiceCompleted, JobCancelled, Estimator, Re" +
                "quiredTime, CustomerRef2, CreateUserName, CreateDateTime, UpdateUserName, Update" +
                "DateTime, OverHeadPercent, IssueNumber, Derived, FinishedProductionDate, Posting" +
                "Code, PostingContact, OriginalEstimateHeaderRef, OriginalEstimateID, IsAltered, " +
                "OriginalEstimateQuantity, ParentJob, OutOnProof, ProofSentDateTime, ProofReturne" +
                "dDateTime, Weight, SSDModeOfTransport, SSDNatureOfTransaction, SSDDeliveryTerms," +
                " Currency, ExchangeRate, ForeignTotal, RoleInSeries, SentToJDF, InvoiceCountryOf" +
                "Origin, DeliveryCountryOfOrigin, IsInvoiced, AgencyComPerc, JDFStatus, IsProduct" +
                "ionJob, OriginationOfJob, JDFRef, NewJDFAcknowledged, MilestoneGroup, MethodOfWo" +
                "rkingModified, CompanyID, JobGanged, DateModified, ModifiedByUserID, SecurityGro" +
                "upID, LastMilestone, IsAssemblyJob, DespatchDate, BOMRevision, dbTimeStamp, Sale" +
                "sTaxCodeID, SalesTaxItemID, Email, CreatedStockType, ProductTypeID FROM MainJobD" +
                "etails WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethodOfWorking", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodOfWorking", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorksPrinted", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorksPrinted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MultipleProducts", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleProducts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Datedb", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datedb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCustomerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCustomerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceTown", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceTown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCounty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCounty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoicePostcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoicePostcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceContact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceTel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceTel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceFax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceExchange", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceExchange", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCustomerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCustomerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryTown", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryTown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCounty", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCounty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryPostcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryPostcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryContact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryTel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryTel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryFax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrevJob", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrevJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityOrdered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityOrdered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityDelivered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityDelivered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityInStock", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriceEst", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceEst", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfitEst", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfitEst", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfitAct", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfitAct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OurOrderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OurOrderNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastOpDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastOpDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastOpCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastOpCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastOpDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastOpDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCompleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCompletionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCompletionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateHeaderRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTypeDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTypeDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDept", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderLineID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityInvoiced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityProduced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityProduced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCompleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCancelled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCancelled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estimator", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estimator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequiredTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequiredTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerRef2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerRef2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateUserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverHeadPercent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverHeadPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IssueNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Derived", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Derived", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinishedProductionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinishedProductionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostingCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostingCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PostingContact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PostingContact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalEstimateHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalEstimateHeaderRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalEstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalEstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAltered", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAltered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalEstimateQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalEstimateQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentJob", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutOnProof", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutOnProof", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProofSentDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProofSentDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProofReturnedDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProofReturnedDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDModeOfTransport", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDModeOfTransport", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDNatureOfTransaction", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDNatureOfTransaction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSDDeliveryTerms", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSDDeliveryTerms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Currency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Currency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExchangeRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignTotal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoleInSeries", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoleInSeries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SentToJDF", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SentToJDF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsInvoiced", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgencyComPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgencyComPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsProductionJob", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProductionJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginationOfJob", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginationOfJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewJDFAcknowledged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewJDFAcknowledged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MilestoneGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MilestoneGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MethodOfWorkingModified", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MethodOfWorkingModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobGanged", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobGanged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastMilestone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastMilestone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAssemblyJob", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAssemblyJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DespatchDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DespatchDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedStockType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedStockType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dbTimeStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbTimeStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PalletCard.Properties.Settings.Default.ThardataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, MethodOfWorking, WorksPrinted, MultipleProducts, JobNo, Datedb, Invoic" +
                "eID, InvoiceCustomerCode, InvoiceCustomerName, InvoiceAddress, InvoiceTown, Invo" +
                "iceCounty, InvoicePostcode, InvoiceCountry, InvoiceContact, InvoiceTel, InvoiceF" +
                "ax, InvoiceExchange, DeliveryCustomerCode, DeliveryCustomerName, DeliveryAddress" +
                ", DeliveryTown, DeliveryCounty, DeliveryPostcode, DeliveryCountry, DeliveryConta" +
                "ct, DeliveryTel, DeliveryFax, PrevJob, OrderNo, QuantityOrdered, QuantityDeliver" +
                "ed, QuantityInStock, StockCode, StockSize, Ref1, Ref2, Ref3, Ref4, Ref5, Ref6, R" +
                "ef7, Ref8, Ref9, Ref10, JobType, VatCode, PriceEst, ProfitEst, ProfitAct, JobDes" +
                "c, OurOrderNo, LastOpDate, LastOpCode, LastOpDesc, JobCompleted, JobCompletionDa" +
                "te, EstimateHeaderRef, EstimateID, JobTypeDesc, JobDept, OrderLineID, Nominal, C" +
                "ostCentre, Department, UnitPrice, QuantityInvoiced, QuantityProduced, InvoiceCom" +
                "pleted, JobCancelled, Estimator, RequiredTime, CustomerRef2, CreateUserName, Cre" +
                "ateDateTime, UpdateUserName, UpdateDateTime, OverHeadPercent, IssueNumber, Deriv" +
                "ed, FinishedProductionDate, PostingCode, PostingContact, OriginalEstimateHeaderR" +
                "ef, OriginalEstimateID, IsAltered, OriginalEstimateQuantity, ParentJob, OutOnPro" +
                "of, ProofSentDateTime, ProofReturnedDateTime, Weight, SSDModeOfTransport, SSDNat" +
                "ureOfTransaction, SSDDeliveryTerms, Currency, ExchangeRate, ForeignTotal, RoleIn" +
                "Series, SentToJDF, InvoiceCountryOfOrigin, DeliveryCountryOfOrigin, IsInvoiced, " +
                "AgencyComPerc, JDFStatus, IsProductionJob, OriginationOfJob, JDFRef, NewJDFAckno" +
                "wledged, MilestoneGroup, MethodOfWorkingModified, CompanyID, JobGanged, DateModi" +
                "fied, ModifiedByUserID, SecurityGroupID, LastMilestone, IsAssemblyJob, DespatchD" +
                "ate, BOMRevision, dbTimeStamp, SalesTaxCodeID, SalesTaxItemID, Email, CreatedSto" +
                "ckType, ProductTypeID FROM dbo.MainJobDetails";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ThardataDataSet.MainJobDetailsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ThardataDataSet.MainJobDetailsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ThardataDataSet.MainJobDetailsDataTable dataTable = new ThardataDataSet.MainJobDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet.MainJobDetailsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MainJobDetails");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, byte[] Original_dbTimeStamp) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_dbTimeStamp == null)) {
                throw new global::System.ArgumentNullException("Original_dbTimeStamp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_dbTimeStamp));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string MethodOfWorking, 
                    global::System.Nullable<byte> WorksPrinted, 
                    bool MultipleProducts, 
                    string JobNo, 
                    global::System.Nullable<global::System.DateTime> Datedb, 
                    global::System.Nullable<int> InvoiceID, 
                    string InvoiceCustomerCode, 
                    string InvoiceCustomerName, 
                    string InvoiceAddress, 
                    string InvoiceTown, 
                    string InvoiceCounty, 
                    string InvoicePostcode, 
                    string InvoiceCountry, 
                    string InvoiceContact, 
                    string InvoiceTel, 
                    string InvoiceFax, 
                    global::System.Nullable<short> InvoiceExchange, 
                    string DeliveryCustomerCode, 
                    string DeliveryCustomerName, 
                    string DeliveryAddress, 
                    string DeliveryTown, 
                    string DeliveryCounty, 
                    string DeliveryPostcode, 
                    string DeliveryCountry, 
                    string DeliveryContact, 
                    string DeliveryTel, 
                    string DeliveryFax, 
                    string PrevJob, 
                    string OrderNo, 
                    global::System.Nullable<double> QuantityOrdered, 
                    global::System.Nullable<double> QuantityDelivered, 
                    global::System.Nullable<double> QuantityInStock, 
                    string StockCode, 
                    string StockSize, 
                    string Ref1, 
                    string Ref2, 
                    string Ref3, 
                    string Ref4, 
                    string Ref5, 
                    string Ref6, 
                    string Ref7, 
                    string Ref8, 
                    string Ref9, 
                    string Ref10, 
                    string JobType, 
                    string VatCode, 
                    global::System.Nullable<double> PriceEst, 
                    global::System.Nullable<double> ProfitEst, 
                    global::System.Nullable<double> ProfitAct, 
                    string JobDesc, 
                    string OurOrderNo, 
                    global::System.Nullable<global::System.DateTime> LastOpDate, 
                    string LastOpCode, 
                    string LastOpDesc, 
                    bool JobCompleted, 
                    global::System.Nullable<global::System.DateTime> JobCompletionDate, 
                    string EstimateHeaderRef, 
                    global::System.Nullable<int> EstimateID, 
                    string JobTypeDesc, 
                    string JobDept, 
                    global::System.Nullable<int> OrderLineID, 
                    string Nominal, 
                    string CostCentre, 
                    string Department, 
                    global::System.Nullable<double> UnitPrice, 
                    global::System.Nullable<double> QuantityInvoiced, 
                    global::System.Nullable<double> QuantityProduced, 
                    bool InvoiceCompleted, 
                    bool JobCancelled, 
                    string Estimator, 
                    global::System.Nullable<global::System.DateTime> RequiredTime, 
                    string CustomerRef2, 
                    string CreateUserName, 
                    global::System.Nullable<global::System.DateTime> CreateDateTime, 
                    string UpdateUserName, 
                    global::System.Nullable<global::System.DateTime> UpdateDateTime, 
                    global::System.Nullable<double> OverHeadPercent, 
                    global::System.Nullable<int> IssueNumber, 
                    global::System.Nullable<byte> Derived, 
                    global::System.Nullable<global::System.DateTime> FinishedProductionDate, 
                    string PostingCode, 
                    string PostingContact, 
                    string OriginalEstimateHeaderRef, 
                    global::System.Nullable<int> OriginalEstimateID, 
                    bool IsAltered, 
                    global::System.Nullable<double> OriginalEstimateQuantity, 
                    string ParentJob, 
                    bool OutOnProof, 
                    global::System.Nullable<global::System.DateTime> ProofSentDateTime, 
                    global::System.Nullable<global::System.DateTime> ProofReturnedDateTime, 
                    global::System.Nullable<double> Weight, 
                    byte SSDModeOfTransport, 
                    byte SSDNatureOfTransaction, 
                    string SSDDeliveryTerms, 
                    int Currency, 
                    double ExchangeRate, 
                    double ForeignTotal, 
                    byte RoleInSeries, 
                    byte[] SentToJDF, 
                    string InvoiceCountryOfOrigin, 
                    string DeliveryCountryOfOrigin, 
                    bool IsInvoiced, 
                    double AgencyComPerc, 
                    string JDFStatus, 
                    bool IsProductionJob, 
                    byte OriginationOfJob, 
                    string JDFRef, 
                    bool NewJDFAcknowledged, 
                    string MilestoneGroup, 
                    bool MethodOfWorkingModified, 
                    int CompanyID, 
                    byte JobGanged, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    global::System.Nullable<int> SecurityGroupID, 
                    string LastMilestone, 
                    bool IsAssemblyJob, 
                    global::System.Nullable<global::System.DateTime> DespatchDate, 
                    int BOMRevision, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    string Email, 
                    byte CreatedStockType, 
                    int ProductTypeID) {
            if ((MethodOfWorking == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MethodOfWorking));
            }
            if ((WorksPrinted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte)(WorksPrinted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(MultipleProducts));
            if ((JobNo == null)) {
                throw new global::System.ArgumentNullException("JobNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(JobNo));
            }
            if ((Datedb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Datedb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InvoiceID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(InvoiceID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((InvoiceCustomerCode == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(InvoiceCustomerCode));
            }
            if ((InvoiceCustomerName == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(InvoiceCustomerName));
            }
            if ((InvoiceAddress == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(InvoiceAddress));
            }
            if ((InvoiceTown == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(InvoiceTown));
            }
            if ((InvoiceCounty == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(InvoiceCounty));
            }
            if ((InvoicePostcode == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(InvoicePostcode));
            }
            if ((InvoiceCountry == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(InvoiceCountry));
            }
            if ((InvoiceContact == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(InvoiceContact));
            }
            if ((InvoiceTel == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(InvoiceTel));
            }
            if ((InvoiceFax == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(InvoiceFax));
            }
            if ((InvoiceExchange.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((short)(InvoiceExchange.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DeliveryCustomerCode == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(DeliveryCustomerCode));
            }
            if ((DeliveryCustomerName == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(DeliveryCustomerName));
            }
            if ((DeliveryAddress == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(DeliveryAddress));
            }
            if ((DeliveryTown == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(DeliveryTown));
            }
            if ((DeliveryCounty == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(DeliveryCounty));
            }
            if ((DeliveryPostcode == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(DeliveryPostcode));
            }
            if ((DeliveryCountry == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(DeliveryCountry));
            }
            if ((DeliveryContact == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(DeliveryContact));
            }
            if ((DeliveryTel == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(DeliveryTel));
            }
            if ((DeliveryFax == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(DeliveryFax));
            }
            if ((PrevJob == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(PrevJob));
            }
            if ((OrderNo == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(OrderNo));
            }
            if ((QuantityOrdered.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(QuantityOrdered.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((QuantityDelivered.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((double)(QuantityDelivered.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((QuantityInStock.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(QuantityInStock.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((StockCode == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(StockCode));
            }
            if ((StockSize == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(StockSize));
            }
            if ((Ref1 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(Ref1));
            }
            if ((Ref2 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(Ref2));
            }
            if ((Ref3 == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(Ref3));
            }
            if ((Ref4 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(Ref4));
            }
            if ((Ref5 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(Ref5));
            }
            if ((Ref6 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(Ref6));
            }
            if ((Ref7 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(Ref7));
            }
            if ((Ref8 == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(Ref8));
            }
            if ((Ref9 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(Ref9));
            }
            if ((Ref10 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(Ref10));
            }
            if ((JobType == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(JobType));
            }
            if ((VatCode == null)) {
                throw new global::System.ArgumentNullException("VatCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(VatCode));
            }
            if ((PriceEst.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((double)(PriceEst.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ProfitEst.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((double)(ProfitEst.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((ProfitAct.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((double)(ProfitAct.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((JobDesc == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(JobDesc));
            }
            if ((OurOrderNo == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(OurOrderNo));
            }
            if ((LastOpDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(LastOpDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((LastOpCode == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(LastOpCode));
            }
            if ((LastOpDesc == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(LastOpDesc));
            }
            this.Adapter.InsertCommand.Parameters[54].Value = ((bool)(JobCompleted));
            if ((JobCompletionDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(JobCompletionDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((EstimateHeaderRef == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(EstimateHeaderRef));
            }
            if ((EstimateID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((int)(EstimateID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((JobTypeDesc == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(JobTypeDesc));
            }
            if ((JobDept == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(JobDept));
            }
            if ((OrderLineID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((int)(OrderLineID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Nominal == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(Nominal));
            }
            if ((CostCentre == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(CostCentre));
            }
            if ((Department == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(Department));
            }
            if ((UnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((double)(UnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((QuantityInvoiced.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((double)(QuantityInvoiced.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((QuantityProduced.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((double)(QuantityProduced.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[67].Value = ((bool)(InvoiceCompleted));
            this.Adapter.InsertCommand.Parameters[68].Value = ((bool)(JobCancelled));
            if ((Estimator == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(Estimator));
            }
            if ((RequiredTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((System.DateTime)(RequiredTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((CustomerRef2 == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(CustomerRef2));
            }
            if ((CreateUserName == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(CreateUserName));
            }
            if ((CreateDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((System.DateTime)(CreateDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((UpdateUserName == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(UpdateUserName));
            }
            if ((UpdateDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((System.DateTime)(UpdateDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((OverHeadPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((double)(OverHeadPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((IssueNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((int)(IssueNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Derived.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((byte)(Derived.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((FinishedProductionDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((System.DateTime)(FinishedProductionDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((PostingCode == null)) {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(PostingCode));
            }
            if ((PostingContact == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(PostingContact));
            }
            if ((OriginalEstimateHeaderRef == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(OriginalEstimateHeaderRef));
            }
            if ((OriginalEstimateID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[83].Value = ((int)(OriginalEstimateID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[84].Value = ((bool)(IsAltered));
            if ((OriginalEstimateQuantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((double)(OriginalEstimateQuantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((ParentJob == null)) {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = ((string)(ParentJob));
            }
            this.Adapter.InsertCommand.Parameters[87].Value = ((bool)(OutOnProof));
            if ((ProofSentDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[88].Value = ((System.DateTime)(ProofSentDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((ProofReturnedDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[89].Value = ((System.DateTime)(ProofReturnedDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Weight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[90].Value = ((double)(Weight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[91].Value = ((byte)(SSDModeOfTransport));
            this.Adapter.InsertCommand.Parameters[92].Value = ((byte)(SSDNatureOfTransaction));
            if ((SSDDeliveryTerms == null)) {
                throw new global::System.ArgumentNullException("SSDDeliveryTerms");
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = ((string)(SSDDeliveryTerms));
            }
            this.Adapter.InsertCommand.Parameters[94].Value = ((int)(Currency));
            this.Adapter.InsertCommand.Parameters[95].Value = ((double)(ExchangeRate));
            this.Adapter.InsertCommand.Parameters[96].Value = ((double)(ForeignTotal));
            this.Adapter.InsertCommand.Parameters[97].Value = ((byte)(RoleInSeries));
            if ((SentToJDF == null)) {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = ((byte[])(SentToJDF));
            }
            if ((InvoiceCountryOfOrigin == null)) {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = ((string)(InvoiceCountryOfOrigin));
            }
            if ((DeliveryCountryOfOrigin == null)) {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = ((string)(DeliveryCountryOfOrigin));
            }
            this.Adapter.InsertCommand.Parameters[101].Value = ((bool)(IsInvoiced));
            this.Adapter.InsertCommand.Parameters[102].Value = ((double)(AgencyComPerc));
            if ((JDFStatus == null)) {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = ((string)(JDFStatus));
            }
            this.Adapter.InsertCommand.Parameters[104].Value = ((bool)(IsProductionJob));
            this.Adapter.InsertCommand.Parameters[105].Value = ((byte)(OriginationOfJob));
            if ((JDFRef == null)) {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = ((string)(JDFRef));
            }
            this.Adapter.InsertCommand.Parameters[107].Value = ((bool)(NewJDFAcknowledged));
            if ((MilestoneGroup == null)) {
                this.Adapter.InsertCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[108].Value = ((string)(MilestoneGroup));
            }
            this.Adapter.InsertCommand.Parameters[109].Value = ((bool)(MethodOfWorkingModified));
            this.Adapter.InsertCommand.Parameters[110].Value = ((int)(CompanyID));
            this.Adapter.InsertCommand.Parameters[111].Value = ((byte)(JobGanged));
            if ((DateModified.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[112].Value = ((System.DateTime)(DateModified.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((ModifiedByUserID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[113].Value = ((int)(ModifiedByUserID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((SecurityGroupID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[114].Value = ((int)(SecurityGroupID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((LastMilestone == null)) {
                this.Adapter.InsertCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[115].Value = ((string)(LastMilestone));
            }
            this.Adapter.InsertCommand.Parameters[116].Value = ((bool)(IsAssemblyJob));
            if ((DespatchDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[117].Value = ((System.DateTime)(DespatchDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[118].Value = ((int)(BOMRevision));
            this.Adapter.InsertCommand.Parameters[119].Value = ((int)(SalesTaxCodeID));
            this.Adapter.InsertCommand.Parameters[120].Value = ((int)(SalesTaxItemID));
            if ((Email == null)) {
                this.Adapter.InsertCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[121].Value = ((string)(Email));
            }
            this.Adapter.InsertCommand.Parameters[122].Value = ((byte)(CreatedStockType));
            this.Adapter.InsertCommand.Parameters[123].Value = ((int)(ProductTypeID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MethodOfWorking, 
                    global::System.Nullable<byte> WorksPrinted, 
                    bool MultipleProducts, 
                    string JobNo, 
                    global::System.Nullable<global::System.DateTime> Datedb, 
                    global::System.Nullable<int> InvoiceID, 
                    string InvoiceCustomerCode, 
                    string InvoiceCustomerName, 
                    string InvoiceAddress, 
                    string InvoiceTown, 
                    string InvoiceCounty, 
                    string InvoicePostcode, 
                    string InvoiceCountry, 
                    string InvoiceContact, 
                    string InvoiceTel, 
                    string InvoiceFax, 
                    global::System.Nullable<short> InvoiceExchange, 
                    string DeliveryCustomerCode, 
                    string DeliveryCustomerName, 
                    string DeliveryAddress, 
                    string DeliveryTown, 
                    string DeliveryCounty, 
                    string DeliveryPostcode, 
                    string DeliveryCountry, 
                    string DeliveryContact, 
                    string DeliveryTel, 
                    string DeliveryFax, 
                    string PrevJob, 
                    string OrderNo, 
                    global::System.Nullable<double> QuantityOrdered, 
                    global::System.Nullable<double> QuantityDelivered, 
                    global::System.Nullable<double> QuantityInStock, 
                    string StockCode, 
                    string StockSize, 
                    string Ref1, 
                    string Ref2, 
                    string Ref3, 
                    string Ref4, 
                    string Ref5, 
                    string Ref6, 
                    string Ref7, 
                    string Ref8, 
                    string Ref9, 
                    string Ref10, 
                    string JobType, 
                    string VatCode, 
                    global::System.Nullable<double> PriceEst, 
                    global::System.Nullable<double> ProfitEst, 
                    global::System.Nullable<double> ProfitAct, 
                    string JobDesc, 
                    string OurOrderNo, 
                    global::System.Nullable<global::System.DateTime> LastOpDate, 
                    string LastOpCode, 
                    string LastOpDesc, 
                    bool JobCompleted, 
                    global::System.Nullable<global::System.DateTime> JobCompletionDate, 
                    string EstimateHeaderRef, 
                    global::System.Nullable<int> EstimateID, 
                    string JobTypeDesc, 
                    string JobDept, 
                    global::System.Nullable<int> OrderLineID, 
                    string Nominal, 
                    string CostCentre, 
                    string Department, 
                    global::System.Nullable<double> UnitPrice, 
                    global::System.Nullable<double> QuantityInvoiced, 
                    global::System.Nullable<double> QuantityProduced, 
                    bool InvoiceCompleted, 
                    bool JobCancelled, 
                    string Estimator, 
                    global::System.Nullable<global::System.DateTime> RequiredTime, 
                    string CustomerRef2, 
                    string CreateUserName, 
                    global::System.Nullable<global::System.DateTime> CreateDateTime, 
                    string UpdateUserName, 
                    global::System.Nullable<global::System.DateTime> UpdateDateTime, 
                    global::System.Nullable<double> OverHeadPercent, 
                    global::System.Nullable<int> IssueNumber, 
                    global::System.Nullable<byte> Derived, 
                    global::System.Nullable<global::System.DateTime> FinishedProductionDate, 
                    string PostingCode, 
                    string PostingContact, 
                    string OriginalEstimateHeaderRef, 
                    global::System.Nullable<int> OriginalEstimateID, 
                    bool IsAltered, 
                    global::System.Nullable<double> OriginalEstimateQuantity, 
                    string ParentJob, 
                    bool OutOnProof, 
                    global::System.Nullable<global::System.DateTime> ProofSentDateTime, 
                    global::System.Nullable<global::System.DateTime> ProofReturnedDateTime, 
                    global::System.Nullable<double> Weight, 
                    byte SSDModeOfTransport, 
                    byte SSDNatureOfTransaction, 
                    string SSDDeliveryTerms, 
                    int Currency, 
                    double ExchangeRate, 
                    double ForeignTotal, 
                    byte RoleInSeries, 
                    byte[] SentToJDF, 
                    string InvoiceCountryOfOrigin, 
                    string DeliveryCountryOfOrigin, 
                    bool IsInvoiced, 
                    double AgencyComPerc, 
                    string JDFStatus, 
                    bool IsProductionJob, 
                    byte OriginationOfJob, 
                    string JDFRef, 
                    bool NewJDFAcknowledged, 
                    string MilestoneGroup, 
                    bool MethodOfWorkingModified, 
                    int CompanyID, 
                    byte JobGanged, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    global::System.Nullable<int> SecurityGroupID, 
                    string LastMilestone, 
                    bool IsAssemblyJob, 
                    global::System.Nullable<global::System.DateTime> DespatchDate, 
                    int BOMRevision, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    string Email, 
                    byte CreatedStockType, 
                    int ProductTypeID, 
                    int Original_ID, 
                    byte[] Original_dbTimeStamp, 
                    int ID) {
            if ((MethodOfWorking == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MethodOfWorking));
            }
            if ((WorksPrinted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte)(WorksPrinted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(MultipleProducts));
            if ((JobNo == null)) {
                throw new global::System.ArgumentNullException("JobNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(JobNo));
            }
            if ((Datedb.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Datedb.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InvoiceID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(InvoiceID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((InvoiceCustomerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(InvoiceCustomerCode));
            }
            if ((InvoiceCustomerName == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(InvoiceCustomerName));
            }
            if ((InvoiceAddress == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(InvoiceAddress));
            }
            if ((InvoiceTown == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(InvoiceTown));
            }
            if ((InvoiceCounty == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(InvoiceCounty));
            }
            if ((InvoicePostcode == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(InvoicePostcode));
            }
            if ((InvoiceCountry == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(InvoiceCountry));
            }
            if ((InvoiceContact == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(InvoiceContact));
            }
            if ((InvoiceTel == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(InvoiceTel));
            }
            if ((InvoiceFax == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(InvoiceFax));
            }
            if ((InvoiceExchange.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((short)(InvoiceExchange.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DeliveryCustomerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(DeliveryCustomerCode));
            }
            if ((DeliveryCustomerName == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(DeliveryCustomerName));
            }
            if ((DeliveryAddress == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(DeliveryAddress));
            }
            if ((DeliveryTown == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(DeliveryTown));
            }
            if ((DeliveryCounty == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(DeliveryCounty));
            }
            if ((DeliveryPostcode == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(DeliveryPostcode));
            }
            if ((DeliveryCountry == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(DeliveryCountry));
            }
            if ((DeliveryContact == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(DeliveryContact));
            }
            if ((DeliveryTel == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(DeliveryTel));
            }
            if ((DeliveryFax == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(DeliveryFax));
            }
            if ((PrevJob == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(PrevJob));
            }
            if ((OrderNo == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(OrderNo));
            }
            if ((QuantityOrdered.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(QuantityOrdered.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((QuantityDelivered.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(QuantityDelivered.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((QuantityInStock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(QuantityInStock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((StockCode == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(StockCode));
            }
            if ((StockSize == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(StockSize));
            }
            if ((Ref1 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Ref1));
            }
            if ((Ref2 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Ref2));
            }
            if ((Ref3 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Ref3));
            }
            if ((Ref4 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Ref4));
            }
            if ((Ref5 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Ref5));
            }
            if ((Ref6 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Ref6));
            }
            if ((Ref7 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Ref7));
            }
            if ((Ref8 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Ref8));
            }
            if ((Ref9 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Ref9));
            }
            if ((Ref10 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Ref10));
            }
            if ((JobType == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(JobType));
            }
            if ((VatCode == null)) {
                throw new global::System.ArgumentNullException("VatCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(VatCode));
            }
            if ((PriceEst.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(PriceEst.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ProfitEst.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(ProfitEst.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((ProfitAct.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(ProfitAct.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((JobDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(JobDesc));
            }
            if ((OurOrderNo == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(OurOrderNo));
            }
            if ((LastOpDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(LastOpDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((LastOpCode == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(LastOpCode));
            }
            if ((LastOpDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(LastOpDesc));
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(JobCompleted));
            if ((JobCompletionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(JobCompletionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((EstimateHeaderRef == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(EstimateHeaderRef));
            }
            if ((EstimateID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(EstimateID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((JobTypeDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(JobTypeDesc));
            }
            if ((JobDept == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(JobDept));
            }
            if ((OrderLineID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(OrderLineID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Nominal == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Nominal));
            }
            if ((CostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(CostCentre));
            }
            if ((Department == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Department));
            }
            if ((UnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((double)(UnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((QuantityInvoiced.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((double)(QuantityInvoiced.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((QuantityProduced.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((double)(QuantityProduced.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(InvoiceCompleted));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((bool)(JobCancelled));
            if ((Estimator == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Estimator));
            }
            if ((RequiredTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((System.DateTime)(RequiredTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((CustomerRef2 == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(CustomerRef2));
            }
            if ((CreateUserName == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(CreateUserName));
            }
            if ((CreateDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((System.DateTime)(CreateDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((UpdateUserName == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(UpdateUserName));
            }
            if ((UpdateDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(UpdateDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((OverHeadPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((double)(OverHeadPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((IssueNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(IssueNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Derived.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((byte)(Derived.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((FinishedProductionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(FinishedProductionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((PostingCode == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(PostingCode));
            }
            if ((PostingContact == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(PostingContact));
            }
            if ((OriginalEstimateHeaderRef == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(OriginalEstimateHeaderRef));
            }
            if ((OriginalEstimateID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((int)(OriginalEstimateID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[84].Value = ((bool)(IsAltered));
            if ((OriginalEstimateQuantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((double)(OriginalEstimateQuantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((ParentJob == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(ParentJob));
            }
            this.Adapter.UpdateCommand.Parameters[87].Value = ((bool)(OutOnProof));
            if ((ProofSentDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((System.DateTime)(ProofSentDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((ProofReturnedDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(ProofReturnedDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((double)(Weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[91].Value = ((byte)(SSDModeOfTransport));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((byte)(SSDNatureOfTransaction));
            if ((SSDDeliveryTerms == null)) {
                throw new global::System.ArgumentNullException("SSDDeliveryTerms");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(SSDDeliveryTerms));
            }
            this.Adapter.UpdateCommand.Parameters[94].Value = ((int)(Currency));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((double)(ExchangeRate));
            this.Adapter.UpdateCommand.Parameters[96].Value = ((double)(ForeignTotal));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((byte)(RoleInSeries));
            if ((SentToJDF == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((byte[])(SentToJDF));
            }
            if ((InvoiceCountryOfOrigin == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(InvoiceCountryOfOrigin));
            }
            if ((DeliveryCountryOfOrigin == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(DeliveryCountryOfOrigin));
            }
            this.Adapter.UpdateCommand.Parameters[101].Value = ((bool)(IsInvoiced));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((double)(AgencyComPerc));
            if ((JDFStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(JDFStatus));
            }
            this.Adapter.UpdateCommand.Parameters[104].Value = ((bool)(IsProductionJob));
            this.Adapter.UpdateCommand.Parameters[105].Value = ((byte)(OriginationOfJob));
            if ((JDFRef == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(JDFRef));
            }
            this.Adapter.UpdateCommand.Parameters[107].Value = ((bool)(NewJDFAcknowledged));
            if ((MilestoneGroup == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(MilestoneGroup));
            }
            this.Adapter.UpdateCommand.Parameters[109].Value = ((bool)(MethodOfWorkingModified));
            this.Adapter.UpdateCommand.Parameters[110].Value = ((int)(CompanyID));
            this.Adapter.UpdateCommand.Parameters[111].Value = ((byte)(JobGanged));
            if ((DateModified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((System.DateTime)(DateModified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((ModifiedByUserID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(ModifiedByUserID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((SecurityGroupID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((int)(SecurityGroupID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((LastMilestone == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(LastMilestone));
            }
            this.Adapter.UpdateCommand.Parameters[116].Value = ((bool)(IsAssemblyJob));
            if ((DespatchDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((System.DateTime)(DespatchDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(BOMRevision));
            this.Adapter.UpdateCommand.Parameters[119].Value = ((int)(SalesTaxCodeID));
            this.Adapter.UpdateCommand.Parameters[120].Value = ((int)(SalesTaxItemID));
            if ((Email == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Email));
            }
            this.Adapter.UpdateCommand.Parameters[122].Value = ((byte)(CreatedStockType));
            this.Adapter.UpdateCommand.Parameters[123].Value = ((int)(ProductTypeID));
            this.Adapter.UpdateCommand.Parameters[124].Value = ((int)(Original_ID));
            if ((Original_dbTimeStamp == null)) {
                throw new global::System.ArgumentNullException("Original_dbTimeStamp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((byte[])(Original_dbTimeStamp));
            }
            this.Adapter.UpdateCommand.Parameters[126].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MethodOfWorking, 
                    global::System.Nullable<byte> WorksPrinted, 
                    bool MultipleProducts, 
                    string JobNo, 
                    global::System.Nullable<global::System.DateTime> Datedb, 
                    global::System.Nullable<int> InvoiceID, 
                    string InvoiceCustomerCode, 
                    string InvoiceCustomerName, 
                    string InvoiceAddress, 
                    string InvoiceTown, 
                    string InvoiceCounty, 
                    string InvoicePostcode, 
                    string InvoiceCountry, 
                    string InvoiceContact, 
                    string InvoiceTel, 
                    string InvoiceFax, 
                    global::System.Nullable<short> InvoiceExchange, 
                    string DeliveryCustomerCode, 
                    string DeliveryCustomerName, 
                    string DeliveryAddress, 
                    string DeliveryTown, 
                    string DeliveryCounty, 
                    string DeliveryPostcode, 
                    string DeliveryCountry, 
                    string DeliveryContact, 
                    string DeliveryTel, 
                    string DeliveryFax, 
                    string PrevJob, 
                    string OrderNo, 
                    global::System.Nullable<double> QuantityOrdered, 
                    global::System.Nullable<double> QuantityDelivered, 
                    global::System.Nullable<double> QuantityInStock, 
                    string StockCode, 
                    string StockSize, 
                    string Ref1, 
                    string Ref2, 
                    string Ref3, 
                    string Ref4, 
                    string Ref5, 
                    string Ref6, 
                    string Ref7, 
                    string Ref8, 
                    string Ref9, 
                    string Ref10, 
                    string JobType, 
                    string VatCode, 
                    global::System.Nullable<double> PriceEst, 
                    global::System.Nullable<double> ProfitEst, 
                    global::System.Nullable<double> ProfitAct, 
                    string JobDesc, 
                    string OurOrderNo, 
                    global::System.Nullable<global::System.DateTime> LastOpDate, 
                    string LastOpCode, 
                    string LastOpDesc, 
                    bool JobCompleted, 
                    global::System.Nullable<global::System.DateTime> JobCompletionDate, 
                    string EstimateHeaderRef, 
                    global::System.Nullable<int> EstimateID, 
                    string JobTypeDesc, 
                    string JobDept, 
                    global::System.Nullable<int> OrderLineID, 
                    string Nominal, 
                    string CostCentre, 
                    string Department, 
                    global::System.Nullable<double> UnitPrice, 
                    global::System.Nullable<double> QuantityInvoiced, 
                    global::System.Nullable<double> QuantityProduced, 
                    bool InvoiceCompleted, 
                    bool JobCancelled, 
                    string Estimator, 
                    global::System.Nullable<global::System.DateTime> RequiredTime, 
                    string CustomerRef2, 
                    string CreateUserName, 
                    global::System.Nullable<global::System.DateTime> CreateDateTime, 
                    string UpdateUserName, 
                    global::System.Nullable<global::System.DateTime> UpdateDateTime, 
                    global::System.Nullable<double> OverHeadPercent, 
                    global::System.Nullable<int> IssueNumber, 
                    global::System.Nullable<byte> Derived, 
                    global::System.Nullable<global::System.DateTime> FinishedProductionDate, 
                    string PostingCode, 
                    string PostingContact, 
                    string OriginalEstimateHeaderRef, 
                    global::System.Nullable<int> OriginalEstimateID, 
                    bool IsAltered, 
                    global::System.Nullable<double> OriginalEstimateQuantity, 
                    string ParentJob, 
                    bool OutOnProof, 
                    global::System.Nullable<global::System.DateTime> ProofSentDateTime, 
                    global::System.Nullable<global::System.DateTime> ProofReturnedDateTime, 
                    global::System.Nullable<double> Weight, 
                    byte SSDModeOfTransport, 
                    byte SSDNatureOfTransaction, 
                    string SSDDeliveryTerms, 
                    int Currency, 
                    double ExchangeRate, 
                    double ForeignTotal, 
                    byte RoleInSeries, 
                    byte[] SentToJDF, 
                    string InvoiceCountryOfOrigin, 
                    string DeliveryCountryOfOrigin, 
                    bool IsInvoiced, 
                    double AgencyComPerc, 
                    string JDFStatus, 
                    bool IsProductionJob, 
                    byte OriginationOfJob, 
                    string JDFRef, 
                    bool NewJDFAcknowledged, 
                    string MilestoneGroup, 
                    bool MethodOfWorkingModified, 
                    int CompanyID, 
                    byte JobGanged, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    global::System.Nullable<int> SecurityGroupID, 
                    string LastMilestone, 
                    bool IsAssemblyJob, 
                    global::System.Nullable<global::System.DateTime> DespatchDate, 
                    int BOMRevision, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    string Email, 
                    byte CreatedStockType, 
                    int ProductTypeID, 
                    int Original_ID, 
                    byte[] Original_dbTimeStamp) {
            return this.Update(MethodOfWorking, WorksPrinted, MultipleProducts, JobNo, Datedb, InvoiceID, InvoiceCustomerCode, InvoiceCustomerName, InvoiceAddress, InvoiceTown, InvoiceCounty, InvoicePostcode, InvoiceCountry, InvoiceContact, InvoiceTel, InvoiceFax, InvoiceExchange, DeliveryCustomerCode, DeliveryCustomerName, DeliveryAddress, DeliveryTown, DeliveryCounty, DeliveryPostcode, DeliveryCountry, DeliveryContact, DeliveryTel, DeliveryFax, PrevJob, OrderNo, QuantityOrdered, QuantityDelivered, QuantityInStock, StockCode, StockSize, Ref1, Ref2, Ref3, Ref4, Ref5, Ref6, Ref7, Ref8, Ref9, Ref10, JobType, VatCode, PriceEst, ProfitEst, ProfitAct, JobDesc, OurOrderNo, LastOpDate, LastOpCode, LastOpDesc, JobCompleted, JobCompletionDate, EstimateHeaderRef, EstimateID, JobTypeDesc, JobDept, OrderLineID, Nominal, CostCentre, Department, UnitPrice, QuantityInvoiced, QuantityProduced, InvoiceCompleted, JobCancelled, Estimator, RequiredTime, CustomerRef2, CreateUserName, CreateDateTime, UpdateUserName, UpdateDateTime, OverHeadPercent, IssueNumber, Derived, FinishedProductionDate, PostingCode, PostingContact, OriginalEstimateHeaderRef, OriginalEstimateID, IsAltered, OriginalEstimateQuantity, ParentJob, OutOnProof, ProofSentDateTime, ProofReturnedDateTime, Weight, SSDModeOfTransport, SSDNatureOfTransaction, SSDDeliveryTerms, Currency, ExchangeRate, ForeignTotal, RoleInSeries, SentToJDF, InvoiceCountryOfOrigin, DeliveryCountryOfOrigin, IsInvoiced, AgencyComPerc, JDFStatus, IsProductionJob, OriginationOfJob, JDFRef, NewJDFAcknowledged, MilestoneGroup, MethodOfWorkingModified, CompanyID, JobGanged, DateModified, ModifiedByUserID, SecurityGroupID, LastMilestone, IsAssemblyJob, DespatchDate, BOMRevision, SalesTaxCodeID, SalesTaxItemID, Email, CreatedStockType, ProductTypeID, Original_ID, Original_dbTimeStamp, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OrderLineTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OrderLineTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OrderLine";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("UseDiscountMatrix", "UseDiscountMatrix");
            tableMapping.ColumnMappings.Add("OrderNo", "OrderNo");
            tableMapping.ColumnMappings.Add("ProductCode", "ProductCode");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("NettAmount", "NettAmount");
            tableMapping.ColumnMappings.Add("VatCode", "VatCode");
            tableMapping.ColumnMappings.Add("VatAmount", "VatAmount");
            tableMapping.ColumnMappings.Add("Required", "Required");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("DeliveryCode", "DeliveryCode");
            tableMapping.ColumnMappings.Add("DeliveryName", "DeliveryName");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("Pricingunits", "Pricingunits");
            tableMapping.ColumnMappings.Add("NominalCode", "NominalCode");
            tableMapping.ColumnMappings.Add("CostCentre", "CostCentre");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("QuantityDelivered", "QuantityDelivered");
            tableMapping.ColumnMappings.Add("QuantityInvoiced", "QuantityInvoiced");
            tableMapping.ColumnMappings.Add("JobNo", "JobNo");
            tableMapping.ColumnMappings.Add("ProductID", "ProductID");
            tableMapping.ColumnMappings.Add("OriginalOrderLineID", "OriginalOrderLineID");
            tableMapping.ColumnMappings.Add("DiscountPerc", "DiscountPerc");
            tableMapping.ColumnMappings.Add("CarriageVatCode", "CarriageVatCode");
            tableMapping.ColumnMappings.Add("CarriageNetAmount", "CarriageNetAmount");
            tableMapping.ColumnMappings.Add("CarriageVatAmount", "CarriageVatAmount");
            tableMapping.ColumnMappings.Add("CarriageNominal", "CarriageNominal");
            tableMapping.ColumnMappings.Add("CarriageCostCentre", "CarriageCostCentre");
            tableMapping.ColumnMappings.Add("CarriageDepartment", "CarriageDepartment");
            tableMapping.ColumnMappings.Add("LineNumber", "LineNumber");
            tableMapping.ColumnMappings.Add("QuantityAllocated", "QuantityAllocated");
            tableMapping.ColumnMappings.Add("Ref1", "Ref1");
            tableMapping.ColumnMappings.Add("Ref2", "Ref2");
            tableMapping.ColumnMappings.Add("NumberOfDistributions", "NumberOfDistributions");
            tableMapping.ColumnMappings.Add("ForeignUnitPrice", "ForeignUnitPrice");
            tableMapping.ColumnMappings.Add("ForeignNettAmount", "ForeignNettAmount");
            tableMapping.ColumnMappings.Add("ForeignVatAmount", "ForeignVatAmount");
            tableMapping.ColumnMappings.Add("ForeignCarriageNet", "ForeignCarriageNet");
            tableMapping.ColumnMappings.Add("ForeignCarriageVat", "ForeignCarriageVat");
            tableMapping.ColumnMappings.Add("QuantityConfirmed", "QuantityConfirmed");
            tableMapping.ColumnMappings.Add("Instructions", "Instructions");
            tableMapping.ColumnMappings.Add("TransRef", "TransRef");
            tableMapping.ColumnMappings.Add("TransJobNo", "TransJobNo");
            tableMapping.ColumnMappings.Add("TransSell", "TransSell");
            tableMapping.ColumnMappings.Add("DiscountType", "DiscountType");
            tableMapping.ColumnMappings.Add("DiscountAmount", "DiscountAmount");
            tableMapping.ColumnMappings.Add("Pages", "Pages");
            tableMapping.ColumnMappings.Add("W4PCStatus", "W4PCStatus");
            tableMapping.ColumnMappings.Add("Leaves", "Leaves");
            tableMapping.ColumnMappings.Add("QuantityPicked", "QuantityPicked");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            tableMapping.ColumnMappings.Add("EstimateID", "EstimateID");
            tableMapping.ColumnMappings.Add("QuantityPacked", "QuantityPacked");
            tableMapping.ColumnMappings.Add("OrderID", "OrderID");
            tableMapping.ColumnMappings.Add("JDFJobName", "JDFJobName");
            tableMapping.ColumnMappings.Add("DateModified", "DateModified");
            tableMapping.ColumnMappings.Add("ModifiedByUserID", "ModifiedByUserID");
            tableMapping.ColumnMappings.Add("ChiliDocumentID", "ChiliDocumentID");
            tableMapping.ColumnMappings.Add("AssetID", "AssetID");
            tableMapping.ColumnMappings.Add("ParentOrderLineID", "ParentOrderLineID");
            tableMapping.ColumnMappings.Add("ParentOrderID", "ParentOrderID");
            tableMapping.ColumnMappings.Add("IsConfigurable", "IsConfigurable");
            tableMapping.ColumnMappings.Add("SalesTaxCodeID", "SalesTaxCodeID");
            tableMapping.ColumnMappings.Add("SalesTaxItemID", "SalesTaxItemID");
            tableMapping.ColumnMappings.Add("BOMRevision", "BOMRevision");
            tableMapping.ColumnMappings.Add("TransID", "TransID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[OrderLine] WHERE (([ID] = @Original_ID) AND ([UseDiscountMatri" +
                "x] = @Original_UseDiscountMatrix) AND ([OrderNo] = @Original_OrderNo) AND ((@IsN" +
                "ull_ProductCode = 1 AND [ProductCode] IS NULL) OR ([ProductCode] = @Original_Pro" +
                "ductCode)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Descrip" +
                "tion] = @Original_Description)) AND ([Quantity] = @Original_Quantity) AND ([Nett" +
                "Amount] = @Original_NettAmount) AND ((@IsNull_VatCode = 1 AND [VatCode] IS NULL)" +
                " OR ([VatCode] = @Original_VatCode)) AND ([VatAmount] = @Original_VatAmount) AND" +
                " ((@IsNull_Required = 1 AND [Required] IS NULL) OR ([Required] = @Original_Requi" +
                "red)) AND ([Total] = @Original_Total) AND ((@IsNull_DeliveryCode = 1 AND [Delive" +
                "ryCode] IS NULL) OR ([DeliveryCode] = @Original_DeliveryCode)) AND ((@IsNull_Del" +
                "iveryName = 1 AND [DeliveryName] IS NULL) OR ([DeliveryName] = @Original_Deliver" +
                "yName)) AND ([UnitPrice] = @Original_UnitPrice) AND ((@IsNull_Pricingunits = 1 A" +
                "ND [Pricingunits] IS NULL) OR ([Pricingunits] = @Original_Pricingunits)) AND ((@" +
                "IsNull_NominalCode = 1 AND [NominalCode] IS NULL) OR ([NominalCode] = @Original_" +
                "NominalCode)) AND ((@IsNull_CostCentre = 1 AND [CostCentre] IS NULL) OR ([CostCe" +
                "ntre] = @Original_CostCentre)) AND ((@IsNull_Department = 1 AND [Department] IS " +
                "NULL) OR ([Department] = @Original_Department)) AND ([QuantityDelivered] = @Orig" +
                "inal_QuantityDelivered) AND ([QuantityInvoiced] = @Original_QuantityInvoiced) AN" +
                "D ((@IsNull_JobNo = 1 AND [JobNo] IS NULL) OR ([JobNo] = @Original_JobNo)) AND (" +
                "[ProductID] = @Original_ProductID) AND ([OriginalOrderLineID] = @Original_Origin" +
                "alOrderLineID) AND ([DiscountPerc] = @Original_DiscountPerc) AND ((@IsNull_Carri" +
                "ageVatCode = 1 AND [CarriageVatCode] IS NULL) OR ([CarriageVatCode] = @Original_" +
                "CarriageVatCode)) AND ([CarriageNetAmount] = @Original_CarriageNetAmount) AND ([" +
                "CarriageVatAmount] = @Original_CarriageVatAmount) AND ((@IsNull_CarriageNominal " +
                "= 1 AND [CarriageNominal] IS NULL) OR ([CarriageNominal] = @Original_CarriageNom" +
                "inal)) AND ((@IsNull_CarriageCostCentre = 1 AND [CarriageCostCentre] IS NULL) OR" +
                " ([CarriageCostCentre] = @Original_CarriageCostCentre)) AND ((@IsNull_CarriageDe" +
                "partment = 1 AND [CarriageDepartment] IS NULL) OR ([CarriageDepartment] = @Origi" +
                "nal_CarriageDepartment)) AND ([LineNumber] = @Original_LineNumber) AND ([Quantit" +
                "yAllocated] = @Original_QuantityAllocated) AND ((@IsNull_Ref1 = 1 AND [Ref1] IS " +
                "NULL) OR ([Ref1] = @Original_Ref1)) AND ((@IsNull_Ref2 = 1 AND [Ref2] IS NULL) O" +
                "R ([Ref2] = @Original_Ref2)) AND ([NumberOfDistributions] = @Original_NumberOfDi" +
                "stributions) AND ([ForeignUnitPrice] = @Original_ForeignUnitPrice) AND ([Foreign" +
                "NettAmount] = @Original_ForeignNettAmount) AND ([ForeignVatAmount] = @Original_F" +
                "oreignVatAmount) AND ([ForeignCarriageNet] = @Original_ForeignCarriageNet) AND (" +
                "[ForeignCarriageVat] = @Original_ForeignCarriageVat) AND ([QuantityConfirmed] = " +
                "@Original_QuantityConfirmed) AND ((@IsNull_Instructions = 1 AND [Instructions] I" +
                "S NULL) OR ([Instructions] = @Original_Instructions)) AND ((@IsNull_TransRef = 1" +
                " AND [TransRef] IS NULL) OR ([TransRef] = @Original_TransRef)) AND ((@IsNull_Tra" +
                "nsJobNo = 1 AND [TransJobNo] IS NULL) OR ([TransJobNo] = @Original_TransJobNo)) " +
                "AND ([TransSell] = @Original_TransSell) AND ([DiscountType] = @Original_Discount" +
                "Type) AND ([DiscountAmount] = @Original_DiscountAmount) AND ((@IsNull_Pages = 1 " +
                "AND [Pages] IS NULL) OR ([Pages] = @Original_Pages)) AND ((@IsNull_W4PCStatus = " +
                "1 AND [W4PCStatus] IS NULL) OR ([W4PCStatus] = @Original_W4PCStatus)) AND ([Leav" +
                "es] = @Original_Leaves) AND ([QuantityPicked] = @Original_QuantityPicked) AND ([" +
                "Weight] = @Original_Weight) AND ([EstimateID] = @Original_EstimateID) AND ([Quan" +
                "tityPacked] = @Original_QuantityPacked) AND ([OrderID] = @Original_OrderID) AND " +
                "((@IsNull_JDFJobName = 1 AND [JDFJobName] IS NULL) OR ([JDFJobName] = @Original_" +
                "JDFJobName)) AND ((@IsNull_DateModified = 1 AND [DateModified] IS NULL) OR ([Dat" +
                "eModified] = @Original_DateModified)) AND ((@IsNull_ModifiedByUserID = 1 AND [Mo" +
                "difiedByUserID] IS NULL) OR ([ModifiedByUserID] = @Original_ModifiedByUserID)) A" +
                "ND ((@IsNull_ChiliDocumentID = 1 AND [ChiliDocumentID] IS NULL) OR ([ChiliDocume" +
                "ntID] = @Original_ChiliDocumentID)) AND ((@IsNull_AssetID = 1 AND [AssetID] IS N" +
                "ULL) OR ([AssetID] = @Original_AssetID)) AND ([ParentOrderLineID] = @Original_Pa" +
                "rentOrderLineID) AND ([ParentOrderID] = @Original_ParentOrderID) AND ([IsConfigu" +
                "rable] = @Original_IsConfigurable) AND ([SalesTaxCodeID] = @Original_SalesTaxCod" +
                "eID) AND ([SalesTaxItemID] = @Original_SalesTaxItemID) AND ([BOMRevision] = @Ori" +
                "ginal_BOMRevision) AND ([TransID] = @Original_TransID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseDiscountMatrix", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseDiscountMatrix", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NettAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NettAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VatCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VatCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Required", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Required", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Required", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Required", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pricingunits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pricingunits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pricingunits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pricingunits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NominalCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NominalCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NominalCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NominalCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Department", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityDelivered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityDelivered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityInvoiced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInvoiced", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalOrderLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderLineID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DiscountPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountPerc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CarriageVatCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageVatCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageVatCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageVatCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageNetAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageNetAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageVatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageVatAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CarriageNominal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageNominal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageNominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageNominal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CarriageCostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageCostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageCostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageCostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CarriageDepartment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageDepartment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageDepartment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageDepartment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityAllocated", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityAllocated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ref1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ref1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ref2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ref2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberOfDistributions", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfDistributions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignNettAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignNettAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignVatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignVatAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignCarriageNet", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCarriageNet", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignCarriageVat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCarriageVat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityConfirmed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityConfirmed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Instructions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Instructions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransJobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransJobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransJobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransSell", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransSell", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DiscountType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DiscountAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pages", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pages", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_W4PCStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W4PCStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W4PCStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W4PCStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Leaves", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leaves", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityPicked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityPicked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityPacked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityPacked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JDFJobName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFJobName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JDFJobName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFJobName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateModified", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ChiliDocumentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChiliDocumentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChiliDocumentID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChiliDocumentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AssetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AssetID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AssetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AssetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParentOrderLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentOrderLineID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParentOrderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentOrderID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConfigurable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfigurable", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OrderLine] ([UseDiscountMatrix], [OrderNo], [ProductCode], [De" +
                "scription], [Quantity], [NettAmount], [VatCode], [VatAmount], [Required], [Total" +
                "], [DeliveryCode], [DeliveryName], [UnitPrice], [Pricingunits], [NominalCode], [" +
                "CostCentre], [Department], [QuantityDelivered], [QuantityInvoiced], [JobNo], [Pr" +
                "oductID], [OriginalOrderLineID], [DiscountPerc], [CarriageVatCode], [CarriageNet" +
                "Amount], [CarriageVatAmount], [CarriageNominal], [CarriageCostCentre], [Carriage" +
                "Department], [LineNumber], [QuantityAllocated], [Ref1], [Ref2], [NumberOfDistrib" +
                "utions], [ForeignUnitPrice], [ForeignNettAmount], [ForeignVatAmount], [ForeignCa" +
                "rriageNet], [ForeignCarriageVat], [QuantityConfirmed], [Instructions], [TransRef" +
                "], [TransJobNo], [TransSell], [DiscountType], [DiscountAmount], [Pages], [W4PCSt" +
                "atus], [Leaves], [QuantityPicked], [Weight], [EstimateID], [QuantityPacked], [Or" +
                "derID], [JDFJobName], [DateModified], [ModifiedByUserID], [ChiliDocumentID], [As" +
                "setID], [ParentOrderLineID], [ParentOrderID], [IsConfigurable], [SalesTaxCodeID]" +
                ", [SalesTaxItemID], [BOMRevision], [TransID]) VALUES (@UseDiscountMatrix, @Order" +
                "No, @ProductCode, @Description, @Quantity, @NettAmount, @VatCode, @VatAmount, @R" +
                "equired, @Total, @DeliveryCode, @DeliveryName, @UnitPrice, @Pricingunits, @Nomin" +
                "alCode, @CostCentre, @Department, @QuantityDelivered, @QuantityInvoiced, @JobNo," +
                " @ProductID, @OriginalOrderLineID, @DiscountPerc, @CarriageVatCode, @CarriageNet" +
                "Amount, @CarriageVatAmount, @CarriageNominal, @CarriageCostCentre, @CarriageDepa" +
                "rtment, @LineNumber, @QuantityAllocated, @Ref1, @Ref2, @NumberOfDistributions, @" +
                "ForeignUnitPrice, @ForeignNettAmount, @ForeignVatAmount, @ForeignCarriageNet, @F" +
                "oreignCarriageVat, @QuantityConfirmed, @Instructions, @TransRef, @TransJobNo, @T" +
                "ransSell, @DiscountType, @DiscountAmount, @Pages, @W4PCStatus, @Leaves, @Quantit" +
                "yPicked, @Weight, @EstimateID, @QuantityPacked, @OrderID, @JDFJobName, @DateModi" +
                "fied, @ModifiedByUserID, @ChiliDocumentID, @AssetID, @ParentOrderLineID, @Parent" +
                "OrderID, @IsConfigurable, @SalesTaxCodeID, @SalesTaxItemID, @BOMRevision, @Trans" +
                "ID);\r\nSELECT ID, UseDiscountMatrix, OrderNo, ProductCode, Description, Quantity," +
                " NettAmount, VatCode, VatAmount, Required, Total, DeliveryCode, DeliveryName, Un" +
                "itPrice, Pricingunits, NominalCode, CostCentre, Department, QuantityDelivered, Q" +
                "uantityInvoiced, JobNo, ProductID, OriginalOrderLineID, DiscountPerc, CarriageVa" +
                "tCode, CarriageNetAmount, CarriageVatAmount, CarriageNominal, CarriageCostCentre" +
                ", CarriageDepartment, LineNumber, QuantityAllocated, Ref1, Ref2, NumberOfDistrib" +
                "utions, ForeignUnitPrice, ForeignNettAmount, ForeignVatAmount, ForeignCarriageNe" +
                "t, ForeignCarriageVat, QuantityConfirmed, Instructions, TransRef, TransJobNo, Tr" +
                "ansSell, DiscountType, DiscountAmount, Pages, W4PCStatus, Leaves, QuantityPicked" +
                ", Weight, EstimateID, QuantityPacked, OrderID, JDFJobName, DateModified, Modifie" +
                "dByUserID, ChiliDocumentID, AssetID, ParentOrderLineID, ParentOrderID, IsConfigu" +
                "rable, SalesTaxCodeID, SalesTaxItemID, BOMRevision, TransID FROM OrderLine WHERE" +
                " (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseDiscountMatrix", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseDiscountMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NettAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NettAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Required", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pricingunits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pricingunits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NominalCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NominalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityDelivered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityDelivered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityInvoiced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalOrderLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderLineID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiscountPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageVatCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageVatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageNetAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageNetAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageVatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageVatAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageNominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageNominal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageCostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageCostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageDepartment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageDepartment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityAllocated", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityAllocated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfDistributions", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfDistributions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignNettAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignNettAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignVatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignVatAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignCarriageNet", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCarriageNet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignCarriageVat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCarriageVat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityConfirmed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityConfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Instructions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransJobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransSell", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransSell", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiscountType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiscountAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W4PCStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W4PCStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Leaves", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leaves", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityPicked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityPicked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityPacked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityPacked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFJobName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFJobName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChiliDocumentID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChiliDocumentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AssetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AssetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentOrderLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentOrderLineID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentOrderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentOrderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConfigurable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfigurable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[OrderLine] SET [UseDiscountMatrix] = @UseDiscountMatrix, [OrderNo] " +
                "= @OrderNo, [ProductCode] = @ProductCode, [Description] = @Description, [Quantit" +
                "y] = @Quantity, [NettAmount] = @NettAmount, [VatCode] = @VatCode, [VatAmount] = " +
                "@VatAmount, [Required] = @Required, [Total] = @Total, [DeliveryCode] = @Delivery" +
                "Code, [DeliveryName] = @DeliveryName, [UnitPrice] = @UnitPrice, [Pricingunits] =" +
                " @Pricingunits, [NominalCode] = @NominalCode, [CostCentre] = @CostCentre, [Depar" +
                "tment] = @Department, [QuantityDelivered] = @QuantityDelivered, [QuantityInvoice" +
                "d] = @QuantityInvoiced, [JobNo] = @JobNo, [ProductID] = @ProductID, [OriginalOrd" +
                "erLineID] = @OriginalOrderLineID, [DiscountPerc] = @DiscountPerc, [CarriageVatCo" +
                "de] = @CarriageVatCode, [CarriageNetAmount] = @CarriageNetAmount, [CarriageVatAm" +
                "ount] = @CarriageVatAmount, [CarriageNominal] = @CarriageNominal, [CarriageCostC" +
                "entre] = @CarriageCostCentre, [CarriageDepartment] = @CarriageDepartment, [LineN" +
                "umber] = @LineNumber, [QuantityAllocated] = @QuantityAllocated, [Ref1] = @Ref1, " +
                "[Ref2] = @Ref2, [NumberOfDistributions] = @NumberOfDistributions, [ForeignUnitPr" +
                "ice] = @ForeignUnitPrice, [ForeignNettAmount] = @ForeignNettAmount, [ForeignVatA" +
                "mount] = @ForeignVatAmount, [ForeignCarriageNet] = @ForeignCarriageNet, [Foreign" +
                "CarriageVat] = @ForeignCarriageVat, [QuantityConfirmed] = @QuantityConfirmed, [I" +
                "nstructions] = @Instructions, [TransRef] = @TransRef, [TransJobNo] = @TransJobNo" +
                ", [TransSell] = @TransSell, [DiscountType] = @DiscountType, [DiscountAmount] = @" +
                "DiscountAmount, [Pages] = @Pages, [W4PCStatus] = @W4PCStatus, [Leaves] = @Leaves" +
                ", [QuantityPicked] = @QuantityPicked, [Weight] = @Weight, [EstimateID] = @Estima" +
                "teID, [QuantityPacked] = @QuantityPacked, [OrderID] = @OrderID, [JDFJobName] = @" +
                "JDFJobName, [DateModified] = @DateModified, [ModifiedByUserID] = @ModifiedByUser" +
                "ID, [ChiliDocumentID] = @ChiliDocumentID, [AssetID] = @AssetID, [ParentOrderLine" +
                "ID] = @ParentOrderLineID, [ParentOrderID] = @ParentOrderID, [IsConfigurable] = @" +
                "IsConfigurable, [SalesTaxCodeID] = @SalesTaxCodeID, [SalesTaxItemID] = @SalesTax" +
                "ItemID, [BOMRevision] = @BOMRevision, [TransID] = @TransID WHERE (([ID] = @Origi" +
                "nal_ID) AND ([UseDiscountMatrix] = @Original_UseDiscountMatrix) AND ([OrderNo] =" +
                " @Original_OrderNo) AND ((@IsNull_ProductCode = 1 AND [ProductCode] IS NULL) OR " +
                "([ProductCode] = @Original_ProductCode)) AND ((@IsNull_Description = 1 AND [Desc" +
                "ription] IS NULL) OR ([Description] = @Original_Description)) AND ([Quantity] = " +
                "@Original_Quantity) AND ([NettAmount] = @Original_NettAmount) AND ((@IsNull_VatC" +
                "ode = 1 AND [VatCode] IS NULL) OR ([VatCode] = @Original_VatCode)) AND ([VatAmou" +
                "nt] = @Original_VatAmount) AND ((@IsNull_Required = 1 AND [Required] IS NULL) OR" +
                " ([Required] = @Original_Required)) AND ([Total] = @Original_Total) AND ((@IsNul" +
                "l_DeliveryCode = 1 AND [DeliveryCode] IS NULL) OR ([DeliveryCode] = @Original_De" +
                "liveryCode)) AND ((@IsNull_DeliveryName = 1 AND [DeliveryName] IS NULL) OR ([Del" +
                "iveryName] = @Original_DeliveryName)) AND ([UnitPrice] = @Original_UnitPrice) AN" +
                "D ((@IsNull_Pricingunits = 1 AND [Pricingunits] IS NULL) OR ([Pricingunits] = @O" +
                "riginal_Pricingunits)) AND ((@IsNull_NominalCode = 1 AND [NominalCode] IS NULL) " +
                "OR ([NominalCode] = @Original_NominalCode)) AND ((@IsNull_CostCentre = 1 AND [Co" +
                "stCentre] IS NULL) OR ([CostCentre] = @Original_CostCentre)) AND ((@IsNull_Depar" +
                "tment = 1 AND [Department] IS NULL) OR ([Department] = @Original_Department)) AN" +
                "D ([QuantityDelivered] = @Original_QuantityDelivered) AND ([QuantityInvoiced] = " +
                "@Original_QuantityInvoiced) AND ((@IsNull_JobNo = 1 AND [JobNo] IS NULL) OR ([Jo" +
                "bNo] = @Original_JobNo)) AND ([ProductID] = @Original_ProductID) AND ([OriginalO" +
                "rderLineID] = @Original_OriginalOrderLineID) AND ([DiscountPerc] = @Original_Dis" +
                "countPerc) AND ((@IsNull_CarriageVatCode = 1 AND [CarriageVatCode] IS NULL) OR (" +
                "[CarriageVatCode] = @Original_CarriageVatCode)) AND ([CarriageNetAmount] = @Orig" +
                "inal_CarriageNetAmount) AND ([CarriageVatAmount] = @Original_CarriageVatAmount) " +
                "AND ((@IsNull_CarriageNominal = 1 AND [CarriageNominal] IS NULL) OR ([CarriageNo" +
                "minal] = @Original_CarriageNominal)) AND ((@IsNull_CarriageCostCentre = 1 AND [C" +
                "arriageCostCentre] IS NULL) OR ([CarriageCostCentre] = @Original_CarriageCostCen" +
                "tre)) AND ((@IsNull_CarriageDepartment = 1 AND [CarriageDepartment] IS NULL) OR " +
                "([CarriageDepartment] = @Original_CarriageDepartment)) AND ([LineNumber] = @Orig" +
                "inal_LineNumber) AND ([QuantityAllocated] = @Original_QuantityAllocated) AND ((@" +
                "IsNull_Ref1 = 1 AND [Ref1] IS NULL) OR ([Ref1] = @Original_Ref1)) AND ((@IsNull_" +
                "Ref2 = 1 AND [Ref2] IS NULL) OR ([Ref2] = @Original_Ref2)) AND ([NumberOfDistrib" +
                "utions] = @Original_NumberOfDistributions) AND ([ForeignUnitPrice] = @Original_F" +
                "oreignUnitPrice) AND ([ForeignNettAmount] = @Original_ForeignNettAmount) AND ([F" +
                "oreignVatAmount] = @Original_ForeignVatAmount) AND ([ForeignCarriageNet] = @Orig" +
                "inal_ForeignCarriageNet) AND ([ForeignCarriageVat] = @Original_ForeignCarriageVa" +
                "t) AND ([QuantityConfirmed] = @Original_QuantityConfirmed) AND ((@IsNull_Instruc" +
                "tions = 1 AND [Instructions] IS NULL) OR ([Instructions] = @Original_Instruction" +
                "s)) AND ((@IsNull_TransRef = 1 AND [TransRef] IS NULL) OR ([TransRef] = @Origina" +
                "l_TransRef)) AND ((@IsNull_TransJobNo = 1 AND [TransJobNo] IS NULL) OR ([TransJo" +
                "bNo] = @Original_TransJobNo)) AND ([TransSell] = @Original_TransSell) AND ([Disc" +
                "ountType] = @Original_DiscountType) AND ([DiscountAmount] = @Original_DiscountAm" +
                "ount) AND ((@IsNull_Pages = 1 AND [Pages] IS NULL) OR ([Pages] = @Original_Pages" +
                ")) AND ((@IsNull_W4PCStatus = 1 AND [W4PCStatus] IS NULL) OR ([W4PCStatus] = @Or" +
                "iginal_W4PCStatus)) AND ([Leaves] = @Original_Leaves) AND ([QuantityPicked] = @O" +
                "riginal_QuantityPicked) AND ([Weight] = @Original_Weight) AND ([EstimateID] = @O" +
                "riginal_EstimateID) AND ([QuantityPacked] = @Original_QuantityPacked) AND ([Orde" +
                "rID] = @Original_OrderID) AND ((@IsNull_JDFJobName = 1 AND [JDFJobName] IS NULL)" +
                " OR ([JDFJobName] = @Original_JDFJobName)) AND ((@IsNull_DateModified = 1 AND [D" +
                "ateModified] IS NULL) OR ([DateModified] = @Original_DateModified)) AND ((@IsNul" +
                "l_ModifiedByUserID = 1 AND [ModifiedByUserID] IS NULL) OR ([ModifiedByUserID] = " +
                "@Original_ModifiedByUserID)) AND ((@IsNull_ChiliDocumentID = 1 AND [ChiliDocumen" +
                "tID] IS NULL) OR ([ChiliDocumentID] = @Original_ChiliDocumentID)) AND ((@IsNull_" +
                "AssetID = 1 AND [AssetID] IS NULL) OR ([AssetID] = @Original_AssetID)) AND ([Par" +
                "entOrderLineID] = @Original_ParentOrderLineID) AND ([ParentOrderID] = @Original_" +
                "ParentOrderID) AND ([IsConfigurable] = @Original_IsConfigurable) AND ([SalesTaxC" +
                "odeID] = @Original_SalesTaxCodeID) AND ([SalesTaxItemID] = @Original_SalesTaxIte" +
                "mID) AND ([BOMRevision] = @Original_BOMRevision) AND ([TransID] = @Original_Tran" +
                "sID));\r\nSELECT ID, UseDiscountMatrix, OrderNo, ProductCode, Description, Quantit" +
                "y, NettAmount, VatCode, VatAmount, Required, Total, DeliveryCode, DeliveryName, " +
                "UnitPrice, Pricingunits, NominalCode, CostCentre, Department, QuantityDelivered," +
                " QuantityInvoiced, JobNo, ProductID, OriginalOrderLineID, DiscountPerc, Carriage" +
                "VatCode, CarriageNetAmount, CarriageVatAmount, CarriageNominal, CarriageCostCent" +
                "re, CarriageDepartment, LineNumber, QuantityAllocated, Ref1, Ref2, NumberOfDistr" +
                "ibutions, ForeignUnitPrice, ForeignNettAmount, ForeignVatAmount, ForeignCarriage" +
                "Net, ForeignCarriageVat, QuantityConfirmed, Instructions, TransRef, TransJobNo, " +
                "TransSell, DiscountType, DiscountAmount, Pages, W4PCStatus, Leaves, QuantityPick" +
                "ed, Weight, EstimateID, QuantityPacked, OrderID, JDFJobName, DateModified, Modif" +
                "iedByUserID, ChiliDocumentID, AssetID, ParentOrderLineID, ParentOrderID, IsConfi" +
                "gurable, SalesTaxCodeID, SalesTaxItemID, BOMRevision, TransID FROM OrderLine WHE" +
                "RE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseDiscountMatrix", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseDiscountMatrix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NettAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NettAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Required", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pricingunits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pricingunits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NominalCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NominalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityDelivered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityDelivered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityInvoiced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OriginalOrderLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderLineID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiscountPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountPerc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageVatCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageVatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageNetAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageNetAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageVatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageVatAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageNominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageNominal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageCostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageCostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CarriageDepartment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageDepartment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityAllocated", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityAllocated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ref2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfDistributions", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfDistributions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignUnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignNettAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignNettAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignVatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignVatAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignCarriageNet", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCarriageNet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignCarriageVat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCarriageVat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityConfirmed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityConfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Instructions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransJobNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransSell", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransSell", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiscountType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiscountAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W4PCStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W4PCStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Leaves", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leaves", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityPicked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityPicked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantityPacked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityPacked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JDFJobName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFJobName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChiliDocumentID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChiliDocumentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AssetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AssetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentOrderLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentOrderLineID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentOrderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentOrderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConfigurable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfigurable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseDiscountMatrix", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseDiscountMatrix", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrderNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NettAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NettAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VatCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VatCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Required", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Required", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Required", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Required", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pricingunits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pricingunits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pricingunits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pricingunits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NominalCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NominalCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NominalCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NominalCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Department", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityDelivered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityDelivered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityInvoiced", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityInvoiced", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OriginalOrderLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderLineID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DiscountPerc", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountPerc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CarriageVatCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageVatCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageVatCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageVatCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageNetAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageNetAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageVatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageVatAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CarriageNominal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageNominal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageNominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageNominal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CarriageCostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageCostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageCostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageCostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CarriageDepartment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageDepartment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CarriageDepartment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CarriageDepartment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityAllocated", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityAllocated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ref1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ref1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ref2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ref2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ref2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberOfDistributions", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfDistributions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignUnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignUnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignNettAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignNettAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignVatAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignVatAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignCarriageNet", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCarriageNet", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignCarriageVat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCarriageVat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityConfirmed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityConfirmed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Instructions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Instructions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Instructions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransJobNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransJobNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransJobNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransJobNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransSell", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransSell", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DiscountType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DiscountAmount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiscountAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pages", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pages", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pages", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_W4PCStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W4PCStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_W4PCStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W4PCStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Leaves", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Leaves", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityPicked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityPicked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantityPacked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantityPacked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JDFJobName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFJobName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JDFJobName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JDFJobName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateModified", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ChiliDocumentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChiliDocumentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChiliDocumentID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChiliDocumentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AssetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AssetID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AssetID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AssetID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParentOrderLineID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentOrderLineID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParentOrderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentOrderID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConfigurable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfigurable", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesTaxItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PalletCard.Properties.Settings.Default.ThardataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, UseDiscountMatrix, OrderNo, ProductCode, Description, Quantity, NettAmount, VatCode, VatAmount, Required, Total, DeliveryCode, DeliveryName, UnitPrice, Pricingunits, NominalCode, CostCentre, Department, QuantityDelivered, QuantityInvoiced, JobNo, ProductID, OriginalOrderLineID, DiscountPerc, CarriageVatCode, CarriageNetAmount, CarriageVatAmount, CarriageNominal, CarriageCostCentre, CarriageDepartment, LineNumber, QuantityAllocated, Ref1, Ref2, NumberOfDistributions, ForeignUnitPrice, ForeignNettAmount, ForeignVatAmount, ForeignCarriageNet, ForeignCarriageVat, QuantityConfirmed, Instructions, TransRef, TransJobNo, TransSell, DiscountType, DiscountAmount, Pages, W4PCStatus, Leaves, QuantityPicked, Weight, EstimateID, QuantityPacked, OrderID, JDFJobName, DateModified, ModifiedByUserID, ChiliDocumentID, AssetID, ParentOrderLineID, ParentOrderID, IsConfigurable, SalesTaxCodeID, SalesTaxItemID, BOMRevision, TransID FROM dbo.OrderLine";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ThardataDataSet.OrderLineDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ThardataDataSet.OrderLineDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ThardataDataSet.OrderLineDataTable dataTable = new ThardataDataSet.OrderLineDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet.OrderLineDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "OrderLine");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    byte Original_UseDiscountMatrix, 
                    string Original_OrderNo, 
                    string Original_ProductCode, 
                    string Original_Description, 
                    double Original_Quantity, 
                    double Original_NettAmount, 
                    string Original_VatCode, 
                    double Original_VatAmount, 
                    global::System.Nullable<global::System.DateTime> Original_Required, 
                    double Original_Total, 
                    string Original_DeliveryCode, 
                    string Original_DeliveryName, 
                    double Original_UnitPrice, 
                    string Original_Pricingunits, 
                    string Original_NominalCode, 
                    string Original_CostCentre, 
                    string Original_Department, 
                    double Original_QuantityDelivered, 
                    double Original_QuantityInvoiced, 
                    string Original_JobNo, 
                    int Original_ProductID, 
                    int Original_OriginalOrderLineID, 
                    double Original_DiscountPerc, 
                    string Original_CarriageVatCode, 
                    double Original_CarriageNetAmount, 
                    double Original_CarriageVatAmount, 
                    string Original_CarriageNominal, 
                    string Original_CarriageCostCentre, 
                    string Original_CarriageDepartment, 
                    int Original_LineNumber, 
                    double Original_QuantityAllocated, 
                    string Original_Ref1, 
                    string Original_Ref2, 
                    short Original_NumberOfDistributions, 
                    double Original_ForeignUnitPrice, 
                    double Original_ForeignNettAmount, 
                    double Original_ForeignVatAmount, 
                    double Original_ForeignCarriageNet, 
                    double Original_ForeignCarriageVat, 
                    double Original_QuantityConfirmed, 
                    string Original_Instructions, 
                    string Original_TransRef, 
                    string Original_TransJobNo, 
                    double Original_TransSell, 
                    int Original_DiscountType, 
                    double Original_DiscountAmount, 
                    string Original_Pages, 
                    string Original_W4PCStatus, 
                    int Original_Leaves, 
                    double Original_QuantityPicked, 
                    double Original_Weight, 
                    int Original_EstimateID, 
                    double Original_QuantityPacked, 
                    int Original_OrderID, 
                    string Original_JDFJobName, 
                    global::System.Nullable<global::System.DateTime> Original_DateModified, 
                    global::System.Nullable<int> Original_ModifiedByUserID, 
                    string Original_ChiliDocumentID, 
                    global::System.Nullable<int> Original_AssetID, 
                    int Original_ParentOrderLineID, 
                    int Original_ParentOrderID, 
                    bool Original_IsConfigurable, 
                    int Original_SalesTaxCodeID, 
                    int Original_SalesTaxItemID, 
                    int Original_BOMRevision, 
                    int Original_TransID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((byte)(Original_UseDiscountMatrix));
            if ((Original_OrderNo == null)) {
                throw new global::System.ArgumentNullException("Original_OrderNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_OrderNo));
            }
            if ((Original_ProductCode == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ProductCode));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Description));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_Quantity));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_NettAmount));
            if ((Original_VatCode == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_VatCode));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_VatAmount));
            if ((Original_Required.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_Required.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_Total));
            if ((Original_DeliveryCode == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_DeliveryCode));
            }
            if ((Original_DeliveryName == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_DeliveryName));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_UnitPrice));
            if ((Original_Pricingunits == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Pricingunits));
            }
            if ((Original_NominalCode == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_NominalCode));
            }
            if ((Original_CostCentre == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_CostCentre));
            }
            if ((Original_Department == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_Department));
            }
            this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_QuantityDelivered));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((double)(Original_QuantityInvoiced));
            if ((Original_JobNo == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_JobNo));
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_ProductID));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((int)(Original_OriginalOrderLineID));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((double)(Original_DiscountPerc));
            if ((Original_CarriageVatCode == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_CarriageVatCode));
            }
            this.Adapter.DeleteCommand.Parameters[37].Value = ((double)(Original_CarriageNetAmount));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((double)(Original_CarriageVatAmount));
            if ((Original_CarriageNominal == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_CarriageNominal));
            }
            if ((Original_CarriageCostCentre == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_CarriageCostCentre));
            }
            if ((Original_CarriageDepartment == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_CarriageDepartment));
            }
            this.Adapter.DeleteCommand.Parameters[45].Value = ((int)(Original_LineNumber));
            this.Adapter.DeleteCommand.Parameters[46].Value = ((double)(Original_QuantityAllocated));
            if ((Original_Ref1 == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_Ref1));
            }
            if ((Original_Ref2 == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_Ref2));
            }
            this.Adapter.DeleteCommand.Parameters[51].Value = ((short)(Original_NumberOfDistributions));
            this.Adapter.DeleteCommand.Parameters[52].Value = ((double)(Original_ForeignUnitPrice));
            this.Adapter.DeleteCommand.Parameters[53].Value = ((double)(Original_ForeignNettAmount));
            this.Adapter.DeleteCommand.Parameters[54].Value = ((double)(Original_ForeignVatAmount));
            this.Adapter.DeleteCommand.Parameters[55].Value = ((double)(Original_ForeignCarriageNet));
            this.Adapter.DeleteCommand.Parameters[56].Value = ((double)(Original_ForeignCarriageVat));
            this.Adapter.DeleteCommand.Parameters[57].Value = ((double)(Original_QuantityConfirmed));
            if ((Original_Instructions == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_Instructions));
            }
            if ((Original_TransRef == null)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_TransRef));
            }
            if ((Original_TransJobNo == null)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_TransJobNo));
            }
            this.Adapter.DeleteCommand.Parameters[64].Value = ((double)(Original_TransSell));
            this.Adapter.DeleteCommand.Parameters[65].Value = ((int)(Original_DiscountType));
            this.Adapter.DeleteCommand.Parameters[66].Value = ((double)(Original_DiscountAmount));
            if ((Original_Pages == null)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_Pages));
            }
            if ((Original_W4PCStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_W4PCStatus));
            }
            this.Adapter.DeleteCommand.Parameters[71].Value = ((int)(Original_Leaves));
            this.Adapter.DeleteCommand.Parameters[72].Value = ((double)(Original_QuantityPicked));
            this.Adapter.DeleteCommand.Parameters[73].Value = ((double)(Original_Weight));
            this.Adapter.DeleteCommand.Parameters[74].Value = ((int)(Original_EstimateID));
            this.Adapter.DeleteCommand.Parameters[75].Value = ((double)(Original_QuantityPacked));
            this.Adapter.DeleteCommand.Parameters[76].Value = ((int)(Original_OrderID));
            if ((Original_JDFJobName == null)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_JDFJobName));
            }
            if ((Original_DateModified.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((System.DateTime)(Original_DateModified.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_ModifiedByUserID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((int)(Original_ModifiedByUserID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_ChiliDocumentID == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_ChiliDocumentID));
            }
            if ((Original_AssetID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((int)(Original_AssetID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[87].Value = ((int)(Original_ParentOrderLineID));
            this.Adapter.DeleteCommand.Parameters[88].Value = ((int)(Original_ParentOrderID));
            this.Adapter.DeleteCommand.Parameters[89].Value = ((bool)(Original_IsConfigurable));
            this.Adapter.DeleteCommand.Parameters[90].Value = ((int)(Original_SalesTaxCodeID));
            this.Adapter.DeleteCommand.Parameters[91].Value = ((int)(Original_SalesTaxItemID));
            this.Adapter.DeleteCommand.Parameters[92].Value = ((int)(Original_BOMRevision));
            this.Adapter.DeleteCommand.Parameters[93].Value = ((int)(Original_TransID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    byte UseDiscountMatrix, 
                    string OrderNo, 
                    string ProductCode, 
                    string Description, 
                    double Quantity, 
                    double NettAmount, 
                    string VatCode, 
                    double VatAmount, 
                    global::System.Nullable<global::System.DateTime> Required, 
                    double Total, 
                    string DeliveryCode, 
                    string DeliveryName, 
                    double UnitPrice, 
                    string Pricingunits, 
                    string NominalCode, 
                    string CostCentre, 
                    string Department, 
                    double QuantityDelivered, 
                    double QuantityInvoiced, 
                    string JobNo, 
                    int ProductID, 
                    int OriginalOrderLineID, 
                    double DiscountPerc, 
                    string CarriageVatCode, 
                    double CarriageNetAmount, 
                    double CarriageVatAmount, 
                    string CarriageNominal, 
                    string CarriageCostCentre, 
                    string CarriageDepartment, 
                    int LineNumber, 
                    double QuantityAllocated, 
                    string Ref1, 
                    string Ref2, 
                    short NumberOfDistributions, 
                    double ForeignUnitPrice, 
                    double ForeignNettAmount, 
                    double ForeignVatAmount, 
                    double ForeignCarriageNet, 
                    double ForeignCarriageVat, 
                    double QuantityConfirmed, 
                    string Instructions, 
                    string TransRef, 
                    string TransJobNo, 
                    double TransSell, 
                    int DiscountType, 
                    double DiscountAmount, 
                    string Pages, 
                    string W4PCStatus, 
                    int Leaves, 
                    double QuantityPicked, 
                    double Weight, 
                    int EstimateID, 
                    double QuantityPacked, 
                    int OrderID, 
                    string JDFJobName, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    string ChiliDocumentID, 
                    global::System.Nullable<int> AssetID, 
                    int ParentOrderLineID, 
                    int ParentOrderID, 
                    bool IsConfigurable, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    int BOMRevision, 
                    int TransID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((byte)(UseDiscountMatrix));
            if ((OrderNo == null)) {
                throw new global::System.ArgumentNullException("OrderNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(OrderNo));
            }
            if ((ProductCode == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ProductCode));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Quantity));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(NettAmount));
            if ((VatCode == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(VatCode));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(VatAmount));
            if ((Required.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(Required.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(Total));
            if ((DeliveryCode == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DeliveryCode));
            }
            if ((DeliveryName == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(DeliveryName));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((double)(UnitPrice));
            if ((Pricingunits == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Pricingunits));
            }
            if ((NominalCode == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(NominalCode));
            }
            if ((CostCentre == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(CostCentre));
            }
            if ((Department == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Department));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((double)(QuantityDelivered));
            this.Adapter.InsertCommand.Parameters[18].Value = ((double)(QuantityInvoiced));
            if ((JobNo == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(JobNo));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(ProductID));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(OriginalOrderLineID));
            this.Adapter.InsertCommand.Parameters[22].Value = ((double)(DiscountPerc));
            if ((CarriageVatCode == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(CarriageVatCode));
            }
            this.Adapter.InsertCommand.Parameters[24].Value = ((double)(CarriageNetAmount));
            this.Adapter.InsertCommand.Parameters[25].Value = ((double)(CarriageVatAmount));
            if ((CarriageNominal == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(CarriageNominal));
            }
            if ((CarriageCostCentre == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(CarriageCostCentre));
            }
            if ((CarriageDepartment == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(CarriageDepartment));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(LineNumber));
            this.Adapter.InsertCommand.Parameters[30].Value = ((double)(QuantityAllocated));
            if ((Ref1 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Ref1));
            }
            if ((Ref2 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Ref2));
            }
            this.Adapter.InsertCommand.Parameters[33].Value = ((short)(NumberOfDistributions));
            this.Adapter.InsertCommand.Parameters[34].Value = ((double)(ForeignUnitPrice));
            this.Adapter.InsertCommand.Parameters[35].Value = ((double)(ForeignNettAmount));
            this.Adapter.InsertCommand.Parameters[36].Value = ((double)(ForeignVatAmount));
            this.Adapter.InsertCommand.Parameters[37].Value = ((double)(ForeignCarriageNet));
            this.Adapter.InsertCommand.Parameters[38].Value = ((double)(ForeignCarriageVat));
            this.Adapter.InsertCommand.Parameters[39].Value = ((double)(QuantityConfirmed));
            if ((Instructions == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(Instructions));
            }
            if ((TransRef == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(TransRef));
            }
            if ((TransJobNo == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(TransJobNo));
            }
            this.Adapter.InsertCommand.Parameters[43].Value = ((double)(TransSell));
            this.Adapter.InsertCommand.Parameters[44].Value = ((int)(DiscountType));
            this.Adapter.InsertCommand.Parameters[45].Value = ((double)(DiscountAmount));
            if ((Pages == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(Pages));
            }
            if ((W4PCStatus == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(W4PCStatus));
            }
            this.Adapter.InsertCommand.Parameters[48].Value = ((int)(Leaves));
            this.Adapter.InsertCommand.Parameters[49].Value = ((double)(QuantityPicked));
            this.Adapter.InsertCommand.Parameters[50].Value = ((double)(Weight));
            this.Adapter.InsertCommand.Parameters[51].Value = ((int)(EstimateID));
            this.Adapter.InsertCommand.Parameters[52].Value = ((double)(QuantityPacked));
            this.Adapter.InsertCommand.Parameters[53].Value = ((int)(OrderID));
            if ((JDFJobName == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(JDFJobName));
            }
            if ((DateModified.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(DateModified.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((ModifiedByUserID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((int)(ModifiedByUserID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((ChiliDocumentID == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(ChiliDocumentID));
            }
            if ((AssetID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((int)(AssetID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[59].Value = ((int)(ParentOrderLineID));
            this.Adapter.InsertCommand.Parameters[60].Value = ((int)(ParentOrderID));
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(IsConfigurable));
            this.Adapter.InsertCommand.Parameters[62].Value = ((int)(SalesTaxCodeID));
            this.Adapter.InsertCommand.Parameters[63].Value = ((int)(SalesTaxItemID));
            this.Adapter.InsertCommand.Parameters[64].Value = ((int)(BOMRevision));
            this.Adapter.InsertCommand.Parameters[65].Value = ((int)(TransID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte UseDiscountMatrix, 
                    string OrderNo, 
                    string ProductCode, 
                    string Description, 
                    double Quantity, 
                    double NettAmount, 
                    string VatCode, 
                    double VatAmount, 
                    global::System.Nullable<global::System.DateTime> Required, 
                    double Total, 
                    string DeliveryCode, 
                    string DeliveryName, 
                    double UnitPrice, 
                    string Pricingunits, 
                    string NominalCode, 
                    string CostCentre, 
                    string Department, 
                    double QuantityDelivered, 
                    double QuantityInvoiced, 
                    string JobNo, 
                    int ProductID, 
                    int OriginalOrderLineID, 
                    double DiscountPerc, 
                    string CarriageVatCode, 
                    double CarriageNetAmount, 
                    double CarriageVatAmount, 
                    string CarriageNominal, 
                    string CarriageCostCentre, 
                    string CarriageDepartment, 
                    int LineNumber, 
                    double QuantityAllocated, 
                    string Ref1, 
                    string Ref2, 
                    short NumberOfDistributions, 
                    double ForeignUnitPrice, 
                    double ForeignNettAmount, 
                    double ForeignVatAmount, 
                    double ForeignCarriageNet, 
                    double ForeignCarriageVat, 
                    double QuantityConfirmed, 
                    string Instructions, 
                    string TransRef, 
                    string TransJobNo, 
                    double TransSell, 
                    int DiscountType, 
                    double DiscountAmount, 
                    string Pages, 
                    string W4PCStatus, 
                    int Leaves, 
                    double QuantityPicked, 
                    double Weight, 
                    int EstimateID, 
                    double QuantityPacked, 
                    int OrderID, 
                    string JDFJobName, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    string ChiliDocumentID, 
                    global::System.Nullable<int> AssetID, 
                    int ParentOrderLineID, 
                    int ParentOrderID, 
                    bool IsConfigurable, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    int BOMRevision, 
                    int TransID, 
                    int Original_ID, 
                    byte Original_UseDiscountMatrix, 
                    string Original_OrderNo, 
                    string Original_ProductCode, 
                    string Original_Description, 
                    double Original_Quantity, 
                    double Original_NettAmount, 
                    string Original_VatCode, 
                    double Original_VatAmount, 
                    global::System.Nullable<global::System.DateTime> Original_Required, 
                    double Original_Total, 
                    string Original_DeliveryCode, 
                    string Original_DeliveryName, 
                    double Original_UnitPrice, 
                    string Original_Pricingunits, 
                    string Original_NominalCode, 
                    string Original_CostCentre, 
                    string Original_Department, 
                    double Original_QuantityDelivered, 
                    double Original_QuantityInvoiced, 
                    string Original_JobNo, 
                    int Original_ProductID, 
                    int Original_OriginalOrderLineID, 
                    double Original_DiscountPerc, 
                    string Original_CarriageVatCode, 
                    double Original_CarriageNetAmount, 
                    double Original_CarriageVatAmount, 
                    string Original_CarriageNominal, 
                    string Original_CarriageCostCentre, 
                    string Original_CarriageDepartment, 
                    int Original_LineNumber, 
                    double Original_QuantityAllocated, 
                    string Original_Ref1, 
                    string Original_Ref2, 
                    short Original_NumberOfDistributions, 
                    double Original_ForeignUnitPrice, 
                    double Original_ForeignNettAmount, 
                    double Original_ForeignVatAmount, 
                    double Original_ForeignCarriageNet, 
                    double Original_ForeignCarriageVat, 
                    double Original_QuantityConfirmed, 
                    string Original_Instructions, 
                    string Original_TransRef, 
                    string Original_TransJobNo, 
                    double Original_TransSell, 
                    int Original_DiscountType, 
                    double Original_DiscountAmount, 
                    string Original_Pages, 
                    string Original_W4PCStatus, 
                    int Original_Leaves, 
                    double Original_QuantityPicked, 
                    double Original_Weight, 
                    int Original_EstimateID, 
                    double Original_QuantityPacked, 
                    int Original_OrderID, 
                    string Original_JDFJobName, 
                    global::System.Nullable<global::System.DateTime> Original_DateModified, 
                    global::System.Nullable<int> Original_ModifiedByUserID, 
                    string Original_ChiliDocumentID, 
                    global::System.Nullable<int> Original_AssetID, 
                    int Original_ParentOrderLineID, 
                    int Original_ParentOrderID, 
                    bool Original_IsConfigurable, 
                    int Original_SalesTaxCodeID, 
                    int Original_SalesTaxItemID, 
                    int Original_BOMRevision, 
                    int Original_TransID, 
                    int ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((byte)(UseDiscountMatrix));
            if ((OrderNo == null)) {
                throw new global::System.ArgumentNullException("OrderNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(OrderNo));
            }
            if ((ProductCode == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ProductCode));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Quantity));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(NettAmount));
            if ((VatCode == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(VatCode));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(VatAmount));
            if ((Required.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Required.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Total));
            if ((DeliveryCode == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(DeliveryCode));
            }
            if ((DeliveryName == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(DeliveryName));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(UnitPrice));
            if ((Pricingunits == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Pricingunits));
            }
            if ((NominalCode == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(NominalCode));
            }
            if ((CostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(CostCentre));
            }
            if ((Department == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Department));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(QuantityDelivered));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(QuantityInvoiced));
            if ((JobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(JobNo));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(ProductID));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(OriginalOrderLineID));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(DiscountPerc));
            if ((CarriageVatCode == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(CarriageVatCode));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(CarriageNetAmount));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(CarriageVatAmount));
            if ((CarriageNominal == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(CarriageNominal));
            }
            if ((CarriageCostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(CarriageCostCentre));
            }
            if ((CarriageDepartment == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(CarriageDepartment));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(LineNumber));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(QuantityAllocated));
            if ((Ref1 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Ref1));
            }
            if ((Ref2 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Ref2));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((short)(NumberOfDistributions));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(ForeignUnitPrice));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(ForeignNettAmount));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(ForeignVatAmount));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(ForeignCarriageNet));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(ForeignCarriageVat));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(QuantityConfirmed));
            if ((Instructions == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Instructions));
            }
            if ((TransRef == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(TransRef));
            }
            if ((TransJobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(TransJobNo));
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(TransSell));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(DiscountType));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(DiscountAmount));
            if ((Pages == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Pages));
            }
            if ((W4PCStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(W4PCStatus));
            }
            this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(Leaves));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(QuantityPicked));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(Weight));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(EstimateID));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(QuantityPacked));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(OrderID));
            if ((JDFJobName == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(JDFJobName));
            }
            if ((DateModified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(DateModified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((ModifiedByUserID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(ModifiedByUserID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((ChiliDocumentID == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(ChiliDocumentID));
            }
            if ((AssetID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(AssetID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(ParentOrderLineID));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(ParentOrderID));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(IsConfigurable));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(SalesTaxCodeID));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(SalesTaxItemID));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(BOMRevision));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(TransID));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((byte)(Original_UseDiscountMatrix));
            if ((Original_OrderNo == null)) {
                throw new global::System.ArgumentNullException("Original_OrderNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_OrderNo));
            }
            if ((Original_ProductCode == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_ProductCode));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_Description));
            }
            this.Adapter.UpdateCommand.Parameters[73].Value = ((double)(Original_Quantity));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((double)(Original_NettAmount));
            if ((Original_VatCode == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_VatCode));
            }
            this.Adapter.UpdateCommand.Parameters[77].Value = ((double)(Original_VatAmount));
            if ((Original_Required.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(Original_Required.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((double)(Original_Total));
            if ((Original_DeliveryCode == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_DeliveryCode));
            }
            if ((Original_DeliveryName == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_DeliveryName));
            }
            this.Adapter.UpdateCommand.Parameters[85].Value = ((double)(Original_UnitPrice));
            if ((Original_Pricingunits == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_Pricingunits));
            }
            if ((Original_NominalCode == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_NominalCode));
            }
            if ((Original_CostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_CostCentre));
            }
            if ((Original_Department == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_Department));
            }
            this.Adapter.UpdateCommand.Parameters[94].Value = ((double)(Original_QuantityDelivered));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((double)(Original_QuantityInvoiced));
            if ((Original_JobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_JobNo));
            }
            this.Adapter.UpdateCommand.Parameters[98].Value = ((int)(Original_ProductID));
            this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(Original_OriginalOrderLineID));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((double)(Original_DiscountPerc));
            if ((Original_CarriageVatCode == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_CarriageVatCode));
            }
            this.Adapter.UpdateCommand.Parameters[103].Value = ((double)(Original_CarriageNetAmount));
            this.Adapter.UpdateCommand.Parameters[104].Value = ((double)(Original_CarriageVatAmount));
            if ((Original_CarriageNominal == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_CarriageNominal));
            }
            if ((Original_CarriageCostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_CarriageCostCentre));
            }
            if ((Original_CarriageDepartment == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_CarriageDepartment));
            }
            this.Adapter.UpdateCommand.Parameters[111].Value = ((int)(Original_LineNumber));
            this.Adapter.UpdateCommand.Parameters[112].Value = ((double)(Original_QuantityAllocated));
            if ((Original_Ref1 == null)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_Ref1));
            }
            if ((Original_Ref2 == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(Original_Ref2));
            }
            this.Adapter.UpdateCommand.Parameters[117].Value = ((short)(Original_NumberOfDistributions));
            this.Adapter.UpdateCommand.Parameters[118].Value = ((double)(Original_ForeignUnitPrice));
            this.Adapter.UpdateCommand.Parameters[119].Value = ((double)(Original_ForeignNettAmount));
            this.Adapter.UpdateCommand.Parameters[120].Value = ((double)(Original_ForeignVatAmount));
            this.Adapter.UpdateCommand.Parameters[121].Value = ((double)(Original_ForeignCarriageNet));
            this.Adapter.UpdateCommand.Parameters[122].Value = ((double)(Original_ForeignCarriageVat));
            this.Adapter.UpdateCommand.Parameters[123].Value = ((double)(Original_QuantityConfirmed));
            if ((Original_Instructions == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_Instructions));
            }
            if ((Original_TransRef == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_TransRef));
            }
            if ((Original_TransJobNo == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_TransJobNo));
            }
            this.Adapter.UpdateCommand.Parameters[130].Value = ((double)(Original_TransSell));
            this.Adapter.UpdateCommand.Parameters[131].Value = ((int)(Original_DiscountType));
            this.Adapter.UpdateCommand.Parameters[132].Value = ((double)(Original_DiscountAmount));
            if ((Original_Pages == null)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((string)(Original_Pages));
            }
            if ((Original_W4PCStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((string)(Original_W4PCStatus));
            }
            this.Adapter.UpdateCommand.Parameters[137].Value = ((int)(Original_Leaves));
            this.Adapter.UpdateCommand.Parameters[138].Value = ((double)(Original_QuantityPicked));
            this.Adapter.UpdateCommand.Parameters[139].Value = ((double)(Original_Weight));
            this.Adapter.UpdateCommand.Parameters[140].Value = ((int)(Original_EstimateID));
            this.Adapter.UpdateCommand.Parameters[141].Value = ((double)(Original_QuantityPacked));
            this.Adapter.UpdateCommand.Parameters[142].Value = ((int)(Original_OrderID));
            if ((Original_JDFJobName == null)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((string)(Original_JDFJobName));
            }
            if ((Original_DateModified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((System.DateTime)(Original_DateModified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_ModifiedByUserID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((int)(Original_ModifiedByUserID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_ChiliDocumentID == null)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(Original_ChiliDocumentID));
            }
            if ((Original_AssetID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((int)(Original_AssetID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[153].Value = ((int)(Original_ParentOrderLineID));
            this.Adapter.UpdateCommand.Parameters[154].Value = ((int)(Original_ParentOrderID));
            this.Adapter.UpdateCommand.Parameters[155].Value = ((bool)(Original_IsConfigurable));
            this.Adapter.UpdateCommand.Parameters[156].Value = ((int)(Original_SalesTaxCodeID));
            this.Adapter.UpdateCommand.Parameters[157].Value = ((int)(Original_SalesTaxItemID));
            this.Adapter.UpdateCommand.Parameters[158].Value = ((int)(Original_BOMRevision));
            this.Adapter.UpdateCommand.Parameters[159].Value = ((int)(Original_TransID));
            this.Adapter.UpdateCommand.Parameters[160].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte UseDiscountMatrix, 
                    string OrderNo, 
                    string ProductCode, 
                    string Description, 
                    double Quantity, 
                    double NettAmount, 
                    string VatCode, 
                    double VatAmount, 
                    global::System.Nullable<global::System.DateTime> Required, 
                    double Total, 
                    string DeliveryCode, 
                    string DeliveryName, 
                    double UnitPrice, 
                    string Pricingunits, 
                    string NominalCode, 
                    string CostCentre, 
                    string Department, 
                    double QuantityDelivered, 
                    double QuantityInvoiced, 
                    string JobNo, 
                    int ProductID, 
                    int OriginalOrderLineID, 
                    double DiscountPerc, 
                    string CarriageVatCode, 
                    double CarriageNetAmount, 
                    double CarriageVatAmount, 
                    string CarriageNominal, 
                    string CarriageCostCentre, 
                    string CarriageDepartment, 
                    int LineNumber, 
                    double QuantityAllocated, 
                    string Ref1, 
                    string Ref2, 
                    short NumberOfDistributions, 
                    double ForeignUnitPrice, 
                    double ForeignNettAmount, 
                    double ForeignVatAmount, 
                    double ForeignCarriageNet, 
                    double ForeignCarriageVat, 
                    double QuantityConfirmed, 
                    string Instructions, 
                    string TransRef, 
                    string TransJobNo, 
                    double TransSell, 
                    int DiscountType, 
                    double DiscountAmount, 
                    string Pages, 
                    string W4PCStatus, 
                    int Leaves, 
                    double QuantityPicked, 
                    double Weight, 
                    int EstimateID, 
                    double QuantityPacked, 
                    int OrderID, 
                    string JDFJobName, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    string ChiliDocumentID, 
                    global::System.Nullable<int> AssetID, 
                    int ParentOrderLineID, 
                    int ParentOrderID, 
                    bool IsConfigurable, 
                    int SalesTaxCodeID, 
                    int SalesTaxItemID, 
                    int BOMRevision, 
                    int TransID, 
                    int Original_ID, 
                    byte Original_UseDiscountMatrix, 
                    string Original_OrderNo, 
                    string Original_ProductCode, 
                    string Original_Description, 
                    double Original_Quantity, 
                    double Original_NettAmount, 
                    string Original_VatCode, 
                    double Original_VatAmount, 
                    global::System.Nullable<global::System.DateTime> Original_Required, 
                    double Original_Total, 
                    string Original_DeliveryCode, 
                    string Original_DeliveryName, 
                    double Original_UnitPrice, 
                    string Original_Pricingunits, 
                    string Original_NominalCode, 
                    string Original_CostCentre, 
                    string Original_Department, 
                    double Original_QuantityDelivered, 
                    double Original_QuantityInvoiced, 
                    string Original_JobNo, 
                    int Original_ProductID, 
                    int Original_OriginalOrderLineID, 
                    double Original_DiscountPerc, 
                    string Original_CarriageVatCode, 
                    double Original_CarriageNetAmount, 
                    double Original_CarriageVatAmount, 
                    string Original_CarriageNominal, 
                    string Original_CarriageCostCentre, 
                    string Original_CarriageDepartment, 
                    int Original_LineNumber, 
                    double Original_QuantityAllocated, 
                    string Original_Ref1, 
                    string Original_Ref2, 
                    short Original_NumberOfDistributions, 
                    double Original_ForeignUnitPrice, 
                    double Original_ForeignNettAmount, 
                    double Original_ForeignVatAmount, 
                    double Original_ForeignCarriageNet, 
                    double Original_ForeignCarriageVat, 
                    double Original_QuantityConfirmed, 
                    string Original_Instructions, 
                    string Original_TransRef, 
                    string Original_TransJobNo, 
                    double Original_TransSell, 
                    int Original_DiscountType, 
                    double Original_DiscountAmount, 
                    string Original_Pages, 
                    string Original_W4PCStatus, 
                    int Original_Leaves, 
                    double Original_QuantityPicked, 
                    double Original_Weight, 
                    int Original_EstimateID, 
                    double Original_QuantityPacked, 
                    int Original_OrderID, 
                    string Original_JDFJobName, 
                    global::System.Nullable<global::System.DateTime> Original_DateModified, 
                    global::System.Nullable<int> Original_ModifiedByUserID, 
                    string Original_ChiliDocumentID, 
                    global::System.Nullable<int> Original_AssetID, 
                    int Original_ParentOrderLineID, 
                    int Original_ParentOrderID, 
                    bool Original_IsConfigurable, 
                    int Original_SalesTaxCodeID, 
                    int Original_SalesTaxItemID, 
                    int Original_BOMRevision, 
                    int Original_TransID) {
            return this.Update(UseDiscountMatrix, OrderNo, ProductCode, Description, Quantity, NettAmount, VatCode, VatAmount, Required, Total, DeliveryCode, DeliveryName, UnitPrice, Pricingunits, NominalCode, CostCentre, Department, QuantityDelivered, QuantityInvoiced, JobNo, ProductID, OriginalOrderLineID, DiscountPerc, CarriageVatCode, CarriageNetAmount, CarriageVatAmount, CarriageNominal, CarriageCostCentre, CarriageDepartment, LineNumber, QuantityAllocated, Ref1, Ref2, NumberOfDistributions, ForeignUnitPrice, ForeignNettAmount, ForeignVatAmount, ForeignCarriageNet, ForeignCarriageVat, QuantityConfirmed, Instructions, TransRef, TransJobNo, TransSell, DiscountType, DiscountAmount, Pages, W4PCStatus, Leaves, QuantityPicked, Weight, EstimateID, QuantityPacked, OrderID, JDFJobName, DateModified, ModifiedByUserID, ChiliDocumentID, AssetID, ParentOrderLineID, ParentOrderID, IsConfigurable, SalesTaxCodeID, SalesTaxItemID, BOMRevision, TransID, Original_ID, Original_UseDiscountMatrix, Original_OrderNo, Original_ProductCode, Original_Description, Original_Quantity, Original_NettAmount, Original_VatCode, Original_VatAmount, Original_Required, Original_Total, Original_DeliveryCode, Original_DeliveryName, Original_UnitPrice, Original_Pricingunits, Original_NominalCode, Original_CostCentre, Original_Department, Original_QuantityDelivered, Original_QuantityInvoiced, Original_JobNo, Original_ProductID, Original_OriginalOrderLineID, Original_DiscountPerc, Original_CarriageVatCode, Original_CarriageNetAmount, Original_CarriageVatAmount, Original_CarriageNominal, Original_CarriageCostCentre, Original_CarriageDepartment, Original_LineNumber, Original_QuantityAllocated, Original_Ref1, Original_Ref2, Original_NumberOfDistributions, Original_ForeignUnitPrice, Original_ForeignNettAmount, Original_ForeignVatAmount, Original_ForeignCarriageNet, Original_ForeignCarriageVat, Original_QuantityConfirmed, Original_Instructions, Original_TransRef, Original_TransJobNo, Original_TransSell, Original_DiscountType, Original_DiscountAmount, Original_Pages, Original_W4PCStatus, Original_Leaves, Original_QuantityPicked, Original_Weight, Original_EstimateID, Original_QuantityPacked, Original_OrderID, Original_JDFJobName, Original_DateModified, Original_ModifiedByUserID, Original_ChiliDocumentID, Original_AssetID, Original_ParentOrderLineID, Original_ParentOrderID, Original_IsConfigurable, Original_SalesTaxCodeID, Original_SalesTaxItemID, Original_BOMRevision, Original_TransID, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OriginationMaterialInputTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OriginationMaterialInputTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OriginationMaterialInput";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("IsAutoPrintingEntry", "IsAutoPrintingEntry");
            tableMapping.ColumnMappings.Add("IsAutoManuallyChanged", "IsAutoManuallyChanged");
            tableMapping.ColumnMappings.Add("PermFixed", "PermFixed");
            tableMapping.ColumnMappings.Add("QuantFixed", "QuantFixed");
            tableMapping.ColumnMappings.Add("PriceFixed", "PriceFixed");
            tableMapping.ColumnMappings.Add("EstimateID", "EstimateID");
            tableMapping.ColumnMappings.Add("PaperRef", "PaperRef");
            tableMapping.ColumnMappings.Add("UniquePaperNumber", "UniquePaperNumber");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("Valuedb", "Valuedb");
            tableMapping.ColumnMappings.Add("RunOn", "RunOn");
            tableMapping.ColumnMappings.Add("Units", "Units");
            tableMapping.ColumnMappings.Add("UseMinCharge", "UseMinCharge");
            tableMapping.ColumnMappings.Add("MinCharge", "MinCharge");
            tableMapping.ColumnMappings.Add("EstimateHeaderRef", "EstimateHeaderRef");
            tableMapping.ColumnMappings.Add("AnalysisCode", "AnalysisCode");
            tableMapping.ColumnMappings.Add("OperationNo", "OperationNo");
            tableMapping.ColumnMappings.Add("CostCentre", "CostCentre");
            tableMapping.ColumnMappings.Add("ForeignCurrency", "ForeignCurrency");
            tableMapping.ColumnMappings.Add("ForeignValue", "ForeignValue");
            tableMapping.ColumnMappings.Add("ComponentID", "ComponentID");
            tableMapping.ColumnMappings.Add("UniqueComponentNumber", "UniqueComponentNumber");
            tableMapping.ColumnMappings.Add("SellingRate", "SellingRate");
            tableMapping.ColumnMappings.Add("SellingValue", "SellingValue");
            tableMapping.ColumnMappings.Add("SellingRunOn", "SellingRunOn");
            tableMapping.ColumnMappings.Add("SellingPriceLocked", "SellingPriceLocked");
            tableMapping.ColumnMappings.Add("SizeCode", "SizeCode");
            tableMapping.ColumnMappings.Add("LineNumber", "LineNumber");
            tableMapping.ColumnMappings.Add("ProcessTypeOrder", "ProcessTypeOrder");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[OriginationMaterialInput] WHERE (([ID] = @Original_ID) AND ([I" +
                "sAutoPrintingEntry] = @Original_IsAutoPrintingEntry) AND ([IsAutoManuallyChanged" +
                "] = @Original_IsAutoManuallyChanged) AND ([PermFixed] = @Original_PermFixed) AND" +
                " ([QuantFixed] = @Original_QuantFixed) AND ([PriceFixed] = @Original_PriceFixed)" +
                " AND ((@IsNull_EstimateID = 1 AND [EstimateID] IS NULL) OR ([EstimateID] = @Orig" +
                "inal_EstimateID)) AND ((@IsNull_PaperRef = 1 AND [PaperRef] IS NULL) OR ([PaperR" +
                "ef] = @Original_PaperRef)) AND ((@IsNull_UniquePaperNumber = 1 AND [UniquePaperN" +
                "umber] IS NULL) OR ([UniquePaperNumber] = @Original_UniquePaperNumber)) AND ((@I" +
                "sNull_Code = 1 AND [Code] IS NULL) OR ([Code] = @Original_Code)) AND ((@IsNull_D" +
                "escription = 1 AND [Description] IS NULL) OR ([Description] = @Original_Descript" +
                "ion)) AND ((@IsNull_Quantity = 1 AND [Quantity] IS NULL) OR ([Quantity] = @Origi" +
                "nal_Quantity)) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Origi" +
                "nal_Price)) AND ((@IsNull_Valuedb = 1 AND [Valuedb] IS NULL) OR ([Valuedb] = @Or" +
                "iginal_Valuedb)) AND ((@IsNull_RunOn = 1 AND [RunOn] IS NULL) OR ([RunOn] = @Ori" +
                "ginal_RunOn)) AND ((@IsNull_Units = 1 AND [Units] IS NULL) OR ([Units] = @Origin" +
                "al_Units)) AND ([UseMinCharge] = @Original_UseMinCharge) AND ((@IsNull_MinCharge" +
                " = 1 AND [MinCharge] IS NULL) OR ([MinCharge] = @Original_MinCharge)) AND ((@IsN" +
                "ull_EstimateHeaderRef = 1 AND [EstimateHeaderRef] IS NULL) OR ([EstimateHeaderRe" +
                "f] = @Original_EstimateHeaderRef)) AND ((@IsNull_AnalysisCode = 1 AND [AnalysisC" +
                "ode] IS NULL) OR ([AnalysisCode] = @Original_AnalysisCode)) AND ((@IsNull_Operat" +
                "ionNo = 1 AND [OperationNo] IS NULL) OR ([OperationNo] = @Original_OperationNo))" +
                " AND ((@IsNull_CostCentre = 1 AND [CostCentre] IS NULL) OR ([CostCentre] = @Orig" +
                "inal_CostCentre)) AND ([ForeignCurrency] = @Original_ForeignCurrency) AND ((@IsN" +
                "ull_ForeignValue = 1 AND [ForeignValue] IS NULL) OR ([ForeignValue] = @Original_" +
                "ForeignValue)) AND ((@IsNull_ComponentID = 1 AND [ComponentID] IS NULL) OR ([Com" +
                "ponentID] = @Original_ComponentID)) AND ((@IsNull_UniqueComponentNumber = 1 AND " +
                "[UniqueComponentNumber] IS NULL) OR ([UniqueComponentNumber] = @Original_UniqueC" +
                "omponentNumber)) AND ((@IsNull_SellingRate = 1 AND [SellingRate] IS NULL) OR ([S" +
                "ellingRate] = @Original_SellingRate)) AND ((@IsNull_SellingValue = 1 AND [Sellin" +
                "gValue] IS NULL) OR ([SellingValue] = @Original_SellingValue)) AND ((@IsNull_Sel" +
                "lingRunOn = 1 AND [SellingRunOn] IS NULL) OR ([SellingRunOn] = @Original_Selling" +
                "RunOn)) AND ((@IsNull_SellingPriceLocked = 1 AND [SellingPriceLocked] IS NULL) O" +
                "R ([SellingPriceLocked] = @Original_SellingPriceLocked)) AND ((@IsNull_SizeCode " +
                "= 1 AND [SizeCode] IS NULL) OR ([SizeCode] = @Original_SizeCode)) AND ((@IsNull_" +
                "LineNumber = 1 AND [LineNumber] IS NULL) OR ([LineNumber] = @Original_LineNumber" +
                ")) AND ([ProcessTypeOrder] = @Original_ProcessTypeOrder))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsAutoPrintingEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoPrintingEntry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsAutoManuallyChanged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoManuallyChanged", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermFixed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantFixed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PriceFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceFixed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaperRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaperRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UniquePaperNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniquePaperNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniquePaperNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniquePaperNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Price", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Valuedb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valuedb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Valuedb", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valuedb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Units", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Units", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Units", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Units", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseMinCharge", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseMinCharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MinCharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinCharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinCharge", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinCharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EstimateHeaderRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateHeaderRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimateHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateHeaderRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnalysisCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnalysisCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OperationNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperationNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperationNo", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperationNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCurrency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ForeignValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ComponentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComponentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UniqueComponentNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueComponentNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniqueComponentNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueComponentNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SellingRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SellingValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SellingRunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SellingPriceLocked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPriceLocked", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingPriceLocked", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPriceLocked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SizeCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SizeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LineNumber", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessTypeOrder", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessTypeOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OriginationMaterialInput] ([IsAutoPrintingEntry], [IsAutoManua" +
                "llyChanged], [PermFixed], [QuantFixed], [PriceFixed], [EstimateID], [PaperRef], " +
                "[UniquePaperNumber], [Code], [Description], [Quantity], [Price], [Valuedb], [Run" +
                "On], [Units], [UseMinCharge], [MinCharge], [EstimateHeaderRef], [AnalysisCode], " +
                "[OperationNo], [CostCentre], [ForeignCurrency], [ForeignValue], [ComponentID], [" +
                "UniqueComponentNumber], [SellingRate], [SellingValue], [SellingRunOn], [SellingP" +
                "riceLocked], [SizeCode], [LineNumber], [ProcessTypeOrder]) VALUES (@IsAutoPrinti" +
                "ngEntry, @IsAutoManuallyChanged, @PermFixed, @QuantFixed, @PriceFixed, @Estimate" +
                "ID, @PaperRef, @UniquePaperNumber, @Code, @Description, @Quantity, @Price, @Valu" +
                "edb, @RunOn, @Units, @UseMinCharge, @MinCharge, @EstimateHeaderRef, @AnalysisCod" +
                "e, @OperationNo, @CostCentre, @ForeignCurrency, @ForeignValue, @ComponentID, @Un" +
                "iqueComponentNumber, @SellingRate, @SellingValue, @SellingRunOn, @SellingPriceLo" +
                "cked, @SizeCode, @LineNumber, @ProcessTypeOrder);\r\nSELECT ID, IsAutoPrintingEntr" +
                "y, IsAutoManuallyChanged, PermFixed, QuantFixed, PriceFixed, EstimateID, PaperRe" +
                "f, UniquePaperNumber, Code, Description, Quantity, Price, Valuedb, RunOn, Units," +
                " UseMinCharge, MinCharge, EstimateHeaderRef, AnalysisCode, OperationNo, CostCent" +
                "re, ForeignCurrency, ForeignValue, ComponentID, UniqueComponentNumber, SellingRa" +
                "te, SellingValue, SellingRunOn, SellingPriceLocked, SizeCode, LineNumber, Proces" +
                "sTypeOrder FROM OriginationMaterialInput WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAutoPrintingEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoPrintingEntry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAutoManuallyChanged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoManuallyChanged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermFixed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantFixed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriceFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceFixed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaperRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniquePaperNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniquePaperNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Valuedb", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valuedb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Units", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Units", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseMinCharge", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseMinCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinCharge", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateHeaderRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnalysisCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperationNo", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperationNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComponentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniqueComponentNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueComponentNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingPriceLocked", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPriceLocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SizeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineNumber", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessTypeOrder", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessTypeOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[OriginationMaterialInput] SET [IsAutoPrintingEntry] = @IsAutoPrinti" +
                "ngEntry, [IsAutoManuallyChanged] = @IsAutoManuallyChanged, [PermFixed] = @PermFi" +
                "xed, [QuantFixed] = @QuantFixed, [PriceFixed] = @PriceFixed, [EstimateID] = @Est" +
                "imateID, [PaperRef] = @PaperRef, [UniquePaperNumber] = @UniquePaperNumber, [Code" +
                "] = @Code, [Description] = @Description, [Quantity] = @Quantity, [Price] = @Pric" +
                "e, [Valuedb] = @Valuedb, [RunOn] = @RunOn, [Units] = @Units, [UseMinCharge] = @U" +
                "seMinCharge, [MinCharge] = @MinCharge, [EstimateHeaderRef] = @EstimateHeaderRef," +
                " [AnalysisCode] = @AnalysisCode, [OperationNo] = @OperationNo, [CostCentre] = @C" +
                "ostCentre, [ForeignCurrency] = @ForeignCurrency, [ForeignValue] = @ForeignValue," +
                " [ComponentID] = @ComponentID, [UniqueComponentNumber] = @UniqueComponentNumber," +
                " [SellingRate] = @SellingRate, [SellingValue] = @SellingValue, [SellingRunOn] = " +
                "@SellingRunOn, [SellingPriceLocked] = @SellingPriceLocked, [SizeCode] = @SizeCod" +
                "e, [LineNumber] = @LineNumber, [ProcessTypeOrder] = @ProcessTypeOrder WHERE (([I" +
                "D] = @Original_ID) AND ([IsAutoPrintingEntry] = @Original_IsAutoPrintingEntry) A" +
                "ND ([IsAutoManuallyChanged] = @Original_IsAutoManuallyChanged) AND ([PermFixed] " +
                "= @Original_PermFixed) AND ([QuantFixed] = @Original_QuantFixed) AND ([PriceFixe" +
                "d] = @Original_PriceFixed) AND ((@IsNull_EstimateID = 1 AND [EstimateID] IS NULL" +
                ") OR ([EstimateID] = @Original_EstimateID)) AND ((@IsNull_PaperRef = 1 AND [Pape" +
                "rRef] IS NULL) OR ([PaperRef] = @Original_PaperRef)) AND ((@IsNull_UniquePaperNu" +
                "mber = 1 AND [UniquePaperNumber] IS NULL) OR ([UniquePaperNumber] = @Original_Un" +
                "iquePaperNumber)) AND ((@IsNull_Code = 1 AND [Code] IS NULL) OR ([Code] = @Origi" +
                "nal_Code)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Descrip" +
                "tion] = @Original_Description)) AND ((@IsNull_Quantity = 1 AND [Quantity] IS NUL" +
                "L) OR ([Quantity] = @Original_Quantity)) AND ((@IsNull_Price = 1 AND [Price] IS " +
                "NULL) OR ([Price] = @Original_Price)) AND ((@IsNull_Valuedb = 1 AND [Valuedb] IS" +
                " NULL) OR ([Valuedb] = @Original_Valuedb)) AND ((@IsNull_RunOn = 1 AND [RunOn] I" +
                "S NULL) OR ([RunOn] = @Original_RunOn)) AND ((@IsNull_Units = 1 AND [Units] IS N" +
                "ULL) OR ([Units] = @Original_Units)) AND ([UseMinCharge] = @Original_UseMinCharg" +
                "e) AND ((@IsNull_MinCharge = 1 AND [MinCharge] IS NULL) OR ([MinCharge] = @Origi" +
                "nal_MinCharge)) AND ((@IsNull_EstimateHeaderRef = 1 AND [EstimateHeaderRef] IS N" +
                "ULL) OR ([EstimateHeaderRef] = @Original_EstimateHeaderRef)) AND ((@IsNull_Analy" +
                "sisCode = 1 AND [AnalysisCode] IS NULL) OR ([AnalysisCode] = @Original_AnalysisC" +
                "ode)) AND ((@IsNull_OperationNo = 1 AND [OperationNo] IS NULL) OR ([OperationNo]" +
                " = @Original_OperationNo)) AND ((@IsNull_CostCentre = 1 AND [CostCentre] IS NULL" +
                ") OR ([CostCentre] = @Original_CostCentre)) AND ([ForeignCurrency] = @Original_F" +
                "oreignCurrency) AND ((@IsNull_ForeignValue = 1 AND [ForeignValue] IS NULL) OR ([" +
                "ForeignValue] = @Original_ForeignValue)) AND ((@IsNull_ComponentID = 1 AND [Comp" +
                "onentID] IS NULL) OR ([ComponentID] = @Original_ComponentID)) AND ((@IsNull_Uniq" +
                "ueComponentNumber = 1 AND [UniqueComponentNumber] IS NULL) OR ([UniqueComponentN" +
                "umber] = @Original_UniqueComponentNumber)) AND ((@IsNull_SellingRate = 1 AND [Se" +
                "llingRate] IS NULL) OR ([SellingRate] = @Original_SellingRate)) AND ((@IsNull_Se" +
                "llingValue = 1 AND [SellingValue] IS NULL) OR ([SellingValue] = @Original_Sellin" +
                "gValue)) AND ((@IsNull_SellingRunOn = 1 AND [SellingRunOn] IS NULL) OR ([Selling" +
                "RunOn] = @Original_SellingRunOn)) AND ((@IsNull_SellingPriceLocked = 1 AND [Sell" +
                "ingPriceLocked] IS NULL) OR ([SellingPriceLocked] = @Original_SellingPriceLocked" +
                ")) AND ((@IsNull_SizeCode = 1 AND [SizeCode] IS NULL) OR ([SizeCode] = @Original" +
                "_SizeCode)) AND ((@IsNull_LineNumber = 1 AND [LineNumber] IS NULL) OR ([LineNumb" +
                "er] = @Original_LineNumber)) AND ([ProcessTypeOrder] = @Original_ProcessTypeOrde" +
                "r));\r\nSELECT ID, IsAutoPrintingEntry, IsAutoManuallyChanged, PermFixed, QuantFix" +
                "ed, PriceFixed, EstimateID, PaperRef, UniquePaperNumber, Code, Description, Quan" +
                "tity, Price, Valuedb, RunOn, Units, UseMinCharge, MinCharge, EstimateHeaderRef, " +
                "AnalysisCode, OperationNo, CostCentre, ForeignCurrency, ForeignValue, ComponentI" +
                "D, UniqueComponentNumber, SellingRate, SellingValue, SellingRunOn, SellingPriceL" +
                "ocked, SizeCode, LineNumber, ProcessTypeOrder FROM OriginationMaterialInput WHER" +
                "E (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAutoPrintingEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoPrintingEntry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsAutoManuallyChanged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoManuallyChanged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermFixed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuantFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantFixed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriceFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceFixed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaperRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniquePaperNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniquePaperNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Valuedb", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valuedb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Units", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Units", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseMinCharge", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseMinCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinCharge", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateHeaderRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnalysisCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OperationNo", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperationNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForeignValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComponentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniqueComponentNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueComponentNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingPriceLocked", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPriceLocked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SizeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineNumber", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessTypeOrder", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessTypeOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsAutoPrintingEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoPrintingEntry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsAutoManuallyChanged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsAutoManuallyChanged", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PermFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PermFixed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuantFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuantFixed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PriceFixed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceFixed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaperRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaperRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaperRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UniquePaperNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniquePaperNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniquePaperNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniquePaperNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Price", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Valuedb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valuedb", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Valuedb", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valuedb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Units", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Units", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Units", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Units", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseMinCharge", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseMinCharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MinCharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinCharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinCharge", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinCharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EstimateHeaderRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateHeaderRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimateHeaderRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateHeaderRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnalysisCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnalysisCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OperationNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperationNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OperationNo", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OperationNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignCurrency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ForeignValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForeignValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForeignValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ComponentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ComponentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComponentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UniqueComponentNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueComponentNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniqueComponentNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueComponentNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SellingRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingRate", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SellingValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SellingRunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingRunOn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingRunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SellingPriceLocked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPriceLocked", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingPriceLocked", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPriceLocked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SizeCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SizeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LineNumber", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LineNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessTypeOrder", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessTypeOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PalletCard.Properties.Settings.Default.ThardataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, IsAutoPrintingEntry, IsAutoManuallyChanged, PermFixed, QuantFixed, PriceFixed, EstimateID, PaperRef, UniquePaperNumber, Code, Description, Quantity, Price, Valuedb, RunOn, Units, UseMinCharge, MinCharge, EstimateHeaderRef, AnalysisCode, OperationNo, CostCentre, ForeignCurrency, ForeignValue, ComponentID, UniqueComponentNumber, SellingRate, SellingValue, SellingRunOn, SellingPriceLocked, SizeCode, LineNumber, ProcessTypeOrder FROM dbo.OriginationMaterialInput";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ThardataDataSet.OriginationMaterialInputDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ThardataDataSet.OriginationMaterialInputDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ThardataDataSet.OriginationMaterialInputDataTable dataTable = new ThardataDataSet.OriginationMaterialInputDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet.OriginationMaterialInputDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "OriginationMaterialInput");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    bool Original_IsAutoPrintingEntry, 
                    bool Original_IsAutoManuallyChanged, 
                    bool Original_PermFixed, 
                    bool Original_QuantFixed, 
                    bool Original_PriceFixed, 
                    global::System.Nullable<int> Original_EstimateID, 
                    string Original_PaperRef, 
                    global::System.Nullable<int> Original_UniquePaperNumber, 
                    string Original_Code, 
                    string Original_Description, 
                    global::System.Nullable<double> Original_Quantity, 
                    global::System.Nullable<double> Original_Price, 
                    global::System.Nullable<double> Original_Valuedb, 
                    global::System.Nullable<double> Original_RunOn, 
                    string Original_Units, 
                    bool Original_UseMinCharge, 
                    global::System.Nullable<double> Original_MinCharge, 
                    string Original_EstimateHeaderRef, 
                    string Original_AnalysisCode, 
                    global::System.Nullable<short> Original_OperationNo, 
                    string Original_CostCentre, 
                    int Original_ForeignCurrency, 
                    global::System.Nullable<double> Original_ForeignValue, 
                    global::System.Nullable<int> Original_ComponentID, 
                    global::System.Nullable<int> Original_UniqueComponentNumber, 
                    global::System.Nullable<double> Original_SellingRate, 
                    global::System.Nullable<double> Original_SellingValue, 
                    global::System.Nullable<double> Original_SellingRunOn, 
                    global::System.Nullable<byte> Original_SellingPriceLocked, 
                    string Original_SizeCode, 
                    global::System.Nullable<short> Original_LineNumber, 
                    short Original_ProcessTypeOrder) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((bool)(Original_IsAutoPrintingEntry));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_IsAutoManuallyChanged));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_PermFixed));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_QuantFixed));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_PriceFixed));
            if ((Original_EstimateID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_EstimateID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_PaperRef == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_PaperRef));
            }
            if ((Original_UniquePaperNumber.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_UniquePaperNumber.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Code));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Description));
            }
            if ((Original_Quantity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_Quantity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Price.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_Price.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Valuedb.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_Valuedb.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_RunOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_RunOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Units == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_Units));
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_UseMinCharge));
            if ((Original_MinCharge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_MinCharge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_EstimateHeaderRef == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_EstimateHeaderRef));
            }
            if ((Original_AnalysisCode == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_AnalysisCode));
            }
            if ((Original_OperationNo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((short)(Original_OperationNo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_CostCentre == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_CostCentre));
            }
            this.Adapter.DeleteCommand.Parameters[37].Value = ((int)(Original_ForeignCurrency));
            if ((Original_ForeignValue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((double)(Original_ForeignValue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_ComponentID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((int)(Original_ComponentID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_UniqueComponentNumber.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((int)(Original_UniqueComponentNumber.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_SellingRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((double)(Original_SellingRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_SellingValue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((double)(Original_SellingValue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_SellingRunOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((double)(Original_SellingRunOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_SellingPriceLocked.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((byte)(Original_SellingPriceLocked.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_SizeCode == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_SizeCode));
            }
            if ((Original_LineNumber.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((short)(Original_LineNumber.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[56].Value = ((short)(Original_ProcessTypeOrder));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    bool IsAutoPrintingEntry, 
                    bool IsAutoManuallyChanged, 
                    bool PermFixed, 
                    bool QuantFixed, 
                    bool PriceFixed, 
                    global::System.Nullable<int> EstimateID, 
                    string PaperRef, 
                    global::System.Nullable<int> UniquePaperNumber, 
                    string Code, 
                    string Description, 
                    global::System.Nullable<double> Quantity, 
                    global::System.Nullable<double> Price, 
                    global::System.Nullable<double> Valuedb, 
                    global::System.Nullable<double> RunOn, 
                    string Units, 
                    bool UseMinCharge, 
                    global::System.Nullable<double> MinCharge, 
                    string EstimateHeaderRef, 
                    string AnalysisCode, 
                    global::System.Nullable<short> OperationNo, 
                    string CostCentre, 
                    int ForeignCurrency, 
                    global::System.Nullable<double> ForeignValue, 
                    global::System.Nullable<int> ComponentID, 
                    global::System.Nullable<int> UniqueComponentNumber, 
                    global::System.Nullable<double> SellingRate, 
                    global::System.Nullable<double> SellingValue, 
                    global::System.Nullable<double> SellingRunOn, 
                    global::System.Nullable<byte> SellingPriceLocked, 
                    string SizeCode, 
                    global::System.Nullable<short> LineNumber, 
                    short ProcessTypeOrder) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((bool)(IsAutoPrintingEntry));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(IsAutoManuallyChanged));
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(PermFixed));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(QuantFixed));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(PriceFixed));
            if ((EstimateID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(EstimateID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PaperRef == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(PaperRef));
            }
            if ((UniquePaperNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(UniquePaperNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Code == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Code));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Description));
            }
            if ((Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Price.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(Price.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Valuedb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(Valuedb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((RunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(RunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Units == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Units));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(UseMinCharge));
            if ((MinCharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(MinCharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((EstimateHeaderRef == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(EstimateHeaderRef));
            }
            if ((AnalysisCode == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(AnalysisCode));
            }
            if ((OperationNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((short)(OperationNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((CostCentre == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(CostCentre));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(ForeignCurrency));
            if ((ForeignValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(ForeignValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((ComponentID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(ComponentID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((UniqueComponentNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(UniqueComponentNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SellingRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(SellingRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SellingValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(SellingValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((SellingRunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(SellingRunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((SellingPriceLocked.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((byte)(SellingPriceLocked.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((SizeCode == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(SizeCode));
            }
            if ((LineNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((short)(LineNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((short)(ProcessTypeOrder));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    bool IsAutoPrintingEntry, 
                    bool IsAutoManuallyChanged, 
                    bool PermFixed, 
                    bool QuantFixed, 
                    bool PriceFixed, 
                    global::System.Nullable<int> EstimateID, 
                    string PaperRef, 
                    global::System.Nullable<int> UniquePaperNumber, 
                    string Code, 
                    string Description, 
                    global::System.Nullable<double> Quantity, 
                    global::System.Nullable<double> Price, 
                    global::System.Nullable<double> Valuedb, 
                    global::System.Nullable<double> RunOn, 
                    string Units, 
                    bool UseMinCharge, 
                    global::System.Nullable<double> MinCharge, 
                    string EstimateHeaderRef, 
                    string AnalysisCode, 
                    global::System.Nullable<short> OperationNo, 
                    string CostCentre, 
                    int ForeignCurrency, 
                    global::System.Nullable<double> ForeignValue, 
                    global::System.Nullable<int> ComponentID, 
                    global::System.Nullable<int> UniqueComponentNumber, 
                    global::System.Nullable<double> SellingRate, 
                    global::System.Nullable<double> SellingValue, 
                    global::System.Nullable<double> SellingRunOn, 
                    global::System.Nullable<byte> SellingPriceLocked, 
                    string SizeCode, 
                    global::System.Nullable<short> LineNumber, 
                    short ProcessTypeOrder, 
                    int Original_ID, 
                    bool Original_IsAutoPrintingEntry, 
                    bool Original_IsAutoManuallyChanged, 
                    bool Original_PermFixed, 
                    bool Original_QuantFixed, 
                    bool Original_PriceFixed, 
                    global::System.Nullable<int> Original_EstimateID, 
                    string Original_PaperRef, 
                    global::System.Nullable<int> Original_UniquePaperNumber, 
                    string Original_Code, 
                    string Original_Description, 
                    global::System.Nullable<double> Original_Quantity, 
                    global::System.Nullable<double> Original_Price, 
                    global::System.Nullable<double> Original_Valuedb, 
                    global::System.Nullable<double> Original_RunOn, 
                    string Original_Units, 
                    bool Original_UseMinCharge, 
                    global::System.Nullable<double> Original_MinCharge, 
                    string Original_EstimateHeaderRef, 
                    string Original_AnalysisCode, 
                    global::System.Nullable<short> Original_OperationNo, 
                    string Original_CostCentre, 
                    int Original_ForeignCurrency, 
                    global::System.Nullable<double> Original_ForeignValue, 
                    global::System.Nullable<int> Original_ComponentID, 
                    global::System.Nullable<int> Original_UniqueComponentNumber, 
                    global::System.Nullable<double> Original_SellingRate, 
                    global::System.Nullable<double> Original_SellingValue, 
                    global::System.Nullable<double> Original_SellingRunOn, 
                    global::System.Nullable<byte> Original_SellingPriceLocked, 
                    string Original_SizeCode, 
                    global::System.Nullable<short> Original_LineNumber, 
                    short Original_ProcessTypeOrder, 
                    int ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((bool)(IsAutoPrintingEntry));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(IsAutoManuallyChanged));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(PermFixed));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(QuantFixed));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(PriceFixed));
            if ((EstimateID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(EstimateID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PaperRef == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(PaperRef));
            }
            if ((UniquePaperNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(UniquePaperNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Code == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Code));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Description));
            }
            if ((Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Price.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Price.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Valuedb.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Valuedb.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((RunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(RunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Units == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Units));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(UseMinCharge));
            if ((MinCharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(MinCharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((EstimateHeaderRef == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(EstimateHeaderRef));
            }
            if ((AnalysisCode == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(AnalysisCode));
            }
            if ((OperationNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((short)(OperationNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((CostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(CostCentre));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(ForeignCurrency));
            if ((ForeignValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(ForeignValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((ComponentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(ComponentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((UniqueComponentNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(UniqueComponentNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SellingRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(SellingRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SellingValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(SellingValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((SellingRunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(SellingRunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((SellingPriceLocked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((byte)(SellingPriceLocked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((SizeCode == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(SizeCode));
            }
            if ((LineNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((short)(LineNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((short)(ProcessTypeOrder));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(Original_IsAutoPrintingEntry));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Original_IsAutoManuallyChanged));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(Original_PermFixed));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(Original_QuantFixed));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Original_PriceFixed));
            if ((Original_EstimateID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_EstimateID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_PaperRef == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_PaperRef));
            }
            if ((Original_UniquePaperNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_UniquePaperNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_Code));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_Description));
            }
            if ((Original_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(Original_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_Price.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(Original_Price.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Valuedb.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(Original_Valuedb.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_RunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(Original_RunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_Units == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_Units));
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(Original_UseMinCharge));
            if ((Original_MinCharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_MinCharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_EstimateHeaderRef == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_EstimateHeaderRef));
            }
            if ((Original_AnalysisCode == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_AnalysisCode));
            }
            if ((Original_OperationNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((short)(Original_OperationNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_CostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_CostCentre));
            }
            this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(Original_ForeignCurrency));
            if ((Original_ForeignValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((double)(Original_ForeignValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_ComponentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(Original_ComponentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_UniqueComponentNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_UniqueComponentNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_SellingRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((double)(Original_SellingRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_SellingValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((double)(Original_SellingValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_SellingRunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((double)(Original_SellingRunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_SellingPriceLocked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((byte)(Original_SellingPriceLocked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_SizeCode == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_SizeCode));
            }
            if ((Original_LineNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((short)(Original_LineNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[88].Value = ((short)(Original_ProcessTypeOrder));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    bool IsAutoPrintingEntry, 
                    bool IsAutoManuallyChanged, 
                    bool PermFixed, 
                    bool QuantFixed, 
                    bool PriceFixed, 
                    global::System.Nullable<int> EstimateID, 
                    string PaperRef, 
                    global::System.Nullable<int> UniquePaperNumber, 
                    string Code, 
                    string Description, 
                    global::System.Nullable<double> Quantity, 
                    global::System.Nullable<double> Price, 
                    global::System.Nullable<double> Valuedb, 
                    global::System.Nullable<double> RunOn, 
                    string Units, 
                    bool UseMinCharge, 
                    global::System.Nullable<double> MinCharge, 
                    string EstimateHeaderRef, 
                    string AnalysisCode, 
                    global::System.Nullable<short> OperationNo, 
                    string CostCentre, 
                    int ForeignCurrency, 
                    global::System.Nullable<double> ForeignValue, 
                    global::System.Nullable<int> ComponentID, 
                    global::System.Nullable<int> UniqueComponentNumber, 
                    global::System.Nullable<double> SellingRate, 
                    global::System.Nullable<double> SellingValue, 
                    global::System.Nullable<double> SellingRunOn, 
                    global::System.Nullable<byte> SellingPriceLocked, 
                    string SizeCode, 
                    global::System.Nullable<short> LineNumber, 
                    short ProcessTypeOrder, 
                    int Original_ID, 
                    bool Original_IsAutoPrintingEntry, 
                    bool Original_IsAutoManuallyChanged, 
                    bool Original_PermFixed, 
                    bool Original_QuantFixed, 
                    bool Original_PriceFixed, 
                    global::System.Nullable<int> Original_EstimateID, 
                    string Original_PaperRef, 
                    global::System.Nullable<int> Original_UniquePaperNumber, 
                    string Original_Code, 
                    string Original_Description, 
                    global::System.Nullable<double> Original_Quantity, 
                    global::System.Nullable<double> Original_Price, 
                    global::System.Nullable<double> Original_Valuedb, 
                    global::System.Nullable<double> Original_RunOn, 
                    string Original_Units, 
                    bool Original_UseMinCharge, 
                    global::System.Nullable<double> Original_MinCharge, 
                    string Original_EstimateHeaderRef, 
                    string Original_AnalysisCode, 
                    global::System.Nullable<short> Original_OperationNo, 
                    string Original_CostCentre, 
                    int Original_ForeignCurrency, 
                    global::System.Nullable<double> Original_ForeignValue, 
                    global::System.Nullable<int> Original_ComponentID, 
                    global::System.Nullable<int> Original_UniqueComponentNumber, 
                    global::System.Nullable<double> Original_SellingRate, 
                    global::System.Nullable<double> Original_SellingValue, 
                    global::System.Nullable<double> Original_SellingRunOn, 
                    global::System.Nullable<byte> Original_SellingPriceLocked, 
                    string Original_SizeCode, 
                    global::System.Nullable<short> Original_LineNumber, 
                    short Original_ProcessTypeOrder) {
            return this.Update(IsAutoPrintingEntry, IsAutoManuallyChanged, PermFixed, QuantFixed, PriceFixed, EstimateID, PaperRef, UniquePaperNumber, Code, Description, Quantity, Price, Valuedb, RunOn, Units, UseMinCharge, MinCharge, EstimateHeaderRef, AnalysisCode, OperationNo, CostCentre, ForeignCurrency, ForeignValue, ComponentID, UniqueComponentNumber, SellingRate, SellingValue, SellingRunOn, SellingPriceLocked, SizeCode, LineNumber, ProcessTypeOrder, Original_ID, Original_IsAutoPrintingEntry, Original_IsAutoManuallyChanged, Original_PermFixed, Original_QuantFixed, Original_PriceFixed, Original_EstimateID, Original_PaperRef, Original_UniquePaperNumber, Original_Code, Original_Description, Original_Quantity, Original_Price, Original_Valuedb, Original_RunOn, Original_Units, Original_UseMinCharge, Original_MinCharge, Original_EstimateHeaderRef, Original_AnalysisCode, Original_OperationNo, Original_CostCentre, Original_ForeignCurrency, Original_ForeignValue, Original_ComponentID, Original_UniqueComponentNumber, Original_SellingRate, Original_SellingValue, Original_SellingRunOn, Original_SellingPriceLocked, Original_SizeCode, Original_LineNumber, Original_ProcessTypeOrder, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProductTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProductTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Product";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ManufacturedProduct", "ManufacturedProduct");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Balance", "Balance");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("Colour", "Colour");
            tableMapping.ColumnMappings.Add("dbGroup", "dbGroup");
            tableMapping.ColumnMappings.Add("AnalysisType", "AnalysisType");
            tableMapping.ColumnMappings.Add("Manufacturer", "Manufacturer");
            tableMapping.ColumnMappings.Add("ReOrderQuantity", "ReOrderQuantity");
            tableMapping.ColumnMappings.Add("NormalOrder", "NormalOrder");
            tableMapping.ColumnMappings.Add("PricingType", "PricingType");
            tableMapping.ColumnMappings.Add("Available", "Available");
            tableMapping.ColumnMappings.Add("SizeCode", "SizeCode");
            tableMapping.ColumnMappings.Add("DepthMM", "DepthMM");
            tableMapping.ColumnMappings.Add("WidthMM", "WidthMM");
            tableMapping.ColumnMappings.Add("IgnoreStockLevels", "IgnoreStockLevels");
            tableMapping.ColumnMappings.Add("Packed", "Packed");
            tableMapping.ColumnMappings.Add("LastChanged", "LastChanged");
            tableMapping.ColumnMappings.Add("MinCharge", "MinCharge");
            tableMapping.ColumnMappings.Add("EstType", "EstType");
            tableMapping.ColumnMappings.Add("EstUnits", "EstUnits");
            tableMapping.ColumnMappings.Add("EstTonnePrice", "EstTonnePrice");
            tableMapping.ColumnMappings.Add("Copier", "Copier");
            tableMapping.ColumnMappings.Add("StockLocation", "StockLocation");
            tableMapping.ColumnMappings.Add("EstAnalysisCode", "EstAnalysisCode");
            tableMapping.ColumnMappings.Add("VatCode", "VatCode");
            tableMapping.ColumnMappings.Add("SupplierVatCode", "SupplierVatCode");
            tableMapping.ColumnMappings.Add("Nominal", "Nominal");
            tableMapping.ColumnMappings.Add("CostCentre", "CostCentre");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("SellingPrice", "SellingPrice");
            tableMapping.ColumnMappings.Add("ExtraFlags", "ExtraFlags");
            tableMapping.ColumnMappings.Add("PNominal", "PNominal");
            tableMapping.ColumnMappings.Add("PCostCentre", "PCostCentre");
            tableMapping.ColumnMappings.Add("PDepartment", "PDepartment");
            tableMapping.ColumnMappings.Add("CurrentCost", "CurrentCost");
            tableMapping.ColumnMappings.Add("ExcludeRequisitions", "ExcludeRequisitions");
            tableMapping.ColumnMappings.Add("StkRef1", "StkRef1");
            tableMapping.ColumnMappings.Add("StkRef2", "StkRef2");
            tableMapping.ColumnMappings.Add("StkRef3", "StkRef3");
            tableMapping.ColumnMappings.Add("StkRef4", "StkRef4");
            tableMapping.ColumnMappings.Add("StkRef5", "StkRef5");
            tableMapping.ColumnMappings.Add("StkRef6", "StkRef6");
            tableMapping.ColumnMappings.Add("StkRef7", "StkRef7");
            tableMapping.ColumnMappings.Add("StkRef8", "StkRef8");
            tableMapping.ColumnMappings.Add("StkRef9", "StkRef9");
            tableMapping.ColumnMappings.Add("StkRef10", "StkRef10");
            tableMapping.ColumnMappings.Add("IsRollLabel", "IsRollLabel");
            tableMapping.ColumnMappings.Add("InvoiceBalance", "InvoiceBalance");
            tableMapping.ColumnMappings.Add("SupplierRef", "SupplierRef");
            tableMapping.ColumnMappings.Add("LeadTime", "LeadTime");
            tableMapping.ColumnMappings.Add("SupplierCode", "SupplierCode");
            tableMapping.ColumnMappings.Add("WebURL", "WebURL");
            tableMapping.ColumnMappings.Add("PurchaseUnits", "PurchaseUnits");
            tableMapping.ColumnMappings.Add("SupplierCost", "SupplierCost");
            tableMapping.ColumnMappings.Add("LastDocumentNumber", "LastDocumentNumber");
            tableMapping.ColumnMappings.Add("IsCallOffItem", "IsCallOffItem");
            tableMapping.ColumnMappings.Add("InvoiceCostPrice", "InvoiceCostPrice");
            tableMapping.ColumnMappings.Add("ExtraInfo", "ExtraInfo");
            tableMapping.ColumnMappings.Add("SOPLeadTime", "SOPLeadTime");
            tableMapping.ColumnMappings.Add("NoHistory", "NoHistory");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            tableMapping.ColumnMappings.Add("SuppDescUnits", "SuppDescUnits");
            tableMapping.ColumnMappings.Add("LongestEdge", "LongestEdge");
            tableMapping.ColumnMappings.Add("CommodityCode", "CommodityCode");
            tableMapping.ColumnMappings.Add("CountryOfOrigin", "CountryOfOrigin");
            tableMapping.ColumnMappings.Add("PurchaseCurrency", "PurchaseCurrency");
            tableMapping.ColumnMappings.Add("SellingCurrency", "SellingCurrency");
            tableMapping.ColumnMappings.Add("EstimateID", "EstimateID");
            tableMapping.ColumnMappings.Add("LastSupplierCode", "LastSupplierCode");
            tableMapping.ColumnMappings.Add("LastReceivedQuantity", "LastReceivedQuantity");
            tableMapping.ColumnMappings.Add("LastPurchasePrice", "LastPurchasePrice");
            tableMapping.ColumnMappings.Add("LastPurchaseDate", "LastPurchaseDate");
            tableMapping.ColumnMappings.Add("LinkedOperationID", "LinkedOperationID");
            tableMapping.ColumnMappings.Add("LinkedOperatorID", "LinkedOperatorID");
            tableMapping.ColumnMappings.Add("ExpiryStatus", "ExpiryStatus");
            tableMapping.ColumnMappings.Add("ExpiresOnDate", "ExpiresOnDate");
            tableMapping.ColumnMappings.Add("AlternativeProduct", "AlternativeProduct");
            tableMapping.ColumnMappings.Add("AlternativeProductSize", "AlternativeProductSize");
            tableMapping.ColumnMappings.Add("SecondAltProduct", "SecondAltProduct");
            tableMapping.ColumnMappings.Add("SecondAltProductSize", "SecondAltProductSize");
            tableMapping.ColumnMappings.Add("Generic", "Generic");
            tableMapping.ColumnMappings.Add("IsComposite", "IsComposite");
            tableMapping.ColumnMappings.Add("HeightMM", "HeightMM");
            tableMapping.ColumnMappings.Add("PalletDepth", "PalletDepth");
            tableMapping.ColumnMappings.Add("PalletWidth", "PalletWidth");
            tableMapping.ColumnMappings.Add("PalletHeight", "PalletHeight");
            tableMapping.ColumnMappings.Add("PalletPacked", "PalletPacked");
            tableMapping.ColumnMappings.Add("PalletWeight", "PalletWeight");
            tableMapping.ColumnMappings.Add("LocationGroup", "LocationGroup");
            tableMapping.ColumnMappings.Add("UseFullPack", "UseFullPack");
            tableMapping.ColumnMappings.Add("PopulatedQuantity", "PopulatedQuantity");
            tableMapping.ColumnMappings.Add("PopulatedWeight", "PopulatedWeight");
            tableMapping.ColumnMappings.Add("PackedHeight", "PackedHeight");
            tableMapping.ColumnMappings.Add("PackedDepth", "PackedDepth");
            tableMapping.ColumnMappings.Add("PackedWidth", "PackedWidth");
            tableMapping.ColumnMappings.Add("PackedWeight", "PackedWeight");
            tableMapping.ColumnMappings.Add("BoxedIn", "BoxedIn");
            tableMapping.ColumnMappings.Add("EstDescriptionContentID", "EstDescriptionContentID");
            tableMapping.ColumnMappings.Add("POAuthorityTypeID", "POAuthorityTypeID");
            tableMapping.ColumnMappings.Add("AutoPost", "AutoPost");
            tableMapping.ColumnMappings.Add("CertificationID", "CertificationID");
            tableMapping.ColumnMappings.Add("Claim", "Claim");
            tableMapping.ColumnMappings.Add("CodeAlias", "CodeAlias");
            tableMapping.ColumnMappings.Add("BoardCode", "BoardCode");
            tableMapping.ColumnMappings.Add("GrainDirection", "GrainDirection");
            tableMapping.ColumnMappings.Add("AllowCustomSize", "AllowCustomSize");
            tableMapping.ColumnMappings.Add("BasketAuthorityTypeID", "BasketAuthorityTypeID");
            tableMapping.ColumnMappings.Add("ParentJob", "ParentJob");
            tableMapping.ColumnMappings.Add("NumberControlled", "NumberControlled");
            tableMapping.ColumnMappings.Add("OnDemand", "OnDemand");
            tableMapping.ColumnMappings.Add("GradeID", "GradeID");
            tableMapping.ColumnMappings.Add("MinQty", "MinQty");
            tableMapping.ColumnMappings.Add("MaxQty", "MaxQty");
            tableMapping.ColumnMappings.Add("Inactive", "Inactive");
            tableMapping.ColumnMappings.Add("AutomationRule", "AutomationRule");
            tableMapping.ColumnMappings.Add("FileUpload", "FileUpload");
            tableMapping.ColumnMappings.Add("DateModified", "DateModified");
            tableMapping.ColumnMappings.Add("ModifiedByUserID", "ModifiedByUserID");
            tableMapping.ColumnMappings.Add("ReplacementMaterial", "ReplacementMaterial");
            tableMapping.ColumnMappings.Add("ListAlias", "ListAlias");
            tableMapping.ColumnMappings.Add("ForceLocation", "ForceLocation");
            tableMapping.ColumnMappings.Add("IssueAtCost", "IssueAtCost");
            tableMapping.ColumnMappings.Add("HeightMarginMM", "HeightMarginMM");
            tableMapping.ColumnMappings.Add("WidthMarginMM", "WidthMarginMM");
            tableMapping.ColumnMappings.Add("XPosition", "XPosition");
            tableMapping.ColumnMappings.Add("YPosition", "YPosition");
            tableMapping.ColumnMappings.Add("UseLeastCost", "UseLeastCost");
            tableMapping.ColumnMappings.Add("CycleCount", "CycleCount");
            tableMapping.ColumnMappings.Add("ProductTypes_ID", "ProductTypes_ID");
            tableMapping.ColumnMappings.Add("IsConfigurable", "IsConfigurable");
            tableMapping.ColumnMappings.Add("MinimumQuantity", "MinimumQuantity");
            tableMapping.ColumnMappings.Add("IsCoatedOneSide", "IsCoatedOneSide");
            tableMapping.ColumnMappings.Add("BasicSizesID", "BasicSizesID");
            tableMapping.ColumnMappings.Add("SalesTaxCodeID", "SalesTaxCodeID");
            tableMapping.ColumnMappings.Add("UseTaxCodeID", "UseTaxCodeID");
            tableMapping.ColumnMappings.Add("ConsignmentBalance", "ConsignmentBalance");
            tableMapping.ColumnMappings.Add("BOMRevision", "BOMRevision");
            tableMapping.ColumnMappings.Add("PriceListMaterialGroupID", "PriceListMaterialGroupID");
            tableMapping.ColumnMappings.Add("AltWeight", "AltWeight");
            tableMapping.ColumnMappings.Add("CanOverridePackQuantity", "CanOverridePackQuantity");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Product] WHERE (([ID] = @Original_ID) AND ([ManufacturedProduc" +
                "t] = @Original_ManufacturedProduct) AND ([Code] = @Original_Code) AND ((@IsNull_" +
                "Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Descrip" +
                "tion)) AND ([Balance] = @Original_Balance) AND ([Type] = @Original_Type) AND ([U" +
                "nitPrice] = @Original_UnitPrice) AND ((@IsNull_Colour = 1 AND [Colour] IS NULL) " +
                "OR ([Colour] = @Original_Colour)) AND ((@IsNull_dbGroup = 1 AND [dbGroup] IS NUL" +
                "L) OR ([dbGroup] = @Original_dbGroup)) AND ((@IsNull_AnalysisType = 1 AND [Analy" +
                "sisType] IS NULL) OR ([AnalysisType] = @Original_AnalysisType)) AND ((@IsNull_Ma" +
                "nufacturer = 1 AND [Manufacturer] IS NULL) OR ([Manufacturer] = @Original_Manufa" +
                "cturer)) AND ([ReOrderQuantity] = @Original_ReOrderQuantity) AND ([NormalOrder] " +
                "= @Original_NormalOrder) AND ((@IsNull_PricingType = 1 AND [PricingType] IS NULL" +
                ") OR ([PricingType] = @Original_PricingType)) AND ([Available] = @Original_Avail" +
                "able) AND ((@IsNull_SizeCode = 1 AND [SizeCode] IS NULL) OR ([SizeCode] = @Origi" +
                "nal_SizeCode)) AND ([DepthMM] = @Original_DepthMM) AND ([WidthMM] = @Original_Wi" +
                "dthMM) AND ([IgnoreStockLevels] = @Original_IgnoreStockLevels) AND ([Packed] = @" +
                "Original_Packed) AND ((@IsNull_LastChanged = 1 AND [LastChanged] IS NULL) OR ([L" +
                "astChanged] = @Original_LastChanged)) AND ([MinCharge] = @Original_MinCharge) AN" +
                "D ([EstType] = @Original_EstType) AND ((@IsNull_EstUnits = 1 AND [EstUnits] IS N" +
                "ULL) OR ([EstUnits] = @Original_EstUnits)) AND ([EstTonnePrice] = @Original_EstT" +
                "onnePrice) AND ([Copier] = @Original_Copier) AND ((@IsNull_StockLocation = 1 AND" +
                " [StockLocation] IS NULL) OR ([StockLocation] = @Original_StockLocation)) AND ((" +
                "@IsNull_EstAnalysisCode = 1 AND [EstAnalysisCode] IS NULL) OR ([EstAnalysisCode]" +
                " = @Original_EstAnalysisCode)) AND ([VatCode] = @Original_VatCode) AND ((@IsNull" +
                "_SupplierVatCode = 1 AND [SupplierVatCode] IS NULL) OR ([SupplierVatCode] = @Ori" +
                "ginal_SupplierVatCode)) AND ((@IsNull_Nominal = 1 AND [Nominal] IS NULL) OR ([No" +
                "minal] = @Original_Nominal)) AND ((@IsNull_CostCentre = 1 AND [CostCentre] IS NU" +
                "LL) OR ([CostCentre] = @Original_CostCentre)) AND ((@IsNull_Department = 1 AND [" +
                "Department] IS NULL) OR ([Department] = @Original_Department)) AND ([SellingPric" +
                "e] = @Original_SellingPrice) AND ([ExtraFlags] = @Original_ExtraFlags) AND ((@Is" +
                "Null_PNominal = 1 AND [PNominal] IS NULL) OR ([PNominal] = @Original_PNominal)) " +
                "AND ((@IsNull_PCostCentre = 1 AND [PCostCentre] IS NULL) OR ([PCostCentre] = @Or" +
                "iginal_PCostCentre)) AND ((@IsNull_PDepartment = 1 AND [PDepartment] IS NULL) OR" +
                " ([PDepartment] = @Original_PDepartment)) AND ([CurrentCost] = @Original_Current" +
                "Cost) AND ([ExcludeRequisitions] = @Original_ExcludeRequisitions) AND ((@IsNull_" +
                "StkRef1 = 1 AND [StkRef1] IS NULL) OR ([StkRef1] = @Original_StkRef1)) AND ((@Is" +
                "Null_StkRef2 = 1 AND [StkRef2] IS NULL) OR ([StkRef2] = @Original_StkRef2)) AND " +
                "((@IsNull_StkRef3 = 1 AND [StkRef3] IS NULL) OR ([StkRef3] = @Original_StkRef3))" +
                " AND ((@IsNull_StkRef4 = 1 AND [StkRef4] IS NULL) OR ([StkRef4] = @Original_StkR" +
                "ef4)) AND ((@IsNull_StkRef5 = 1 AND [StkRef5] IS NULL) OR ([StkRef5] = @Original" +
                "_StkRef5)) AND ((@IsNull_StkRef6 = 1 AND [StkRef6] IS NULL) OR ([StkRef6] = @Ori" +
                "ginal_StkRef6)) AND ((@IsNull_StkRef7 = 1 AND [StkRef7] IS NULL) OR ([StkRef7] =" +
                " @Original_StkRef7)) AND ((@IsNull_StkRef8 = 1 AND [StkRef8] IS NULL) OR ([StkRe" +
                "f8] = @Original_StkRef8)) AND ((@IsNull_StkRef9 = 1 AND [StkRef9] IS NULL) OR ([" +
                "StkRef9] = @Original_StkRef9)) AND ((@IsNull_StkRef10 = 1 AND [StkRef10] IS NULL" +
                ") OR ([StkRef10] = @Original_StkRef10)) AND ([IsRollLabel] = @Original_IsRollLab" +
                "el) AND ([InvoiceBalance] = @Original_InvoiceBalance) AND ((@IsNull_SupplierRef " +
                "= 1 AND [SupplierRef] IS NULL) OR ([SupplierRef] = @Original_SupplierRef)) AND (" +
                "[LeadTime] = @Original_LeadTime) AND ((@IsNull_SupplierCode = 1 AND [SupplierCod" +
                "e] IS NULL) OR ([SupplierCode] = @Original_SupplierCode)) AND ((@IsNull_WebURL =" +
                " 1 AND [WebURL] IS NULL) OR ([WebURL] = @Original_WebURL)) AND ((@IsNull_Purchas" +
                "eUnits = 1 AND [PurchaseUnits] IS NULL) OR ([PurchaseUnits] = @Original_Purchase" +
                "Units)) AND ([SupplierCost] = @Original_SupplierCost) AND ([LastDocumentNumber] " +
                "= @Original_LastDocumentNumber) AND ([IsCallOffItem] = @Original_IsCallOffItem) " +
                "AND ([InvoiceCostPrice] = @Original_InvoiceCostPrice) AND ((@IsNull_ExtraInfo = " +
                "1 AND [ExtraInfo] IS NULL) OR ([ExtraInfo] = @Original_ExtraInfo)) AND ([SOPLead" +
                "Time] = @Original_SOPLeadTime) AND ([NoHistory] = @Original_NoHistory) AND ([Wei" +
                "ght] = @Original_Weight) AND ((@IsNull_SuppDescUnits = 1 AND [SuppDescUnits] IS " +
                "NULL) OR ([SuppDescUnits] = @Original_SuppDescUnits)) AND ([LongestEdge] = @Orig" +
                "inal_LongestEdge) AND ((@IsNull_CommodityCode = 1 AND [CommodityCode] IS NULL) O" +
                "R ([CommodityCode] = @Original_CommodityCode)) AND ((@IsNull_CountryOfOrigin = 1" +
                " AND [CountryOfOrigin] IS NULL) OR ([CountryOfOrigin] = @Original_CountryOfOrigi" +
                "n)) AND ([PurchaseCurrency] = @Original_PurchaseCurrency) AND ([SellingCurrency]" +
                " = @Original_SellingCurrency) AND ([EstimateID] = @Original_EstimateID) AND ((@I" +
                "sNull_LastSupplierCode = 1 AND [LastSupplierCode] IS NULL) OR ([LastSupplierCode" +
                "] = @Original_LastSupplierCode)) AND ([LastReceivedQuantity] = @Original_LastRec" +
                "eivedQuantity) AND ([LastPurchasePrice] = @Original_LastPurchasePrice) AND ((@Is" +
                "Null_LastPurchaseDate = 1 AND [LastPurchaseDate] IS NULL) OR ([LastPurchaseDate]" +
                " = @Original_LastPurchaseDate)) AND ([LinkedOperationID] = @Original_LinkedOpera" +
                "tionID) AND ([LinkedOperatorID] = @Original_LinkedOperatorID) AND ([ExpiryStatus" +
                "] = @Original_ExpiryStatus) AND ((@IsNull_ExpiresOnDate = 1 AND [ExpiresOnDate] " +
                "IS NULL) OR ([ExpiresOnDate] = @Original_ExpiresOnDate)) AND ((@IsNull_Alternati" +
                "veProduct = 1 AND [AlternativeProduct] IS NULL) OR ([AlternativeProduct] = @Orig" +
                "inal_AlternativeProduct)) AND ((@IsNull_AlternativeProductSize = 1 AND [Alternat" +
                "iveProductSize] IS NULL) OR ([AlternativeProductSize] = @Original_AlternativePro" +
                "ductSize)) AND ((@IsNull_SecondAltProduct = 1 AND [SecondAltProduct] IS NULL) OR" +
                " ([SecondAltProduct] = @Original_SecondAltProduct)) AND ((@IsNull_SecondAltProdu" +
                "ctSize = 1 AND [SecondAltProductSize] IS NULL) OR ([SecondAltProductSize] = @Ori" +
                "ginal_SecondAltProductSize)) AND ([Generic] = @Original_Generic) AND ([IsComposi" +
                "te] = @Original_IsComposite) AND ([HeightMM] = @Original_HeightMM) AND ([PalletD" +
                "epth] = @Original_PalletDepth) AND ([PalletWidth] = @Original_PalletWidth) AND (" +
                "[PalletHeight] = @Original_PalletHeight) AND ([PalletPacked] = @Original_PalletP" +
                "acked) AND ([PalletWeight] = @Original_PalletWeight) AND ((@IsNull_LocationGroup" +
                " = 1 AND [LocationGroup] IS NULL) OR ([LocationGroup] = @Original_LocationGroup)" +
                ") AND ([UseFullPack] = @Original_UseFullPack) AND ([PopulatedQuantity] = @Origin" +
                "al_PopulatedQuantity) AND ([PopulatedWeight] = @Original_PopulatedWeight) AND ([" +
                "PackedHeight] = @Original_PackedHeight) AND ([PackedDepth] = @Original_PackedDep" +
                "th) AND ([PackedWidth] = @Original_PackedWidth) AND ([PackedWeight] = @Original_" +
                "PackedWeight) AND ([BoxedIn] = @Original_BoxedIn) AND ([EstDescriptionContentID]" +
                " = @Original_EstDescriptionContentID) AND ([POAuthorityTypeID] = @Original_POAut" +
                "horityTypeID) AND ([AutoPost] = @Original_AutoPost) AND ([CertificationID] = @Or" +
                "iginal_CertificationID) AND ((@IsNull_Claim = 1 AND [Claim] IS NULL) OR ([Claim]" +
                " = @Original_Claim)) AND ((@IsNull_CodeAlias = 1 AND [CodeAlias] IS NULL) OR ([C" +
                "odeAlias] = @Original_CodeAlias)) AND ((@IsNull_BoardCode = 1 AND [BoardCode] IS" +
                " NULL) OR ([BoardCode] = @Original_BoardCode)) AND ([GrainDirection] = @Original" +
                "_GrainDirection) AND ([AllowCustomSize] = @Original_AllowCustomSize) AND ([Baske" +
                "tAuthorityTypeID] = @Original_BasketAuthorityTypeID) AND ((@IsNull_ParentJob = 1" +
                " AND [ParentJob] IS NULL) OR ([ParentJob] = @Original_ParentJob)) AND ([NumberCo" +
                "ntrolled] = @Original_NumberControlled) AND ([OnDemand] = @Original_OnDemand) AN" +
                "D ([GradeID] = @Original_GradeID) AND ([MinQty] = @Original_MinQty) AND ([MaxQty" +
                "] = @Original_MaxQty) AND ([Inactive] = @Original_Inactive) AND ([AutomationRule" +
                "] = @Original_AutomationRule) AND ([FileUpload] = @Original_FileUpload) AND ((@I" +
                "sNull_DateModified = 1 AND [DateModified] IS NULL) OR ([DateModified] = @Origina" +
                "l_DateModified)) AND ((@IsNull_ModifiedByUserID = 1 AND [ModifiedByUserID] IS NU" +
                "LL) OR ([ModifiedByUserID] = @Original_ModifiedByUserID)) AND ([ReplacementMater" +
                "ial] = @Original_ReplacementMaterial) AND ((@IsNull_ListAlias = 1 AND [ListAlias" +
                "] IS NULL) OR ([ListAlias] = @Original_ListAlias)) AND ([ForceLocation] = @Origi" +
                "nal_ForceLocation) AND ([IssueAtCost] = @Original_IssueAtCost) AND ([HeightMargi" +
                "nMM] = @Original_HeightMarginMM) AND ([WidthMarginMM] = @Original_WidthMarginMM)" +
                " AND ([XPosition] = @Original_XPosition) AND ([YPosition] = @Original_YPosition)" +
                " AND ([UseLeastCost] = @Original_UseLeastCost) AND ([CycleCount] = @Original_Cyc" +
                "leCount) AND ([ProductTypes_ID] = @Original_ProductTypes_ID) AND ([IsConfigurabl" +
                "e] = @Original_IsConfigurable) AND ([MinimumQuantity] = @Original_MinimumQuantit" +
                "y) AND ([IsCoatedOneSide] = @Original_IsCoatedOneSide) AND ([BasicSizesID] = @Or" +
                "iginal_BasicSizesID) AND ([SalesTaxCodeID] = @Original_SalesTaxCodeID) AND ([Use" +
                "TaxCodeID] = @Original_UseTaxCodeID) AND ([ConsignmentBalance] = @Original_Consi" +
                "gnmentBalance) AND ([BOMRevision] = @Original_BOMRevision) AND ([PriceListMateri" +
                "alGroupID] = @Original_PriceListMaterialGroupID) AND ([AltWeight] = @Original_Al" +
                "tWeight) AND ([CanOverridePackQuantity] = @Original_CanOverridePackQuantity))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ManufacturedProduct", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturedProduct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Balance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Balance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Colour", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Colour", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dbGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dbGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnalysisType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnalysisType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Manufacturer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacturer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Manufacturer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacturer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReOrderQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReOrderQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NormalOrder", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NormalOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PricingType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricingType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PricingType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricingType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Available", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Available", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SizeCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SizeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepthMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepthMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WidthMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WidthMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IgnoreStockLevels", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IgnoreStockLevels", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Packed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Packed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastChanged", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastChanged", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastChanged", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastChanged", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinCharge", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinCharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EstUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstUnits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstUnits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstTonnePrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstTonnePrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Copier", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Copier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StockLocation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockLocation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockLocation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EstAnalysisCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstAnalysisCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstAnalysisCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstAnalysisCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SupplierVatCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierVatCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierVatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierVatCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nominal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Department", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtraFlags", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraFlags", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNominal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNominal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNominal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PCostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PDepartment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PDepartment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PDepartment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PDepartment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrentCost", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExcludeRequisitions", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcludeRequisitions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsRollLabel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRollLabel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceBalance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SupplierRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeadTime", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeadTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SupplierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WebURL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WebURL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WebURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WebURL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PurchaseUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurchaseUnits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PurchaseUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurchaseUnits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierCost", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastDocumentNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastDocumentNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsCallOffItem", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCallOffItem", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceCostPrice", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCostPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExtraInfo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraInfo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtraInfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraInfo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOPLeadTime", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOPLeadTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoHistory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoHistory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SuppDescUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppDescUnits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuppDescUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppDescUnits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LongestEdge", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongestEdge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommodityCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommodityCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommodityCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommodityCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountryOfOrigin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PurchaseCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurchaseCurrency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingCurrency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSupplierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSupplierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSupplierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastReceivedQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastReceivedQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPurchasePrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPurchasePrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastPurchaseDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPurchaseDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPurchaseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPurchaseDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkedOperationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedOperationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkedOperatorID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedOperatorID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExpiryStatus", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpiryStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExpiresOnDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpiresOnDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExpiresOnDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpiresOnDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlternativeProduct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProduct", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternativeProduct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProduct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlternativeProductSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProductSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternativeProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProductSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecondAltProduct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProduct", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecondAltProduct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProduct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecondAltProductSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProductSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecondAltProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProductSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Generic", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsComposite", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsComposite", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeightMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeightMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PalletDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PalletWidth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PalletHeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PalletPacked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletPacked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PalletWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LocationGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseFullPack", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseFullPack", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PopulatedQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopulatedQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PopulatedWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopulatedWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackedHeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackedDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackedWidth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackedWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BoxedIn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoxedIn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstDescriptionContentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstDescriptionContentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POAuthorityTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POAuthorityTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutoPost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoPost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Claim", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Claim", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Claim", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Claim", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CodeAlias", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeAlias", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodeAlias", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeAlias", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BoardCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoardCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BoardCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoardCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GrainDirection", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GrainDirection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowCustomSize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowCustomSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BasketAuthorityTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BasketAuthorityTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ParentJob", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentJob", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParentJob", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentJob", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberControlled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberControlled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OnDemand", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnDemand", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GradeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GradeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinQty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxQty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inactive", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutomationRule", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomationRule", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FileUpload", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FileUpload", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateModified", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReplacementMaterial", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReplacementMaterial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ListAlias", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ListAlias", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListAlias", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ListAlias", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForceLocation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceLocation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IssueAtCost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueAtCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeightMarginMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeightMarginMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WidthMarginMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WidthMarginMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_XPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "XPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseLeastCost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseLeastCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CycleCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductTypes_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTypes_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConfigurable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfigurable", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinimumQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsCoatedOneSide", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCoatedOneSide", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BasicSizesID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BasicSizesID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTaxCodeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConsignmentBalance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsignmentBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PriceListMaterialGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceListMaterialGroupID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AltWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AltWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CanOverridePackQuantity", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CanOverridePackQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Product] ([ManufacturedProduct], [Code], [Description], [Balan" +
                "ce], [Type], [UnitPrice], [Colour], [dbGroup], [AnalysisType], [Manufacturer], [" +
                "ReOrderQuantity], [NormalOrder], [PricingType], [Available], [SizeCode], [DepthM" +
                "M], [WidthMM], [IgnoreStockLevels], [Packed], [LastChanged], [MinCharge], [EstTy" +
                "pe], [EstUnits], [EstTonnePrice], [Copier], [StockLocation], [EstAnalysisCode], " +
                "[VatCode], [SupplierVatCode], [Nominal], [CostCentre], [Department], [SellingPri" +
                "ce], [ExtraFlags], [PNominal], [PCostCentre], [PDepartment], [CurrentCost], [Exc" +
                "ludeRequisitions], [StkRef1], [StkRef2], [StkRef3], [StkRef4], [StkRef5], [StkRe" +
                "f6], [StkRef7], [StkRef8], [StkRef9], [StkRef10], [IsRollLabel], [InvoiceBalance" +
                "], [SupplierRef], [LeadTime], [SupplierCode], [WebURL], [PurchaseUnits], [Suppli" +
                "erCost], [LastDocumentNumber], [IsCallOffItem], [InvoiceCostPrice], [ExtraInfo]," +
                " [SOPLeadTime], [NoHistory], [Weight], [SuppDescUnits], [LongestEdge], [Commodit" +
                "yCode], [CountryOfOrigin], [PurchaseCurrency], [SellingCurrency], [EstimateID], " +
                "[LastSupplierCode], [LastReceivedQuantity], [LastPurchasePrice], [LastPurchaseDa" +
                "te], [LinkedOperationID], [LinkedOperatorID], [ExpiryStatus], [ExpiresOnDate], [" +
                "AlternativeProduct], [AlternativeProductSize], [SecondAltProduct], [SecondAltPro" +
                "ductSize], [Generic], [IsComposite], [HeightMM], [PalletDepth], [PalletWidth], [" +
                "PalletHeight], [PalletPacked], [PalletWeight], [LocationGroup], [UseFullPack], [" +
                "PopulatedQuantity], [PopulatedWeight], [PackedHeight], [PackedDepth], [PackedWid" +
                "th], [PackedWeight], [BoxedIn], [EstDescriptionContentID], [POAuthorityTypeID], " +
                "[AutoPost], [CertificationID], [Claim], [CodeAlias], [BoardCode], [GrainDirectio" +
                "n], [AllowCustomSize], [BasketAuthorityTypeID], [ParentJob], [NumberControlled]," +
                " [OnDemand], [GradeID], [MinQty], [MaxQty], [Inactive], [AutomationRule], [FileU" +
                "pload], [DateModified], [ModifiedByUserID], [ReplacementMaterial], [ListAlias], " +
                "[ForceLocation], [IssueAtCost], [HeightMarginMM], [WidthMarginMM], [XPosition], " +
                "[YPosition], [UseLeastCost], [CycleCount], [ProductTypes_ID], [IsConfigurable], " +
                "[MinimumQuantity], [IsCoatedOneSide], [BasicSizesID], [SalesTaxCodeID], [UseTaxC" +
                "odeID], [ConsignmentBalance], [BOMRevision], [PriceListMaterialGroupID], [AltWei" +
                "ght], [CanOverridePackQuantity]) VALUES (@ManufacturedProduct, @Code, @Descripti" +
                "on, @Balance, @Type, @UnitPrice, @Colour, @dbGroup, @AnalysisType, @Manufacturer" +
                ", @ReOrderQuantity, @NormalOrder, @PricingType, @Available, @SizeCode, @DepthMM," +
                " @WidthMM, @IgnoreStockLevels, @Packed, @LastChanged, @MinCharge, @EstType, @Est" +
                "Units, @EstTonnePrice, @Copier, @StockLocation, @EstAnalysisCode, @VatCode, @Sup" +
                "plierVatCode, @Nominal, @CostCentre, @Department, @SellingPrice, @ExtraFlags, @P" +
                "Nominal, @PCostCentre, @PDepartment, @CurrentCost, @ExcludeRequisitions, @StkRef" +
                "1, @StkRef2, @StkRef3, @StkRef4, @StkRef5, @StkRef6, @StkRef7, @StkRef8, @StkRef" +
                "9, @StkRef10, @IsRollLabel, @InvoiceBalance, @SupplierRef, @LeadTime, @SupplierC" +
                "ode, @WebURL, @PurchaseUnits, @SupplierCost, @LastDocumentNumber, @IsCallOffItem" +
                ", @InvoiceCostPrice, @ExtraInfo, @SOPLeadTime, @NoHistory, @Weight, @SuppDescUni" +
                "ts, @LongestEdge, @CommodityCode, @CountryOfOrigin, @PurchaseCurrency, @SellingC" +
                "urrency, @EstimateID, @LastSupplierCode, @LastReceivedQuantity, @LastPurchasePri" +
                "ce, @LastPurchaseDate, @LinkedOperationID, @LinkedOperatorID, @ExpiryStatus, @Ex" +
                "piresOnDate, @AlternativeProduct, @AlternativeProductSize, @SecondAltProduct, @S" +
                "econdAltProductSize, @Generic, @IsComposite, @HeightMM, @PalletDepth, @PalletWid" +
                "th, @PalletHeight, @PalletPacked, @PalletWeight, @LocationGroup, @UseFullPack, @" +
                "PopulatedQuantity, @PopulatedWeight, @PackedHeight, @PackedDepth, @PackedWidth, " +
                "@PackedWeight, @BoxedIn, @EstDescriptionContentID, @POAuthorityTypeID, @AutoPost" +
                ", @CertificationID, @Claim, @CodeAlias, @BoardCode, @GrainDirection, @AllowCusto" +
                "mSize, @BasketAuthorityTypeID, @ParentJob, @NumberControlled, @OnDemand, @GradeI" +
                "D, @MinQty, @MaxQty, @Inactive, @AutomationRule, @FileUpload, @DateModified, @Mo" +
                "difiedByUserID, @ReplacementMaterial, @ListAlias, @ForceLocation, @IssueAtCost, " +
                "@HeightMarginMM, @WidthMarginMM, @XPosition, @YPosition, @UseLeastCost, @CycleCo" +
                "unt, @ProductTypes_ID, @IsConfigurable, @MinimumQuantity, @IsCoatedOneSide, @Bas" +
                "icSizesID, @SalesTaxCodeID, @UseTaxCodeID, @ConsignmentBalance, @BOMRevision, @P" +
                "riceListMaterialGroupID, @AltWeight, @CanOverridePackQuantity);\r\nSELECT ID, Manu" +
                "facturedProduct, Code, Description, Balance, Type, UnitPrice, Colour, dbGroup, A" +
                "nalysisType, Manufacturer, ReOrderQuantity, NormalOrder, PricingType, Available," +
                " SizeCode, DepthMM, WidthMM, IgnoreStockLevels, Packed, LastChanged, MinCharge, " +
                "EstType, EstUnits, EstTonnePrice, Copier, StockLocation, EstAnalysisCode, VatCod" +
                "e, SupplierVatCode, Nominal, CostCentre, Department, SellingPrice, ExtraFlags, P" +
                "Nominal, PCostCentre, PDepartment, CurrentCost, ExcludeRequisitions, StkRef1, St" +
                "kRef2, StkRef3, StkRef4, StkRef5, StkRef6, StkRef7, StkRef8, StkRef9, StkRef10, " +
                "IsRollLabel, InvoiceBalance, SupplierRef, LeadTime, SupplierCode, WebURL, Purcha" +
                "seUnits, SupplierCost, LastDocumentNumber, IsCallOffItem, InvoiceCostPrice, Extr" +
                "aInfo, SOPLeadTime, NoHistory, Weight, SuppDescUnits, LongestEdge, CommodityCode" +
                ", CountryOfOrigin, PurchaseCurrency, SellingCurrency, EstimateID, LastSupplierCo" +
                "de, LastReceivedQuantity, LastPurchasePrice, LastPurchaseDate, LinkedOperationID" +
                ", LinkedOperatorID, ExpiryStatus, ExpiresOnDate, AlternativeProduct, Alternative" +
                "ProductSize, SecondAltProduct, SecondAltProductSize, Generic, IsComposite, Heigh" +
                "tMM, PalletDepth, PalletWidth, PalletHeight, PalletPacked, PalletWeight, Locatio" +
                "nGroup, UseFullPack, PopulatedQuantity, PopulatedWeight, PackedHeight, PackedDep" +
                "th, PackedWidth, PackedWeight, BoxedIn, EstDescriptionContentID, POAuthorityType" +
                "ID, AutoPost, CertificationID, Claim, CodeAlias, BoardCode, GrainDirection, Allo" +
                "wCustomSize, BasketAuthorityTypeID, ParentJob, NumberControlled, OnDemand, Grade" +
                "ID, MinQty, MaxQty, Inactive, AutomationRule, FileUpload, DateModified, Modified" +
                "ByUserID, ReplacementMaterial, ListAlias, ForceLocation, IssueAtCost, HeightMarg" +
                "inMM, WidthMarginMM, XPosition, YPosition, UseLeastCost, CycleCount, ProductType" +
                "s_ID, IsConfigurable, MinimumQuantity, IsCoatedOneSide, BasicSizesID, SalesTaxCo" +
                "deID, UseTaxCodeID, ConsignmentBalance, BOMRevision, PriceListMaterialGroupID, A" +
                "ltWeight, CanOverridePackQuantity FROM Product WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturedProduct", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturedProduct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Balance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Balance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Colour", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dbGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnalysisType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Manufacturer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacturer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReOrderQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReOrderQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NormalOrder", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NormalOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PricingType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricingType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Available", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Available", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SizeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepthMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepthMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WidthMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WidthMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IgnoreStockLevels", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IgnoreStockLevels", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Packed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Packed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastChanged", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastChanged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinCharge", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstTonnePrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstTonnePrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Copier", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Copier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstAnalysisCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstAnalysisCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierVatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierVatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraFlags", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraFlags", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNominal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PDepartment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PDepartment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentCost", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcludeRequisitions", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcludeRequisitions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsRollLabel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRollLabel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceBalance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeadTime", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeadTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WebURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WebURL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PurchaseUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurchaseUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierCost", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastDocumentNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastDocumentNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCallOffItem", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCallOffItem", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCostPrice", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCostPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraInfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOPLeadTime", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOPLeadTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoHistory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuppDescUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppDescUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LongestEdge", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongestEdge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommodityCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommodityCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PurchaseCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurchaseCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSupplierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastReceivedQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastReceivedQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastPurchasePrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPurchasePrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastPurchaseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPurchaseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkedOperationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedOperationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkedOperatorID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedOperatorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpiryStatus", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpiryStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpiresOnDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpiresOnDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlternativeProduct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProduct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlternativeProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProductSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecondAltProduct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProduct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecondAltProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProductSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Generic", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsComposite", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsComposite", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeightMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeightMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletWidth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletHeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletPacked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletPacked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseFullPack", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseFullPack", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PopulatedQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopulatedQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PopulatedWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopulatedWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackedHeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackedDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackedWidth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackedWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BoxedIn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoxedIn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstDescriptionContentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstDescriptionContentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POAuthorityTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POAuthorityTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutoPost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoPost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Claim", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Claim", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodeAlias", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeAlias", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BoardCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoardCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GrainDirection", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GrainDirection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowCustomSize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowCustomSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BasketAuthorityTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BasketAuthorityTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentJob", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberControlled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberControlled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnDemand", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnDemand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GradeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GradeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinQty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxQty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutomationRule", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomationRule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FileUpload", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FileUpload", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReplacementMaterial", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReplacementMaterial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListAlias", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ListAlias", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForceLocation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IssueAtCost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueAtCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeightMarginMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeightMarginMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WidthMarginMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WidthMarginMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@XPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "XPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseLeastCost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseLeastCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductTypes_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTypes_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConfigurable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfigurable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinimumQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCoatedOneSide", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCoatedOneSide", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BasicSizesID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BasicSizesID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsignmentBalance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsignmentBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriceListMaterialGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceListMaterialGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AltWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AltWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CanOverridePackQuantity", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CanOverridePackQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Product] SET [ManufacturedProduct] = @ManufacturedProduct, [Code] =" +
                " @Code, [Description] = @Description, [Balance] = @Balance, [Type] = @Type, [Uni" +
                "tPrice] = @UnitPrice, [Colour] = @Colour, [dbGroup] = @dbGroup, [AnalysisType] =" +
                " @AnalysisType, [Manufacturer] = @Manufacturer, [ReOrderQuantity] = @ReOrderQuan" +
                "tity, [NormalOrder] = @NormalOrder, [PricingType] = @PricingType, [Available] = " +
                "@Available, [SizeCode] = @SizeCode, [DepthMM] = @DepthMM, [WidthMM] = @WidthMM, " +
                "[IgnoreStockLevels] = @IgnoreStockLevels, [Packed] = @Packed, [LastChanged] = @L" +
                "astChanged, [MinCharge] = @MinCharge, [EstType] = @EstType, [EstUnits] = @EstUni" +
                "ts, [EstTonnePrice] = @EstTonnePrice, [Copier] = @Copier, [StockLocation] = @Sto" +
                "ckLocation, [EstAnalysisCode] = @EstAnalysisCode, [VatCode] = @VatCode, [Supplie" +
                "rVatCode] = @SupplierVatCode, [Nominal] = @Nominal, [CostCentre] = @CostCentre, " +
                "[Department] = @Department, [SellingPrice] = @SellingPrice, [ExtraFlags] = @Extr" +
                "aFlags, [PNominal] = @PNominal, [PCostCentre] = @PCostCentre, [PDepartment] = @P" +
                "Department, [CurrentCost] = @CurrentCost, [ExcludeRequisitions] = @ExcludeRequis" +
                "itions, [StkRef1] = @StkRef1, [StkRef2] = @StkRef2, [StkRef3] = @StkRef3, [StkRe" +
                "f4] = @StkRef4, [StkRef5] = @StkRef5, [StkRef6] = @StkRef6, [StkRef7] = @StkRef7" +
                ", [StkRef8] = @StkRef8, [StkRef9] = @StkRef9, [StkRef10] = @StkRef10, [IsRollLab" +
                "el] = @IsRollLabel, [InvoiceBalance] = @InvoiceBalance, [SupplierRef] = @Supplie" +
                "rRef, [LeadTime] = @LeadTime, [SupplierCode] = @SupplierCode, [WebURL] = @WebURL" +
                ", [PurchaseUnits] = @PurchaseUnits, [SupplierCost] = @SupplierCost, [LastDocumen" +
                "tNumber] = @LastDocumentNumber, [IsCallOffItem] = @IsCallOffItem, [InvoiceCostPr" +
                "ice] = @InvoiceCostPrice, [ExtraInfo] = @ExtraInfo, [SOPLeadTime] = @SOPLeadTime" +
                ", [NoHistory] = @NoHistory, [Weight] = @Weight, [SuppDescUnits] = @SuppDescUnits" +
                ", [LongestEdge] = @LongestEdge, [CommodityCode] = @CommodityCode, [CountryOfOrig" +
                "in] = @CountryOfOrigin, [PurchaseCurrency] = @PurchaseCurrency, [SellingCurrency" +
                "] = @SellingCurrency, [EstimateID] = @EstimateID, [LastSupplierCode] = @LastSupp" +
                "lierCode, [LastReceivedQuantity] = @LastReceivedQuantity, [LastPurchasePrice] = " +
                "@LastPurchasePrice, [LastPurchaseDate] = @LastPurchaseDate, [LinkedOperationID] " +
                "= @LinkedOperationID, [LinkedOperatorID] = @LinkedOperatorID, [ExpiryStatus] = @" +
                "ExpiryStatus, [ExpiresOnDate] = @ExpiresOnDate, [AlternativeProduct] = @Alternat" +
                "iveProduct, [AlternativeProductSize] = @AlternativeProductSize, [SecondAltProduc" +
                "t] = @SecondAltProduct, [SecondAltProductSize] = @SecondAltProductSize, [Generic" +
                "] = @Generic, [IsComposite] = @IsComposite, [HeightMM] = @HeightMM, [PalletDepth" +
                "] = @PalletDepth, [PalletWidth] = @PalletWidth, [PalletHeight] = @PalletHeight, " +
                "[PalletPacked] = @PalletPacked, [PalletWeight] = @PalletWeight, [LocationGroup] " +
                "= @LocationGroup, [UseFullPack] = @UseFullPack, [PopulatedQuantity] = @Populated" +
                "Quantity, [PopulatedWeight] = @PopulatedWeight, [PackedHeight] = @PackedHeight, " +
                "[PackedDepth] = @PackedDepth, [PackedWidth] = @PackedWidth, [PackedWeight] = @Pa" +
                "ckedWeight, [BoxedIn] = @BoxedIn, [EstDescriptionContentID] = @EstDescriptionCon" +
                "tentID, [POAuthorityTypeID] = @POAuthorityTypeID, [AutoPost] = @AutoPost, [Certi" +
                "ficationID] = @CertificationID, [Claim] = @Claim, [CodeAlias] = @CodeAlias, [Boa" +
                "rdCode] = @BoardCode, [GrainDirection] = @GrainDirection, [AllowCustomSize] = @A" +
                "llowCustomSize, [BasketAuthorityTypeID] = @BasketAuthorityTypeID, [ParentJob] = " +
                "@ParentJob, [NumberControlled] = @NumberControlled, [OnDemand] = @OnDemand, [Gra" +
                "deID] = @GradeID, [MinQty] = @MinQty, [MaxQty] = @MaxQty, [Inactive] = @Inactive" +
                ", [AutomationRule] = @AutomationRule, [FileUpload] = @FileUpload, [DateModified]" +
                " = @DateModified, [ModifiedByUserID] = @ModifiedByUserID, [ReplacementMaterial] " +
                "= @ReplacementMaterial, [ListAlias] = @ListAlias, [ForceLocation] = @ForceLocati" +
                "on, [IssueAtCost] = @IssueAtCost, [HeightMarginMM] = @HeightMarginMM, [WidthMarg" +
                "inMM] = @WidthMarginMM, [XPosition] = @XPosition, [YPosition] = @YPosition, [Use" +
                "LeastCost] = @UseLeastCost, [CycleCount] = @CycleCount, [ProductTypes_ID] = @Pro" +
                "ductTypes_ID, [IsConfigurable] = @IsConfigurable, [MinimumQuantity] = @MinimumQu" +
                "antity, [IsCoatedOneSide] = @IsCoatedOneSide, [BasicSizesID] = @BasicSizesID, [S" +
                "alesTaxCodeID] = @SalesTaxCodeID, [UseTaxCodeID] = @UseTaxCodeID, [ConsignmentBa" +
                "lance] = @ConsignmentBalance, [BOMRevision] = @BOMRevision, [PriceListMaterialGr" +
                "oupID] = @PriceListMaterialGroupID, [AltWeight] = @AltWeight, [CanOverridePackQu" +
                "antity] = @CanOverridePackQuantity WHERE (([ID] = @Original_ID) AND ([Manufactur" +
                "edProduct] = @Original_ManufacturedProduct) AND ([Code] = @Original_Code) AND ((" +
                "@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original" +
                "_Description)) AND ([Balance] = @Original_Balance) AND ([Type] = @Original_Type)" +
                " AND ([UnitPrice] = @Original_UnitPrice) AND ((@IsNull_Colour = 1 AND [Colour] I" +
                "S NULL) OR ([Colour] = @Original_Colour)) AND ((@IsNull_dbGroup = 1 AND [dbGroup" +
                "] IS NULL) OR ([dbGroup] = @Original_dbGroup)) AND ((@IsNull_AnalysisType = 1 AN" +
                "D [AnalysisType] IS NULL) OR ([AnalysisType] = @Original_AnalysisType)) AND ((@I" +
                "sNull_Manufacturer = 1 AND [Manufacturer] IS NULL) OR ([Manufacturer] = @Origina" +
                "l_Manufacturer)) AND ([ReOrderQuantity] = @Original_ReOrderQuantity) AND ([Norma" +
                "lOrder] = @Original_NormalOrder) AND ((@IsNull_PricingType = 1 AND [PricingType]" +
                " IS NULL) OR ([PricingType] = @Original_PricingType)) AND ([Available] = @Origin" +
                "al_Available) AND ((@IsNull_SizeCode = 1 AND [SizeCode] IS NULL) OR ([SizeCode] " +
                "= @Original_SizeCode)) AND ([DepthMM] = @Original_DepthMM) AND ([WidthMM] = @Ori" +
                "ginal_WidthMM) AND ([IgnoreStockLevels] = @Original_IgnoreStockLevels) AND ([Pac" +
                "ked] = @Original_Packed) AND ((@IsNull_LastChanged = 1 AND [LastChanged] IS NULL" +
                ") OR ([LastChanged] = @Original_LastChanged)) AND ([MinCharge] = @Original_MinCh" +
                "arge) AND ([EstType] = @Original_EstType) AND ((@IsNull_EstUnits = 1 AND [EstUni" +
                "ts] IS NULL) OR ([EstUnits] = @Original_EstUnits)) AND ([EstTonnePrice] = @Origi" +
                "nal_EstTonnePrice) AND ([Copier] = @Original_Copier) AND ((@IsNull_StockLocation" +
                " = 1 AND [StockLocation] IS NULL) OR ([StockLocation] = @Original_StockLocation)" +
                ") AND ((@IsNull_EstAnalysisCode = 1 AND [EstAnalysisCode] IS NULL) OR ([EstAnaly" +
                "sisCode] = @Original_EstAnalysisCode)) AND ([VatCode] = @Original_VatCode) AND (" +
                "(@IsNull_SupplierVatCode = 1 AND [SupplierVatCode] IS NULL) OR ([SupplierVatCode" +
                "] = @Original_SupplierVatCode)) AND ((@IsNull_Nominal = 1 AND [Nominal] IS NULL)" +
                " OR ([Nominal] = @Original_Nominal)) AND ((@IsNull_CostCentre = 1 AND [CostCentr" +
                "e] IS NULL) OR ([CostCentre] = @Original_CostCentre)) AND ((@IsNull_Department =" +
                " 1 AND [Department] IS NULL) OR ([Department] = @Original_Department)) AND ([Sel" +
                "lingPrice] = @Original_SellingPrice) AND ([ExtraFlags] = @Original_ExtraFlags) A" +
                "ND ((@IsNull_PNominal = 1 AND [PNominal] IS NULL) OR ([PNominal] = @Original_PNo" +
                "minal)) AND ((@IsNull_PCostCentre = 1 AND [PCostCentre] IS NULL) OR ([PCostCentr" +
                "e] = @Original_PCostCentre)) AND ((@IsNull_PDepartment = 1 AND [PDepartment] IS " +
                "NULL) OR ([PDepartment] = @Original_PDepartment)) AND ([CurrentCost] = @Original" +
                "_CurrentCost) AND ([ExcludeRequisitions] = @Original_ExcludeRequisitions) AND ((" +
                "@IsNull_StkRef1 = 1 AND [StkRef1] IS NULL) OR ([StkRef1] = @Original_StkRef1)) A" +
                "ND ((@IsNull_StkRef2 = 1 AND [StkRef2] IS NULL) OR ([StkRef2] = @Original_StkRef" +
                "2)) AND ((@IsNull_StkRef3 = 1 AND [StkRef3] IS NULL) OR ([StkRef3] = @Original_S" +
                "tkRef3)) AND ((@IsNull_StkRef4 = 1 AND [StkRef4] IS NULL) OR ([StkRef4] = @Origi" +
                "nal_StkRef4)) AND ((@IsNull_StkRef5 = 1 AND [StkRef5] IS NULL) OR ([StkRef5] = @" +
                "Original_StkRef5)) AND ((@IsNull_StkRef6 = 1 AND [StkRef6] IS NULL) OR ([StkRef6" +
                "] = @Original_StkRef6)) AND ((@IsNull_StkRef7 = 1 AND [StkRef7] IS NULL) OR ([St" +
                "kRef7] = @Original_StkRef7)) AND ((@IsNull_StkRef8 = 1 AND [StkRef8] IS NULL) OR" +
                " ([StkRef8] = @Original_StkRef8)) AND ((@IsNull_StkRef9 = 1 AND [StkRef9] IS NUL" +
                "L) OR ([StkRef9] = @Original_StkRef9)) AND ((@IsNull_StkRef10 = 1 AND [StkRef10]" +
                " IS NULL) OR ([StkRef10] = @Original_StkRef10)) AND ([IsRollLabel] = @Original_I" +
                "sRollLabel) AND ([InvoiceBalance] = @Original_InvoiceBalance) AND ((@IsNull_Supp" +
                "lierRef = 1 AND [SupplierRef] IS NULL) OR ([SupplierRef] = @Original_SupplierRef" +
                ")) AND ([LeadTime] = @Original_LeadTime) AND ((@IsNull_SupplierCode = 1 AND [Sup" +
                "plierCode] IS NULL) OR ([SupplierCode] = @Original_SupplierCode)) AND ((@IsNull_" +
                "WebURL = 1 AND [WebURL] IS NULL) OR ([WebURL] = @Original_WebURL)) AND ((@IsNull" +
                "_PurchaseUnits = 1 AND [PurchaseUnits] IS NULL) OR ([PurchaseUnits] = @Original_" +
                "PurchaseUnits)) AND ([SupplierCost] = @Original_SupplierCost) AND ([LastDocument" +
                "Number] = @Original_LastDocumentNumber) AND ([IsCallOffItem] = @Original_IsCallO" +
                "ffItem) AND ([InvoiceCostPrice] = @Original_InvoiceCostPrice) AND ((@IsNull_Extr" +
                "aInfo = 1 AND [ExtraInfo] IS NULL) OR ([ExtraInfo] = @Original_ExtraInfo)) AND (" +
                "[SOPLeadTime] = @Original_SOPLeadTime) AND ([NoHistory] = @Original_NoHistory) A" +
                "ND ([Weight] = @Original_Weight) AND ((@IsNull_SuppDescUnits = 1 AND [SuppDescUn" +
                "its] IS NULL) OR ([SuppDescUnits] = @Original_SuppDescUnits)) AND ([LongestEdge]" +
                " = @Original_LongestEdge) AND ((@IsNull_CommodityCode = 1 AND [CommodityCode] IS" +
                " NULL) OR ([CommodityCode] = @Original_CommodityCode)) AND ((@IsNull_CountryOfOr" +
                "igin = 1 AND [CountryOfOrigin] IS NULL) OR ([CountryOfOrigin] = @Original_Countr" +
                "yOfOrigin)) AND ([PurchaseCurrency] = @Original_PurchaseCurrency) AND ([SellingC" +
                "urrency] = @Original_SellingCurrency) AND ([EstimateID] = @Original_EstimateID) " +
                "AND ((@IsNull_LastSupplierCode = 1 AND [LastSupplierCode] IS NULL) OR ([LastSupp" +
                "lierCode] = @Original_LastSupplierCode)) AND ([LastReceivedQuantity] = @Original" +
                "_LastReceivedQuantity) AND ([LastPurchasePrice] = @Original_LastPurchasePrice) A" +
                "ND ((@IsNull_LastPurchaseDate = 1 AND [LastPurchaseDate] IS NULL) OR ([LastPurch" +
                "aseDate] = @Original_LastPurchaseDate)) AND ([LinkedOperationID] = @Original_Lin" +
                "kedOperationID) AND ([LinkedOperatorID] = @Original_LinkedOperatorID) AND ([Expi" +
                "ryStatus] = @Original_ExpiryStatus) AND ((@IsNull_ExpiresOnDate = 1 AND [Expires" +
                "OnDate] IS NULL) OR ([ExpiresOnDate] = @Original_ExpiresOnDate)) AND ((@IsNull_A" +
                "lternativeProduct = 1 AND [AlternativeProduct] IS NULL) OR ([AlternativeProduct]" +
                " = @Original_AlternativeProduct)) AND ((@IsNull_AlternativeProductSize = 1 AND [" +
                "AlternativeProductSize] IS NULL) OR ([AlternativeProductSize] = @Original_Altern" +
                "ativeProductSize)) AND ((@IsNull_SecondAltProduct = 1 AND [SecondAltProduct] IS " +
                "NULL) OR ([SecondAltProduct] = @Original_SecondAltProduct)) AND ((@IsNull_Second" +
                "AltProductSize = 1 AND [SecondAltProductSize] IS NULL) OR ([SecondAltProductSize" +
                "] = @Original_SecondAltProductSize)) AND ([Generic] = @Original_Generic) AND ([I" +
                "sComposite] = @Original_IsComposite) AND ([HeightMM] = @Original_HeightMM) AND (" +
                "[PalletDepth] = @Original_PalletDepth) AND ([PalletWidth] = @Original_PalletWidt" +
                "h) AND ([PalletHeight] = @Original_PalletHeight) AND ([PalletPacked] = @Original" +
                "_PalletPacked) AND ([PalletWeight] = @Original_PalletWeight) AND ((@IsNull_Locat" +
                "ionGroup = 1 AND [LocationGroup] IS NULL) OR ([LocationGroup] = @Original_Locati" +
                "onGroup)) AND ([UseFullPack] = @Original_UseFullPack) AND ([PopulatedQuantity] =" +
                " @Original_PopulatedQuantity) AND ([PopulatedWeight] = @Original_PopulatedWeight" +
                ") AND ([PackedHeight] = @Original_PackedHeight) AND ([PackedDepth] = @Original_P" +
                "ackedDepth) AND ([PackedWidth] = @Original_PackedWidth) AND ([PackedWeight] = @O" +
                "riginal_PackedWeight) AND ([BoxedIn] = @Original_BoxedIn) AND ([EstDescriptionCo" +
                "ntentID] = @Original_EstDescriptionContentID) AND ([POAuthorityTypeID] = @Origin" +
                "al_POAuthorityTypeID) AND ([AutoPost] = @Original_AutoPost) AND ([CertificationI" +
                "D] = @Original_CertificationID) AND ((@IsNull_Claim = 1 AND [Claim] IS NULL) OR " +
                "([Claim] = @Original_Claim)) AND ((@IsNull_CodeAlias = 1 AND [CodeAlias] IS NULL" +
                ") OR ([CodeAlias] = @Original_CodeAlias)) AND ((@IsNull_BoardCode = 1 AND [Board" +
                "Code] IS NULL) OR ([BoardCode] = @Original_BoardCode)) AND ([GrainDirection] = @" +
                "Original_GrainDirection) AND ([AllowCustomSize] = @Original_AllowCustomSize) AND" +
                " ([BasketAuthorityTypeID] = @Original_BasketAuthorityTypeID) AND ((@IsNull_Paren" +
                "tJob = 1 AND [ParentJob] IS NULL) OR ([ParentJob] = @Original_ParentJob)) AND ([" +
                "NumberControlled] = @Original_NumberControlled) AND ([OnDemand] = @Original_OnDe" +
                "mand) AND ([GradeID] = @Original_GradeID) AND ([MinQty] = @Original_MinQty) AND " +
                "([MaxQty] = @Original_MaxQty) AND ([Inactive] = @Original_Inactive) AND ([Automa" +
                "tionRule] = @Original_AutomationRule) AND ([FileUpload] = @Original_FileUpload) " +
                "AND ((@IsNull_DateModified = 1 AND [DateModified] IS NULL) OR ([DateModified] = " +
                "@Original_DateModified)) AND ((@IsNull_ModifiedByUserID = 1 AND [ModifiedByUserI" +
                "D] IS NULL) OR ([ModifiedByUserID] = @Original_ModifiedByUserID)) AND ([Replacem" +
                "entMaterial] = @Original_ReplacementMaterial) AND ((@IsNull_ListAlias = 1 AND [L" +
                "istAlias] IS NULL) OR ([ListAlias] = @Original_ListAlias)) AND ([ForceLocation] " +
                "= @Original_ForceLocation) AND ([IssueAtCost] = @Original_IssueAtCost) AND ([Hei" +
                "ghtMarginMM] = @Original_HeightMarginMM) AND ([WidthMarginMM] = @Original_WidthM" +
                "arginMM) AND ([XPosition] = @Original_XPosition) AND ([YPosition] = @Original_YP" +
                "osition) AND ([UseLeastCost] = @Original_UseLeastCost) AND ([CycleCount] = @Orig" +
                "inal_CycleCount) AND ([ProductTypes_ID] = @Original_ProductTypes_ID) AND ([IsCon" +
                "figurable] = @Original_IsConfigurable) AND ([MinimumQuantity] = @Original_Minimu" +
                "mQuantity) AND ([IsCoatedOneSide] = @Original_IsCoatedOneSide) AND ([BasicSizesI" +
                "D] = @Original_BasicSizesID) AND ([SalesTaxCodeID] = @Original_SalesTaxCodeID) A" +
                "ND ([UseTaxCodeID] = @Original_UseTaxCodeID) AND ([ConsignmentBalance] = @Origin" +
                "al_ConsignmentBalance) AND ([BOMRevision] = @Original_BOMRevision) AND ([PriceLi" +
                "stMaterialGroupID] = @Original_PriceListMaterialGroupID) AND ([AltWeight] = @Ori" +
                "ginal_AltWeight) AND ([CanOverridePackQuantity] = @Original_CanOverridePackQuant" +
                "ity));\r\nSELECT ID, ManufacturedProduct, Code, Description, Balance, Type, UnitPr" +
                "ice, Colour, dbGroup, AnalysisType, Manufacturer, ReOrderQuantity, NormalOrder, " +
                "PricingType, Available, SizeCode, DepthMM, WidthMM, IgnoreStockLevels, Packed, L" +
                "astChanged, MinCharge, EstType, EstUnits, EstTonnePrice, Copier, StockLocation, " +
                "EstAnalysisCode, VatCode, SupplierVatCode, Nominal, CostCentre, Department, Sell" +
                "ingPrice, ExtraFlags, PNominal, PCostCentre, PDepartment, CurrentCost, ExcludeRe" +
                "quisitions, StkRef1, StkRef2, StkRef3, StkRef4, StkRef5, StkRef6, StkRef7, StkRe" +
                "f8, StkRef9, StkRef10, IsRollLabel, InvoiceBalance, SupplierRef, LeadTime, Suppl" +
                "ierCode, WebURL, PurchaseUnits, SupplierCost, LastDocumentNumber, IsCallOffItem," +
                " InvoiceCostPrice, ExtraInfo, SOPLeadTime, NoHistory, Weight, SuppDescUnits, Lon" +
                "gestEdge, CommodityCode, CountryOfOrigin, PurchaseCurrency, SellingCurrency, Est" +
                "imateID, LastSupplierCode, LastReceivedQuantity, LastPurchasePrice, LastPurchase" +
                "Date, LinkedOperationID, LinkedOperatorID, ExpiryStatus, ExpiresOnDate, Alternat" +
                "iveProduct, AlternativeProductSize, SecondAltProduct, SecondAltProductSize, Gene" +
                "ric, IsComposite, HeightMM, PalletDepth, PalletWidth, PalletHeight, PalletPacked" +
                ", PalletWeight, LocationGroup, UseFullPack, PopulatedQuantity, PopulatedWeight, " +
                "PackedHeight, PackedDepth, PackedWidth, PackedWeight, BoxedIn, EstDescriptionCon" +
                "tentID, POAuthorityTypeID, AutoPost, CertificationID, Claim, CodeAlias, BoardCod" +
                "e, GrainDirection, AllowCustomSize, BasketAuthorityTypeID, ParentJob, NumberCont" +
                "rolled, OnDemand, GradeID, MinQty, MaxQty, Inactive, AutomationRule, FileUpload," +
                " DateModified, ModifiedByUserID, ReplacementMaterial, ListAlias, ForceLocation, " +
                "IssueAtCost, HeightMarginMM, WidthMarginMM, XPosition, YPosition, UseLeastCost, " +
                "CycleCount, ProductTypes_ID, IsConfigurable, MinimumQuantity, IsCoatedOneSide, B" +
                "asicSizesID, SalesTaxCodeID, UseTaxCodeID, ConsignmentBalance, BOMRevision, Pric" +
                "eListMaterialGroupID, AltWeight, CanOverridePackQuantity FROM Product WHERE (ID " +
                "= @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturedProduct", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturedProduct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Balance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Balance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Colour", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dbGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnalysisType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Manufacturer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacturer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReOrderQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReOrderQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NormalOrder", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NormalOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PricingType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricingType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Available", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Available", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SizeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepthMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepthMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WidthMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WidthMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IgnoreStockLevels", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IgnoreStockLevels", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Packed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Packed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastChanged", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastChanged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinCharge", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstTonnePrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstTonnePrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Copier", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Copier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstAnalysisCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstAnalysisCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierVatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierVatCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraFlags", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraFlags", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNominal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCostCentre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PDepartment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PDepartment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentCost", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExcludeRequisitions", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcludeRequisitions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StkRef10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsRollLabel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRollLabel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceBalance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierRef", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeadTime", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeadTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WebURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WebURL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PurchaseUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurchaseUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierCost", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastDocumentNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastDocumentNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCallOffItem", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCallOffItem", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceCostPrice", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCostPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraInfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOPLeadTime", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOPLeadTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoHistory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuppDescUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppDescUnits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LongestEdge", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongestEdge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommodityCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommodityCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PurchaseCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurchaseCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellingCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSupplierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastReceivedQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastReceivedQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastPurchasePrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPurchasePrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastPurchaseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPurchaseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkedOperationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedOperationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkedOperatorID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedOperatorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpiryStatus", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpiryStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExpiresOnDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpiresOnDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlternativeProduct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProduct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlternativeProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProductSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecondAltProduct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProduct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecondAltProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProductSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Generic", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsComposite", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsComposite", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeightMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeightMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletWidth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletHeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletPacked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletPacked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PalletWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseFullPack", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseFullPack", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PopulatedQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopulatedQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PopulatedWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopulatedWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackedHeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackedDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackedWidth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackedWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BoxedIn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoxedIn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstDescriptionContentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstDescriptionContentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POAuthorityTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POAuthorityTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutoPost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoPost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Claim", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Claim", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodeAlias", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeAlias", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BoardCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoardCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GrainDirection", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GrainDirection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowCustomSize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowCustomSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BasketAuthorityTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BasketAuthorityTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentJob", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberControlled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberControlled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnDemand", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnDemand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GradeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GradeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinQty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxQty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AutomationRule", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomationRule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FileUpload", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FileUpload", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReplacementMaterial", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReplacementMaterial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ListAlias", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ListAlias", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForceLocation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceLocation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IssueAtCost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueAtCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeightMarginMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeightMarginMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WidthMarginMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WidthMarginMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@XPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "XPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseLeastCost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseLeastCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductTypes_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTypes_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConfigurable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfigurable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinimumQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsCoatedOneSide", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCoatedOneSide", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BasicSizesID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BasicSizesID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTaxCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsignmentBalance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsignmentBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriceListMaterialGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceListMaterialGroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AltWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AltWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CanOverridePackQuantity", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CanOverridePackQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ManufacturedProduct", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturedProduct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Balance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Balance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Colour", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Colour", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dbGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dbGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dbGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AnalysisType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AnalysisType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnalysisType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Manufacturer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacturer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Manufacturer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Manufacturer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReOrderQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReOrderQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NormalOrder", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NormalOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PricingType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricingType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PricingType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PricingType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Available", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Available", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SizeCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SizeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SizeCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepthMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepthMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WidthMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WidthMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IgnoreStockLevels", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IgnoreStockLevels", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Packed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Packed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastChanged", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastChanged", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastChanged", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastChanged", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinCharge", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinCharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EstUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstUnits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstUnits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstTonnePrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstTonnePrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Copier", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Copier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StockLocation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockLocation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockLocation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockLocation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EstAnalysisCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstAnalysisCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstAnalysisCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstAnalysisCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VatCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SupplierVatCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierVatCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierVatCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierVatCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nominal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nominal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Department", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Department", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Department", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingPrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtraFlags", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraFlags", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNominal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNominal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNominal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNominal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PCostCentre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCostCentre", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCostCentre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCostCentre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PDepartment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PDepartment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PDepartment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PDepartment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrentCost", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExcludeRequisitions", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExcludeRequisitions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StkRef10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StkRef10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StkRef10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsRollLabel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRollLabel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceBalance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SupplierRef", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierRef", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierRef", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierRef", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeadTime", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeadTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SupplierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WebURL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WebURL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WebURL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WebURL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PurchaseUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurchaseUnits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PurchaseUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurchaseUnits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierCost", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastDocumentNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastDocumentNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsCallOffItem", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCallOffItem", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceCostPrice", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceCostPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExtraInfo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraInfo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtraInfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraInfo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOPLeadTime", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOPLeadTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoHistory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoHistory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SuppDescUnits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppDescUnits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuppDescUnits", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuppDescUnits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LongestEdge", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongestEdge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommodityCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommodityCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommodityCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommodityCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountryOfOrigin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOrigin", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PurchaseCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurchaseCurrency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellingCurrency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellingCurrency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstimateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstimateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSupplierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSupplierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSupplierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastReceivedQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastReceivedQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPurchasePrice", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPurchasePrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastPurchaseDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPurchaseDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastPurchaseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastPurchaseDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkedOperationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedOperationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkedOperatorID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedOperatorID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExpiryStatus", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpiryStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExpiresOnDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpiresOnDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExpiresOnDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExpiresOnDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlternativeProduct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProduct", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternativeProduct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProduct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlternativeProductSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProductSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternativeProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternativeProductSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecondAltProduct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProduct", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecondAltProduct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProduct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecondAltProductSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProductSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecondAltProductSize", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecondAltProductSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Generic", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsComposite", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsComposite", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeightMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeightMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PalletDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PalletWidth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PalletHeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PalletPacked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletPacked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PalletWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PalletWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LocationGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseFullPack", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseFullPack", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PopulatedQuantity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopulatedQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PopulatedWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PopulatedWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackedHeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedHeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackedDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackedWidth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackedWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackedWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BoxedIn", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoxedIn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EstDescriptionContentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstDescriptionContentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POAuthorityTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POAuthorityTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutoPost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutoPost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Claim", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Claim", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Claim", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Claim", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CodeAlias", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeAlias", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodeAlias", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeAlias", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BoardCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoardCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BoardCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoardCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GrainDirection", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GrainDirection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowCustomSize", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowCustomSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BasketAuthorityTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BasketAuthorityTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ParentJob", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentJob", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ParentJob", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParentJob", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumberControlled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberControlled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OnDemand", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnDemand", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GradeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GradeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinQty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxQty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inactive", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AutomationRule", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AutomationRule", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FileUpload", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FileUpload", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateModified", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateModified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedByUserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedByUserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReplacementMaterial", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReplacementMaterial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ListAlias", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ListAlias", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ListAlias", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ListAlias", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForceLocation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForceLocation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IssueAtCost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueAtCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeightMarginMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeightMarginMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WidthMarginMM", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WidthMarginMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_XPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "XPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YPosition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseLeastCost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseLeastCost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CycleCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductTypes_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTypes_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConfigurable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfigurable", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinimumQuantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsCoatedOneSide", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsCoatedOneSide", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BasicSizesID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BasicSizesID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesTaxCodeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseTaxCodeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseTaxCodeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConsignmentBalance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsignmentBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BOMRevision", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BOMRevision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PriceListMaterialGroupID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceListMaterialGroupID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AltWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AltWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CanOverridePackQuantity", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CanOverridePackQuantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PalletCard.Properties.Settings.Default.ThardataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ManufacturedProduct, Code, Description, Balance, Type, UnitPrice, Colo" +
                "ur, dbGroup, AnalysisType, Manufacturer, ReOrderQuantity, NormalOrder, PricingTy" +
                "pe, Available, SizeCode, DepthMM, WidthMM, IgnoreStockLevels, Packed, LastChange" +
                "d, MinCharge, EstType, EstUnits, EstTonnePrice, Copier, StockLocation, EstAnalys" +
                "isCode, VatCode, SupplierVatCode, Nominal, CostCentre, Department, SellingPrice," +
                " ExtraFlags, PNominal, PCostCentre, PDepartment, CurrentCost, ExcludeRequisition" +
                "s, StkRef1, StkRef2, StkRef3, StkRef4, StkRef5, StkRef6, StkRef7, StkRef8, StkRe" +
                "f9, StkRef10, IsRollLabel, InvoiceBalance, SupplierRef, LeadTime, SupplierCode, " +
                "WebURL, PurchaseUnits, SupplierCost, LastDocumentNumber, IsCallOffItem, InvoiceC" +
                "ostPrice, ExtraInfo, SOPLeadTime, NoHistory, Weight, SuppDescUnits, LongestEdge," +
                " CommodityCode, CountryOfOrigin, PurchaseCurrency, SellingCurrency, EstimateID, " +
                "LastSupplierCode, LastReceivedQuantity, LastPurchasePrice, LastPurchaseDate, Lin" +
                "kedOperationID, LinkedOperatorID, ExpiryStatus, ExpiresOnDate, AlternativeProduc" +
                "t, AlternativeProductSize, SecondAltProduct, SecondAltProductSize, Generic, IsCo" +
                "mposite, HeightMM, PalletDepth, PalletWidth, PalletHeight, PalletPacked, PalletW" +
                "eight, LocationGroup, UseFullPack, PopulatedQuantity, PopulatedWeight, PackedHei" +
                "ght, PackedDepth, PackedWidth, PackedWeight, BoxedIn, EstDescriptionContentID, P" +
                "OAuthorityTypeID, AutoPost, CertificationID, Claim, CodeAlias, BoardCode, GrainD" +
                "irection, AllowCustomSize, BasketAuthorityTypeID, ParentJob, NumberControlled, O" +
                "nDemand, GradeID, MinQty, MaxQty, Inactive, AutomationRule, FileUpload, DateModi" +
                "fied, ModifiedByUserID, ReplacementMaterial, ListAlias, ForceLocation, IssueAtCo" +
                "st, HeightMarginMM, WidthMarginMM, XPosition, YPosition, UseLeastCost, CycleCoun" +
                "t, ProductTypes_ID, IsConfigurable, MinimumQuantity, IsCoatedOneSide, BasicSizes" +
                "ID, SalesTaxCodeID, UseTaxCodeID, ConsignmentBalance, BOMRevision, PriceListMate" +
                "rialGroupID, AltWeight, CanOverridePackQuantity FROM dbo.Product";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ThardataDataSet.ProductDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ThardataDataSet.ProductDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ThardataDataSet.ProductDataTable dataTable = new ThardataDataSet.ProductDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet.ProductDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ThardataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Product");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    bool Original_ManufacturedProduct, 
                    string Original_Code, 
                    string Original_Description, 
                    double Original_Balance, 
                    byte Original_Type, 
                    double Original_UnitPrice, 
                    string Original_Colour, 
                    string Original_dbGroup, 
                    string Original_AnalysisType, 
                    string Original_Manufacturer, 
                    double Original_ReOrderQuantity, 
                    double Original_NormalOrder, 
                    string Original_PricingType, 
                    double Original_Available, 
                    string Original_SizeCode, 
                    double Original_DepthMM, 
                    double Original_WidthMM, 
                    bool Original_IgnoreStockLevels, 
                    double Original_Packed, 
                    global::System.Nullable<global::System.DateTime> Original_LastChanged, 
                    double Original_MinCharge, 
                    byte Original_EstType, 
                    string Original_EstUnits, 
                    double Original_EstTonnePrice, 
                    bool Original_Copier, 
                    string Original_StockLocation, 
                    string Original_EstAnalysisCode, 
                    string Original_VatCode, 
                    string Original_SupplierVatCode, 
                    string Original_Nominal, 
                    string Original_CostCentre, 
                    string Original_Department, 
                    double Original_SellingPrice, 
                    bool Original_ExtraFlags, 
                    string Original_PNominal, 
                    string Original_PCostCentre, 
                    string Original_PDepartment, 
                    double Original_CurrentCost, 
                    bool Original_ExcludeRequisitions, 
                    string Original_StkRef1, 
                    string Original_StkRef2, 
                    string Original_StkRef3, 
                    string Original_StkRef4, 
                    string Original_StkRef5, 
                    string Original_StkRef6, 
                    string Original_StkRef7, 
                    string Original_StkRef8, 
                    string Original_StkRef9, 
                    string Original_StkRef10, 
                    bool Original_IsRollLabel, 
                    double Original_InvoiceBalance, 
                    string Original_SupplierRef, 
                    short Original_LeadTime, 
                    string Original_SupplierCode, 
                    string Original_WebURL, 
                    string Original_PurchaseUnits, 
                    double Original_SupplierCost, 
                    int Original_LastDocumentNumber, 
                    bool Original_IsCallOffItem, 
                    bool Original_InvoiceCostPrice, 
                    string Original_ExtraInfo, 
                    short Original_SOPLeadTime, 
                    bool Original_NoHistory, 
                    double Original_Weight, 
                    string Original_SuppDescUnits, 
                    bool Original_LongestEdge, 
                    string Original_CommodityCode, 
                    string Original_CountryOfOrigin, 
                    int Original_PurchaseCurrency, 
                    int Original_SellingCurrency, 
                    int Original_EstimateID, 
                    string Original_LastSupplierCode, 
                    double Original_LastReceivedQuantity, 
                    double Original_LastPurchasePrice, 
                    global::System.Nullable<global::System.DateTime> Original_LastPurchaseDate, 
                    int Original_LinkedOperationID, 
                    int Original_LinkedOperatorID, 
                    byte Original_ExpiryStatus, 
                    global::System.Nullable<global::System.DateTime> Original_ExpiresOnDate, 
                    string Original_AlternativeProduct, 
                    string Original_AlternativeProductSize, 
                    string Original_SecondAltProduct, 
                    string Original_SecondAltProductSize, 
                    byte Original_Generic, 
                    bool Original_IsComposite, 
                    double Original_HeightMM, 
                    double Original_PalletDepth, 
                    double Original_PalletWidth, 
                    double Original_PalletHeight, 
                    double Original_PalletPacked, 
                    double Original_PalletWeight, 
                    string Original_LocationGroup, 
                    bool Original_UseFullPack, 
                    int Original_PopulatedQuantity, 
                    double Original_PopulatedWeight, 
                    double Original_PackedHeight, 
                    double Original_PackedDepth, 
                    double Original_PackedWidth, 
                    double Original_PackedWeight, 
                    double Original_BoxedIn, 
                    int Original_EstDescriptionContentID, 
                    int Original_POAuthorityTypeID, 
                    bool Original_AutoPost, 
                    int Original_CertificationID, 
                    string Original_Claim, 
                    string Original_CodeAlias, 
                    string Original_BoardCode, 
                    byte Original_GrainDirection, 
                    bool Original_AllowCustomSize, 
                    int Original_BasketAuthorityTypeID, 
                    string Original_ParentJob, 
                    bool Original_NumberControlled, 
                    byte Original_OnDemand, 
                    int Original_GradeID, 
                    double Original_MinQty, 
                    double Original_MaxQty, 
                    byte Original_Inactive, 
                    byte Original_AutomationRule, 
                    byte Original_FileUpload, 
                    global::System.Nullable<global::System.DateTime> Original_DateModified, 
                    global::System.Nullable<int> Original_ModifiedByUserID, 
                    bool Original_ReplacementMaterial, 
                    string Original_ListAlias, 
                    bool Original_ForceLocation, 
                    bool Original_IssueAtCost, 
                    double Original_HeightMarginMM, 
                    double Original_WidthMarginMM, 
                    double Original_XPosition, 
                    double Original_YPosition, 
                    bool Original_UseLeastCost, 
                    int Original_CycleCount, 
                    int Original_ProductTypes_ID, 
                    bool Original_IsConfigurable, 
                    double Original_MinimumQuantity, 
                    bool Original_IsCoatedOneSide, 
                    int Original_BasicSizesID, 
                    int Original_SalesTaxCodeID, 
                    int Original_UseTaxCodeID, 
                    double Original_ConsignmentBalance, 
                    int Original_BOMRevision, 
                    int Original_PriceListMaterialGroupID, 
                    double Original_AltWeight, 
                    bool Original_CanOverridePackQuantity) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((bool)(Original_ManufacturedProduct));
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Code));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Description));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_Balance));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((byte)(Original_Type));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_UnitPrice));
            if ((Original_Colour == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Colour));
            }
            if ((Original_dbGroup == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_dbGroup));
            }
            if ((Original_AnalysisType == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_AnalysisType));
            }
            if ((Original_Manufacturer == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Manufacturer));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_ReOrderQuantity));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_NormalOrder));
            if ((Original_PricingType == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_PricingType));
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_Available));
            if ((Original_SizeCode == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_SizeCode));
            }
            this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_DepthMM));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_WidthMM));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_IgnoreStockLevels));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_Packed));
            if ((Original_LastChanged.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_LastChanged.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[29].Value = ((double)(Original_MinCharge));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((byte)(Original_EstType));
            if ((Original_EstUnits == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_EstUnits));
            }
            this.Adapter.DeleteCommand.Parameters[33].Value = ((double)(Original_EstTonnePrice));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((bool)(Original_Copier));
            if ((Original_StockLocation == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_StockLocation));
            }
            if ((Original_EstAnalysisCode == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_EstAnalysisCode));
            }
            if ((Original_VatCode == null)) {
                throw new global::System.ArgumentNullException("Original_VatCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_VatCode));
            }
            if ((Original_SupplierVatCode == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_SupplierVatCode));
            }
            if ((Original_Nominal == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_Nominal));
            }
            if ((Original_CostCentre == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_CostCentre));
            }
            if ((Original_Department == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_Department));
            }
            this.Adapter.DeleteCommand.Parameters[48].Value = ((double)(Original_SellingPrice));
            this.Adapter.DeleteCommand.Parameters[49].Value = ((bool)(Original_ExtraFlags));
            if ((Original_PNominal == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_PNominal));
            }
            if ((Original_PCostCentre == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_PCostCentre));
            }
            if ((Original_PDepartment == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_PDepartment));
            }
            this.Adapter.DeleteCommand.Parameters[56].Value = ((double)(Original_CurrentCost));
            this.Adapter.DeleteCommand.Parameters[57].Value = ((bool)(Original_ExcludeRequisitions));
            if ((Original_StkRef1 == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_StkRef1));
            }
            if ((Original_StkRef2 == null)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_StkRef2));
            }
            if ((Original_StkRef3 == null)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_StkRef3));
            }
            if ((Original_StkRef4 == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_StkRef4));
            }
            if ((Original_StkRef5 == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_StkRef5));
            }
            if ((Original_StkRef6 == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_StkRef6));
            }
            if ((Original_StkRef7 == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_StkRef7));
            }
            if ((Original_StkRef8 == null)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((string)(Original_StkRef8));
            }
            if ((Original_StkRef9 == null)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((string)(Original_StkRef9));
            }
            if ((Original_StkRef10 == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_StkRef10));
            }
            this.Adapter.DeleteCommand.Parameters[78].Value = ((bool)(Original_IsRollLabel));
            this.Adapter.DeleteCommand.Parameters[79].Value = ((double)(Original_InvoiceBalance));
            if ((Original_SupplierRef == null)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((string)(Original_SupplierRef));
            }
            this.Adapter.DeleteCommand.Parameters[82].Value = ((short)(Original_LeadTime));
            if ((Original_SupplierCode == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_SupplierCode));
            }
            if ((Original_WebURL == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_WebURL));
            }
            if ((Original_PurchaseUnits == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_PurchaseUnits));
            }
            this.Adapter.DeleteCommand.Parameters[89].Value = ((double)(Original_SupplierCost));
            this.Adapter.DeleteCommand.Parameters[90].Value = ((int)(Original_LastDocumentNumber));
            this.Adapter.DeleteCommand.Parameters[91].Value = ((bool)(Original_IsCallOffItem));
            this.Adapter.DeleteCommand.Parameters[92].Value = ((bool)(Original_InvoiceCostPrice));
            if ((Original_ExtraInfo == null)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_ExtraInfo));
            }
            this.Adapter.DeleteCommand.Parameters[95].Value = ((short)(Original_SOPLeadTime));
            this.Adapter.DeleteCommand.Parameters[96].Value = ((bool)(Original_NoHistory));
            this.Adapter.DeleteCommand.Parameters[97].Value = ((double)(Original_Weight));
            if ((Original_SuppDescUnits == null)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((string)(Original_SuppDescUnits));
            }
            this.Adapter.DeleteCommand.Parameters[100].Value = ((bool)(Original_LongestEdge));
            if ((Original_CommodityCode == null)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((string)(Original_CommodityCode));
            }
            if ((Original_CountryOfOrigin == null)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((string)(Original_CountryOfOrigin));
            }
            this.Adapter.DeleteCommand.Parameters[105].Value = ((int)(Original_PurchaseCurrency));
            this.Adapter.DeleteCommand.Parameters[106].Value = ((int)(Original_SellingCurrency));
            this.Adapter.DeleteCommand.Parameters[107].Value = ((int)(Original_EstimateID));
            if ((Original_LastSupplierCode == null)) {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[109].Value = ((string)(Original_LastSupplierCode));
            }
            this.Adapter.DeleteCommand.Parameters[110].Value = ((double)(Original_LastReceivedQuantity));
            this.Adapter.DeleteCommand.Parameters[111].Value = ((double)(Original_LastPurchasePrice));
            if ((Original_LastPurchaseDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[113].Value = ((System.DateTime)(Original_LastPurchaseDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[114].Value = ((int)(Original_LinkedOperationID));
            this.Adapter.DeleteCommand.Parameters[115].Value = ((int)(Original_LinkedOperatorID));
            this.Adapter.DeleteCommand.Parameters[116].Value = ((byte)(Original_ExpiryStatus));
            if ((Original_ExpiresOnDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((System.DateTime)(Original_ExpiresOnDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_AlternativeProduct == null)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((string)(Original_AlternativeProduct));
            }
            if ((Original_AlternativeProductSize == null)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((string)(Original_AlternativeProductSize));
            }
            if ((Original_SecondAltProduct == null)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((string)(Original_SecondAltProduct));
            }
            if ((Original_SecondAltProductSize == null)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((string)(Original_SecondAltProductSize));
            }
            this.Adapter.DeleteCommand.Parameters[127].Value = ((byte)(Original_Generic));
            this.Adapter.DeleteCommand.Parameters[128].Value = ((bool)(Original_IsComposite));
            this.Adapter.DeleteCommand.Parameters[129].Value = ((double)(Original_HeightMM));
            this.Adapter.DeleteCommand.Parameters[130].Value = ((double)(Original_PalletDepth));
            this.Adapter.DeleteCommand.Parameters[131].Value = ((double)(Original_PalletWidth));
            this.Adapter.DeleteCommand.Parameters[132].Value = ((double)(Original_PalletHeight));
            this.Adapter.DeleteCommand.Parameters[133].Value = ((double)(Original_PalletPacked));
            this.Adapter.DeleteCommand.Parameters[134].Value = ((double)(Original_PalletWeight));
            if ((Original_LocationGroup == null)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((string)(Original_LocationGroup));
            }
            this.Adapter.DeleteCommand.Parameters[137].Value = ((bool)(Original_UseFullPack));
            this.Adapter.DeleteCommand.Parameters[138].Value = ((int)(Original_PopulatedQuantity));
            this.Adapter.DeleteCommand.Parameters[139].Value = ((double)(Original_PopulatedWeight));
            this.Adapter.DeleteCommand.Parameters[140].Value = ((double)(Original_PackedHeight));
            this.Adapter.DeleteCommand.Parameters[141].Value = ((double)(Original_PackedDepth));
            this.Adapter.DeleteCommand.Parameters[142].Value = ((double)(Original_PackedWidth));
            this.Adapter.DeleteCommand.Parameters[143].Value = ((double)(Original_PackedWeight));
            this.Adapter.DeleteCommand.Parameters[144].Value = ((double)(Original_BoxedIn));
            this.Adapter.DeleteCommand.Parameters[145].Value = ((int)(Original_EstDescriptionContentID));
            this.Adapter.DeleteCommand.Parameters[146].Value = ((int)(Original_POAuthorityTypeID));
            this.Adapter.DeleteCommand.Parameters[147].Value = ((bool)(Original_AutoPost));
            this.Adapter.DeleteCommand.Parameters[148].Value = ((int)(Original_CertificationID));
            if ((Original_Claim == null)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((string)(Original_Claim));
            }
            if ((Original_CodeAlias == null)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((string)(Original_CodeAlias));
            }
            if ((Original_BoardCode == null)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((string)(Original_BoardCode));
            }
            this.Adapter.DeleteCommand.Parameters[155].Value = ((byte)(Original_GrainDirection));
            this.Adapter.DeleteCommand.Parameters[156].Value = ((bool)(Original_AllowCustomSize));
            this.Adapter.DeleteCommand.Parameters[157].Value = ((int)(Original_BasketAuthorityTypeID));
            if ((Original_ParentJob == null)) {
                this.Adapter.DeleteCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[159].Value = ((string)(Original_ParentJob));
            }
            this.Adapter.DeleteCommand.Parameters[160].Value = ((bool)(Original_NumberControlled));
            this.Adapter.DeleteCommand.Parameters[161].Value = ((byte)(Original_OnDemand));
            this.Adapter.DeleteCommand.Parameters[162].Value = ((int)(Original_GradeID));
            this.Adapter.DeleteCommand.Parameters[163].Value = ((double)(Original_MinQty));
            this.Adapter.DeleteCommand.Parameters[164].Value = ((double)(Original_MaxQty));
            this.Adapter.DeleteCommand.Parameters[165].Value = ((byte)(Original_Inactive));
            this.Adapter.DeleteCommand.Parameters[166].Value = ((byte)(Original_AutomationRule));
            this.Adapter.DeleteCommand.Parameters[167].Value = ((byte)(Original_FileUpload));
            if ((Original_DateModified.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[169].Value = ((System.DateTime)(Original_DateModified.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_ModifiedByUserID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[171].Value = ((int)(Original_ModifiedByUserID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[172].Value = ((bool)(Original_ReplacementMaterial));
            if ((Original_ListAlias == null)) {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[174].Value = ((string)(Original_ListAlias));
            }
            this.Adapter.DeleteCommand.Parameters[175].Value = ((bool)(Original_ForceLocation));
            this.Adapter.DeleteCommand.Parameters[176].Value = ((bool)(Original_IssueAtCost));
            this.Adapter.DeleteCommand.Parameters[177].Value = ((double)(Original_HeightMarginMM));
            this.Adapter.DeleteCommand.Parameters[178].Value = ((double)(Original_WidthMarginMM));
            this.Adapter.DeleteCommand.Parameters[179].Value = ((double)(Original_XPosition));
            this.Adapter.DeleteCommand.Parameters[180].Value = ((double)(Original_YPosition));
            this.Adapter.DeleteCommand.Parameters[181].Value = ((bool)(Original_UseLeastCost));
            this.Adapter.DeleteCommand.Parameters[182].Value = ((int)(Original_CycleCount));
            this.Adapter.DeleteCommand.Parameters[183].Value = ((int)(Original_ProductTypes_ID));
            this.Adapter.DeleteCommand.Parameters[184].Value = ((bool)(Original_IsConfigurable));
            this.Adapter.DeleteCommand.Parameters[185].Value = ((double)(Original_MinimumQuantity));
            this.Adapter.DeleteCommand.Parameters[186].Value = ((bool)(Original_IsCoatedOneSide));
            this.Adapter.DeleteCommand.Parameters[187].Value = ((int)(Original_BasicSizesID));
            this.Adapter.DeleteCommand.Parameters[188].Value = ((int)(Original_SalesTaxCodeID));
            this.Adapter.DeleteCommand.Parameters[189].Value = ((int)(Original_UseTaxCodeID));
            this.Adapter.DeleteCommand.Parameters[190].Value = ((double)(Original_ConsignmentBalance));
            this.Adapter.DeleteCommand.Parameters[191].Value = ((int)(Original_BOMRevision));
            this.Adapter.DeleteCommand.Parameters[192].Value = ((int)(Original_PriceListMaterialGroupID));
            this.Adapter.DeleteCommand.Parameters[193].Value = ((double)(Original_AltWeight));
            this.Adapter.DeleteCommand.Parameters[194].Value = ((bool)(Original_CanOverridePackQuantity));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    bool ManufacturedProduct, 
                    string Code, 
                    string Description, 
                    double Balance, 
                    byte Type, 
                    double UnitPrice, 
                    string Colour, 
                    string dbGroup, 
                    string AnalysisType, 
                    string Manufacturer, 
                    double ReOrderQuantity, 
                    double NormalOrder, 
                    string PricingType, 
                    double Available, 
                    string SizeCode, 
                    double DepthMM, 
                    double WidthMM, 
                    bool IgnoreStockLevels, 
                    double Packed, 
                    global::System.Nullable<global::System.DateTime> LastChanged, 
                    double MinCharge, 
                    byte EstType, 
                    string EstUnits, 
                    double EstTonnePrice, 
                    bool Copier, 
                    string StockLocation, 
                    string EstAnalysisCode, 
                    string VatCode, 
                    string SupplierVatCode, 
                    string Nominal, 
                    string CostCentre, 
                    string Department, 
                    double SellingPrice, 
                    bool ExtraFlags, 
                    string PNominal, 
                    string PCostCentre, 
                    string PDepartment, 
                    double CurrentCost, 
                    bool ExcludeRequisitions, 
                    string StkRef1, 
                    string StkRef2, 
                    string StkRef3, 
                    string StkRef4, 
                    string StkRef5, 
                    string StkRef6, 
                    string StkRef7, 
                    string StkRef8, 
                    string StkRef9, 
                    string StkRef10, 
                    bool IsRollLabel, 
                    double InvoiceBalance, 
                    string SupplierRef, 
                    short LeadTime, 
                    string SupplierCode, 
                    string WebURL, 
                    string PurchaseUnits, 
                    double SupplierCost, 
                    int LastDocumentNumber, 
                    bool IsCallOffItem, 
                    bool InvoiceCostPrice, 
                    string ExtraInfo, 
                    short SOPLeadTime, 
                    bool NoHistory, 
                    double Weight, 
                    string SuppDescUnits, 
                    bool LongestEdge, 
                    string CommodityCode, 
                    string CountryOfOrigin, 
                    int PurchaseCurrency, 
                    int SellingCurrency, 
                    int EstimateID, 
                    string LastSupplierCode, 
                    double LastReceivedQuantity, 
                    double LastPurchasePrice, 
                    global::System.Nullable<global::System.DateTime> LastPurchaseDate, 
                    int LinkedOperationID, 
                    int LinkedOperatorID, 
                    byte ExpiryStatus, 
                    global::System.Nullable<global::System.DateTime> ExpiresOnDate, 
                    string AlternativeProduct, 
                    string AlternativeProductSize, 
                    string SecondAltProduct, 
                    string SecondAltProductSize, 
                    byte Generic, 
                    bool IsComposite, 
                    double HeightMM, 
                    double PalletDepth, 
                    double PalletWidth, 
                    double PalletHeight, 
                    double PalletPacked, 
                    double PalletWeight, 
                    string LocationGroup, 
                    bool UseFullPack, 
                    int PopulatedQuantity, 
                    double PopulatedWeight, 
                    double PackedHeight, 
                    double PackedDepth, 
                    double PackedWidth, 
                    double PackedWeight, 
                    double BoxedIn, 
                    int EstDescriptionContentID, 
                    int POAuthorityTypeID, 
                    bool AutoPost, 
                    int CertificationID, 
                    string Claim, 
                    string CodeAlias, 
                    string BoardCode, 
                    byte GrainDirection, 
                    bool AllowCustomSize, 
                    int BasketAuthorityTypeID, 
                    string ParentJob, 
                    bool NumberControlled, 
                    byte OnDemand, 
                    int GradeID, 
                    double MinQty, 
                    double MaxQty, 
                    byte Inactive, 
                    byte AutomationRule, 
                    byte FileUpload, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    bool ReplacementMaterial, 
                    string ListAlias, 
                    bool ForceLocation, 
                    bool IssueAtCost, 
                    double HeightMarginMM, 
                    double WidthMarginMM, 
                    double XPosition, 
                    double YPosition, 
                    bool UseLeastCost, 
                    int CycleCount, 
                    int ProductTypes_ID, 
                    bool IsConfigurable, 
                    double MinimumQuantity, 
                    bool IsCoatedOneSide, 
                    int BasicSizesID, 
                    int SalesTaxCodeID, 
                    int UseTaxCodeID, 
                    double ConsignmentBalance, 
                    int BOMRevision, 
                    int PriceListMaterialGroupID, 
                    double AltWeight, 
                    bool CanOverridePackQuantity) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((bool)(ManufacturedProduct));
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Code));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Description));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Balance));
            this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(Type));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(UnitPrice));
            if ((Colour == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Colour));
            }
            if ((dbGroup == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(dbGroup));
            }
            if ((AnalysisType == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(AnalysisType));
            }
            if ((Manufacturer == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Manufacturer));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((double)(ReOrderQuantity));
            this.Adapter.InsertCommand.Parameters[11].Value = ((double)(NormalOrder));
            if ((PricingType == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(PricingType));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((double)(Available));
            if ((SizeCode == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(SizeCode));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((double)(DepthMM));
            this.Adapter.InsertCommand.Parameters[16].Value = ((double)(WidthMM));
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(IgnoreStockLevels));
            this.Adapter.InsertCommand.Parameters[18].Value = ((double)(Packed));
            if ((LastChanged.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(LastChanged.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((double)(MinCharge));
            this.Adapter.InsertCommand.Parameters[21].Value = ((byte)(EstType));
            if ((EstUnits == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(EstUnits));
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((double)(EstTonnePrice));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(Copier));
            if ((StockLocation == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(StockLocation));
            }
            if ((EstAnalysisCode == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(EstAnalysisCode));
            }
            if ((VatCode == null)) {
                throw new global::System.ArgumentNullException("VatCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(VatCode));
            }
            if ((SupplierVatCode == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(SupplierVatCode));
            }
            if ((Nominal == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Nominal));
            }
            if ((CostCentre == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(CostCentre));
            }
            if ((Department == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Department));
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((double)(SellingPrice));
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(ExtraFlags));
            if ((PNominal == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(PNominal));
            }
            if ((PCostCentre == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(PCostCentre));
            }
            if ((PDepartment == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(PDepartment));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((double)(CurrentCost));
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(ExcludeRequisitions));
            if ((StkRef1 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(StkRef1));
            }
            if ((StkRef2 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(StkRef2));
            }
            if ((StkRef3 == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(StkRef3));
            }
            if ((StkRef4 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(StkRef4));
            }
            if ((StkRef5 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(StkRef5));
            }
            if ((StkRef6 == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(StkRef6));
            }
            if ((StkRef7 == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(StkRef7));
            }
            if ((StkRef8 == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(StkRef8));
            }
            if ((StkRef9 == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(StkRef9));
            }
            if ((StkRef10 == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(StkRef10));
            }
            this.Adapter.InsertCommand.Parameters[49].Value = ((bool)(IsRollLabel));
            this.Adapter.InsertCommand.Parameters[50].Value = ((double)(InvoiceBalance));
            if ((SupplierRef == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(SupplierRef));
            }
            this.Adapter.InsertCommand.Parameters[52].Value = ((short)(LeadTime));
            if ((SupplierCode == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(SupplierCode));
            }
            if ((WebURL == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(WebURL));
            }
            if ((PurchaseUnits == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(PurchaseUnits));
            }
            this.Adapter.InsertCommand.Parameters[56].Value = ((double)(SupplierCost));
            this.Adapter.InsertCommand.Parameters[57].Value = ((int)(LastDocumentNumber));
            this.Adapter.InsertCommand.Parameters[58].Value = ((bool)(IsCallOffItem));
            this.Adapter.InsertCommand.Parameters[59].Value = ((bool)(InvoiceCostPrice));
            if ((ExtraInfo == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(ExtraInfo));
            }
            this.Adapter.InsertCommand.Parameters[61].Value = ((short)(SOPLeadTime));
            this.Adapter.InsertCommand.Parameters[62].Value = ((bool)(NoHistory));
            this.Adapter.InsertCommand.Parameters[63].Value = ((double)(Weight));
            if ((SuppDescUnits == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(SuppDescUnits));
            }
            this.Adapter.InsertCommand.Parameters[65].Value = ((bool)(LongestEdge));
            if ((CommodityCode == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(CommodityCode));
            }
            if ((CountryOfOrigin == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(CountryOfOrigin));
            }
            this.Adapter.InsertCommand.Parameters[68].Value = ((int)(PurchaseCurrency));
            this.Adapter.InsertCommand.Parameters[69].Value = ((int)(SellingCurrency));
            this.Adapter.InsertCommand.Parameters[70].Value = ((int)(EstimateID));
            if ((LastSupplierCode == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(LastSupplierCode));
            }
            this.Adapter.InsertCommand.Parameters[72].Value = ((double)(LastReceivedQuantity));
            this.Adapter.InsertCommand.Parameters[73].Value = ((double)(LastPurchasePrice));
            if ((LastPurchaseDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((System.DateTime)(LastPurchaseDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[75].Value = ((int)(LinkedOperationID));
            this.Adapter.InsertCommand.Parameters[76].Value = ((int)(LinkedOperatorID));
            this.Adapter.InsertCommand.Parameters[77].Value = ((byte)(ExpiryStatus));
            if ((ExpiresOnDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((System.DateTime)(ExpiresOnDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((AlternativeProduct == null)) {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = ((string)(AlternativeProduct));
            }
            if ((AlternativeProductSize == null)) {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(AlternativeProductSize));
            }
            if ((SecondAltProduct == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(SecondAltProduct));
            }
            if ((SecondAltProductSize == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(SecondAltProductSize));
            }
            this.Adapter.InsertCommand.Parameters[83].Value = ((byte)(Generic));
            this.Adapter.InsertCommand.Parameters[84].Value = ((bool)(IsComposite));
            this.Adapter.InsertCommand.Parameters[85].Value = ((double)(HeightMM));
            this.Adapter.InsertCommand.Parameters[86].Value = ((double)(PalletDepth));
            this.Adapter.InsertCommand.Parameters[87].Value = ((double)(PalletWidth));
            this.Adapter.InsertCommand.Parameters[88].Value = ((double)(PalletHeight));
            this.Adapter.InsertCommand.Parameters[89].Value = ((double)(PalletPacked));
            this.Adapter.InsertCommand.Parameters[90].Value = ((double)(PalletWeight));
            if ((LocationGroup == null)) {
                this.Adapter.InsertCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[91].Value = ((string)(LocationGroup));
            }
            this.Adapter.InsertCommand.Parameters[92].Value = ((bool)(UseFullPack));
            this.Adapter.InsertCommand.Parameters[93].Value = ((int)(PopulatedQuantity));
            this.Adapter.InsertCommand.Parameters[94].Value = ((double)(PopulatedWeight));
            this.Adapter.InsertCommand.Parameters[95].Value = ((double)(PackedHeight));
            this.Adapter.InsertCommand.Parameters[96].Value = ((double)(PackedDepth));
            this.Adapter.InsertCommand.Parameters[97].Value = ((double)(PackedWidth));
            this.Adapter.InsertCommand.Parameters[98].Value = ((double)(PackedWeight));
            this.Adapter.InsertCommand.Parameters[99].Value = ((double)(BoxedIn));
            this.Adapter.InsertCommand.Parameters[100].Value = ((int)(EstDescriptionContentID));
            this.Adapter.InsertCommand.Parameters[101].Value = ((int)(POAuthorityTypeID));
            this.Adapter.InsertCommand.Parameters[102].Value = ((bool)(AutoPost));
            this.Adapter.InsertCommand.Parameters[103].Value = ((int)(CertificationID));
            if ((Claim == null)) {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = ((string)(Claim));
            }
            if ((CodeAlias == null)) {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = ((string)(CodeAlias));
            }
            if ((BoardCode == null)) {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = ((string)(BoardCode));
            }
            this.Adapter.InsertCommand.Parameters[107].Value = ((byte)(GrainDirection));
            this.Adapter.InsertCommand.Parameters[108].Value = ((bool)(AllowCustomSize));
            this.Adapter.InsertCommand.Parameters[109].Value = ((int)(BasketAuthorityTypeID));
            if ((ParentJob == null)) {
                this.Adapter.InsertCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[110].Value = ((string)(ParentJob));
            }
            this.Adapter.InsertCommand.Parameters[111].Value = ((bool)(NumberControlled));
            this.Adapter.InsertCommand.Parameters[112].Value = ((byte)(OnDemand));
            this.Adapter.InsertCommand.Parameters[113].Value = ((int)(GradeID));
            this.Adapter.InsertCommand.Parameters[114].Value = ((double)(MinQty));
            this.Adapter.InsertCommand.Parameters[115].Value = ((double)(MaxQty));
            this.Adapter.InsertCommand.Parameters[116].Value = ((byte)(Inactive));
            this.Adapter.InsertCommand.Parameters[117].Value = ((byte)(AutomationRule));
            this.Adapter.InsertCommand.Parameters[118].Value = ((byte)(FileUpload));
            if ((DateModified.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[119].Value = ((System.DateTime)(DateModified.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((ModifiedByUserID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[120].Value = ((int)(ModifiedByUserID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[121].Value = ((bool)(ReplacementMaterial));
            if ((ListAlias == null)) {
                this.Adapter.InsertCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[122].Value = ((string)(ListAlias));
            }
            this.Adapter.InsertCommand.Parameters[123].Value = ((bool)(ForceLocation));
            this.Adapter.InsertCommand.Parameters[124].Value = ((bool)(IssueAtCost));
            this.Adapter.InsertCommand.Parameters[125].Value = ((double)(HeightMarginMM));
            this.Adapter.InsertCommand.Parameters[126].Value = ((double)(WidthMarginMM));
            this.Adapter.InsertCommand.Parameters[127].Value = ((double)(XPosition));
            this.Adapter.InsertCommand.Parameters[128].Value = ((double)(YPosition));
            this.Adapter.InsertCommand.Parameters[129].Value = ((bool)(UseLeastCost));
            this.Adapter.InsertCommand.Parameters[130].Value = ((int)(CycleCount));
            this.Adapter.InsertCommand.Parameters[131].Value = ((int)(ProductTypes_ID));
            this.Adapter.InsertCommand.Parameters[132].Value = ((bool)(IsConfigurable));
            this.Adapter.InsertCommand.Parameters[133].Value = ((double)(MinimumQuantity));
            this.Adapter.InsertCommand.Parameters[134].Value = ((bool)(IsCoatedOneSide));
            this.Adapter.InsertCommand.Parameters[135].Value = ((int)(BasicSizesID));
            this.Adapter.InsertCommand.Parameters[136].Value = ((int)(SalesTaxCodeID));
            this.Adapter.InsertCommand.Parameters[137].Value = ((int)(UseTaxCodeID));
            this.Adapter.InsertCommand.Parameters[138].Value = ((double)(ConsignmentBalance));
            this.Adapter.InsertCommand.Parameters[139].Value = ((int)(BOMRevision));
            this.Adapter.InsertCommand.Parameters[140].Value = ((int)(PriceListMaterialGroupID));
            this.Adapter.InsertCommand.Parameters[141].Value = ((double)(AltWeight));
            this.Adapter.InsertCommand.Parameters[142].Value = ((bool)(CanOverridePackQuantity));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    bool ManufacturedProduct, 
                    string Code, 
                    string Description, 
                    double Balance, 
                    byte Type, 
                    double UnitPrice, 
                    string Colour, 
                    string dbGroup, 
                    string AnalysisType, 
                    string Manufacturer, 
                    double ReOrderQuantity, 
                    double NormalOrder, 
                    string PricingType, 
                    double Available, 
                    string SizeCode, 
                    double DepthMM, 
                    double WidthMM, 
                    bool IgnoreStockLevels, 
                    double Packed, 
                    global::System.Nullable<global::System.DateTime> LastChanged, 
                    double MinCharge, 
                    byte EstType, 
                    string EstUnits, 
                    double EstTonnePrice, 
                    bool Copier, 
                    string StockLocation, 
                    string EstAnalysisCode, 
                    string VatCode, 
                    string SupplierVatCode, 
                    string Nominal, 
                    string CostCentre, 
                    string Department, 
                    double SellingPrice, 
                    bool ExtraFlags, 
                    string PNominal, 
                    string PCostCentre, 
                    string PDepartment, 
                    double CurrentCost, 
                    bool ExcludeRequisitions, 
                    string StkRef1, 
                    string StkRef2, 
                    string StkRef3, 
                    string StkRef4, 
                    string StkRef5, 
                    string StkRef6, 
                    string StkRef7, 
                    string StkRef8, 
                    string StkRef9, 
                    string StkRef10, 
                    bool IsRollLabel, 
                    double InvoiceBalance, 
                    string SupplierRef, 
                    short LeadTime, 
                    string SupplierCode, 
                    string WebURL, 
                    string PurchaseUnits, 
                    double SupplierCost, 
                    int LastDocumentNumber, 
                    bool IsCallOffItem, 
                    bool InvoiceCostPrice, 
                    string ExtraInfo, 
                    short SOPLeadTime, 
                    bool NoHistory, 
                    double Weight, 
                    string SuppDescUnits, 
                    bool LongestEdge, 
                    string CommodityCode, 
                    string CountryOfOrigin, 
                    int PurchaseCurrency, 
                    int SellingCurrency, 
                    int EstimateID, 
                    string LastSupplierCode, 
                    double LastReceivedQuantity, 
                    double LastPurchasePrice, 
                    global::System.Nullable<global::System.DateTime> LastPurchaseDate, 
                    int LinkedOperationID, 
                    int LinkedOperatorID, 
                    byte ExpiryStatus, 
                    global::System.Nullable<global::System.DateTime> ExpiresOnDate, 
                    string AlternativeProduct, 
                    string AlternativeProductSize, 
                    string SecondAltProduct, 
                    string SecondAltProductSize, 
                    byte Generic, 
                    bool IsComposite, 
                    double HeightMM, 
                    double PalletDepth, 
                    double PalletWidth, 
                    double PalletHeight, 
                    double PalletPacked, 
                    double PalletWeight, 
                    string LocationGroup, 
                    bool UseFullPack, 
                    int PopulatedQuantity, 
                    double PopulatedWeight, 
                    double PackedHeight, 
                    double PackedDepth, 
                    double PackedWidth, 
                    double PackedWeight, 
                    double BoxedIn, 
                    int EstDescriptionContentID, 
                    int POAuthorityTypeID, 
                    bool AutoPost, 
                    int CertificationID, 
                    string Claim, 
                    string CodeAlias, 
                    string BoardCode, 
                    byte GrainDirection, 
                    bool AllowCustomSize, 
                    int BasketAuthorityTypeID, 
                    string ParentJob, 
                    bool NumberControlled, 
                    byte OnDemand, 
                    int GradeID, 
                    double MinQty, 
                    double MaxQty, 
                    byte Inactive, 
                    byte AutomationRule, 
                    byte FileUpload, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    bool ReplacementMaterial, 
                    string ListAlias, 
                    bool ForceLocation, 
                    bool IssueAtCost, 
                    double HeightMarginMM, 
                    double WidthMarginMM, 
                    double XPosition, 
                    double YPosition, 
                    bool UseLeastCost, 
                    int CycleCount, 
                    int ProductTypes_ID, 
                    bool IsConfigurable, 
                    double MinimumQuantity, 
                    bool IsCoatedOneSide, 
                    int BasicSizesID, 
                    int SalesTaxCodeID, 
                    int UseTaxCodeID, 
                    double ConsignmentBalance, 
                    int BOMRevision, 
                    int PriceListMaterialGroupID, 
                    double AltWeight, 
                    bool CanOverridePackQuantity, 
                    int Original_ID, 
                    bool Original_ManufacturedProduct, 
                    string Original_Code, 
                    string Original_Description, 
                    double Original_Balance, 
                    byte Original_Type, 
                    double Original_UnitPrice, 
                    string Original_Colour, 
                    string Original_dbGroup, 
                    string Original_AnalysisType, 
                    string Original_Manufacturer, 
                    double Original_ReOrderQuantity, 
                    double Original_NormalOrder, 
                    string Original_PricingType, 
                    double Original_Available, 
                    string Original_SizeCode, 
                    double Original_DepthMM, 
                    double Original_WidthMM, 
                    bool Original_IgnoreStockLevels, 
                    double Original_Packed, 
                    global::System.Nullable<global::System.DateTime> Original_LastChanged, 
                    double Original_MinCharge, 
                    byte Original_EstType, 
                    string Original_EstUnits, 
                    double Original_EstTonnePrice, 
                    bool Original_Copier, 
                    string Original_StockLocation, 
                    string Original_EstAnalysisCode, 
                    string Original_VatCode, 
                    string Original_SupplierVatCode, 
                    string Original_Nominal, 
                    string Original_CostCentre, 
                    string Original_Department, 
                    double Original_SellingPrice, 
                    bool Original_ExtraFlags, 
                    string Original_PNominal, 
                    string Original_PCostCentre, 
                    string Original_PDepartment, 
                    double Original_CurrentCost, 
                    bool Original_ExcludeRequisitions, 
                    string Original_StkRef1, 
                    string Original_StkRef2, 
                    string Original_StkRef3, 
                    string Original_StkRef4, 
                    string Original_StkRef5, 
                    string Original_StkRef6, 
                    string Original_StkRef7, 
                    string Original_StkRef8, 
                    string Original_StkRef9, 
                    string Original_StkRef10, 
                    bool Original_IsRollLabel, 
                    double Original_InvoiceBalance, 
                    string Original_SupplierRef, 
                    short Original_LeadTime, 
                    string Original_SupplierCode, 
                    string Original_WebURL, 
                    string Original_PurchaseUnits, 
                    double Original_SupplierCost, 
                    int Original_LastDocumentNumber, 
                    bool Original_IsCallOffItem, 
                    bool Original_InvoiceCostPrice, 
                    string Original_ExtraInfo, 
                    short Original_SOPLeadTime, 
                    bool Original_NoHistory, 
                    double Original_Weight, 
                    string Original_SuppDescUnits, 
                    bool Original_LongestEdge, 
                    string Original_CommodityCode, 
                    string Original_CountryOfOrigin, 
                    int Original_PurchaseCurrency, 
                    int Original_SellingCurrency, 
                    int Original_EstimateID, 
                    string Original_LastSupplierCode, 
                    double Original_LastReceivedQuantity, 
                    double Original_LastPurchasePrice, 
                    global::System.Nullable<global::System.DateTime> Original_LastPurchaseDate, 
                    int Original_LinkedOperationID, 
                    int Original_LinkedOperatorID, 
                    byte Original_ExpiryStatus, 
                    global::System.Nullable<global::System.DateTime> Original_ExpiresOnDate, 
                    string Original_AlternativeProduct, 
                    string Original_AlternativeProductSize, 
                    string Original_SecondAltProduct, 
                    string Original_SecondAltProductSize, 
                    byte Original_Generic, 
                    bool Original_IsComposite, 
                    double Original_HeightMM, 
                    double Original_PalletDepth, 
                    double Original_PalletWidth, 
                    double Original_PalletHeight, 
                    double Original_PalletPacked, 
                    double Original_PalletWeight, 
                    string Original_LocationGroup, 
                    bool Original_UseFullPack, 
                    int Original_PopulatedQuantity, 
                    double Original_PopulatedWeight, 
                    double Original_PackedHeight, 
                    double Original_PackedDepth, 
                    double Original_PackedWidth, 
                    double Original_PackedWeight, 
                    double Original_BoxedIn, 
                    int Original_EstDescriptionContentID, 
                    int Original_POAuthorityTypeID, 
                    bool Original_AutoPost, 
                    int Original_CertificationID, 
                    string Original_Claim, 
                    string Original_CodeAlias, 
                    string Original_BoardCode, 
                    byte Original_GrainDirection, 
                    bool Original_AllowCustomSize, 
                    int Original_BasketAuthorityTypeID, 
                    string Original_ParentJob, 
                    bool Original_NumberControlled, 
                    byte Original_OnDemand, 
                    int Original_GradeID, 
                    double Original_MinQty, 
                    double Original_MaxQty, 
                    byte Original_Inactive, 
                    byte Original_AutomationRule, 
                    byte Original_FileUpload, 
                    global::System.Nullable<global::System.DateTime> Original_DateModified, 
                    global::System.Nullable<int> Original_ModifiedByUserID, 
                    bool Original_ReplacementMaterial, 
                    string Original_ListAlias, 
                    bool Original_ForceLocation, 
                    bool Original_IssueAtCost, 
                    double Original_HeightMarginMM, 
                    double Original_WidthMarginMM, 
                    double Original_XPosition, 
                    double Original_YPosition, 
                    bool Original_UseLeastCost, 
                    int Original_CycleCount, 
                    int Original_ProductTypes_ID, 
                    bool Original_IsConfigurable, 
                    double Original_MinimumQuantity, 
                    bool Original_IsCoatedOneSide, 
                    int Original_BasicSizesID, 
                    int Original_SalesTaxCodeID, 
                    int Original_UseTaxCodeID, 
                    double Original_ConsignmentBalance, 
                    int Original_BOMRevision, 
                    int Original_PriceListMaterialGroupID, 
                    double Original_AltWeight, 
                    bool Original_CanOverridePackQuantity, 
                    int ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((bool)(ManufacturedProduct));
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Code));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Balance));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(Type));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(UnitPrice));
            if ((Colour == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Colour));
            }
            if ((dbGroup == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(dbGroup));
            }
            if ((AnalysisType == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(AnalysisType));
            }
            if ((Manufacturer == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Manufacturer));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(ReOrderQuantity));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(NormalOrder));
            if ((PricingType == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(PricingType));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Available));
            if ((SizeCode == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(SizeCode));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(DepthMM));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(WidthMM));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(IgnoreStockLevels));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Packed));
            if ((LastChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(LastChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(MinCharge));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((byte)(EstType));
            if ((EstUnits == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(EstUnits));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(EstTonnePrice));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Copier));
            if ((StockLocation == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(StockLocation));
            }
            if ((EstAnalysisCode == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(EstAnalysisCode));
            }
            if ((VatCode == null)) {
                throw new global::System.ArgumentNullException("VatCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(VatCode));
            }
            if ((SupplierVatCode == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(SupplierVatCode));
            }
            if ((Nominal == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Nominal));
            }
            if ((CostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(CostCentre));
            }
            if ((Department == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Department));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(SellingPrice));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(ExtraFlags));
            if ((PNominal == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(PNominal));
            }
            if ((PCostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(PCostCentre));
            }
            if ((PDepartment == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(PDepartment));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(CurrentCost));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(ExcludeRequisitions));
            if ((StkRef1 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(StkRef1));
            }
            if ((StkRef2 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(StkRef2));
            }
            if ((StkRef3 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(StkRef3));
            }
            if ((StkRef4 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(StkRef4));
            }
            if ((StkRef5 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(StkRef5));
            }
            if ((StkRef6 == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(StkRef6));
            }
            if ((StkRef7 == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(StkRef7));
            }
            if ((StkRef8 == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(StkRef8));
            }
            if ((StkRef9 == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(StkRef9));
            }
            if ((StkRef10 == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(StkRef10));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(IsRollLabel));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(InvoiceBalance));
            if ((SupplierRef == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(SupplierRef));
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((short)(LeadTime));
            if ((SupplierCode == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(SupplierCode));
            }
            if ((WebURL == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(WebURL));
            }
            if ((PurchaseUnits == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(PurchaseUnits));
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(SupplierCost));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(LastDocumentNumber));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(IsCallOffItem));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(InvoiceCostPrice));
            if ((ExtraInfo == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(ExtraInfo));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((short)(SOPLeadTime));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(NoHistory));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(Weight));
            if ((SuppDescUnits == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(SuppDescUnits));
            }
            this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(LongestEdge));
            if ((CommodityCode == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(CommodityCode));
            }
            if ((CountryOfOrigin == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(CountryOfOrigin));
            }
            this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(PurchaseCurrency));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(SellingCurrency));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(EstimateID));
            if ((LastSupplierCode == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(LastSupplierCode));
            }
            this.Adapter.UpdateCommand.Parameters[72].Value = ((double)(LastReceivedQuantity));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((double)(LastPurchasePrice));
            if ((LastPurchaseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((System.DateTime)(LastPurchaseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(LinkedOperationID));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(LinkedOperatorID));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((byte)(ExpiryStatus));
            if ((ExpiresOnDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((System.DateTime)(ExpiresOnDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((AlternativeProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(AlternativeProduct));
            }
            if ((AlternativeProductSize == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(AlternativeProductSize));
            }
            if ((SecondAltProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(SecondAltProduct));
            }
            if ((SecondAltProductSize == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(SecondAltProductSize));
            }
            this.Adapter.UpdateCommand.Parameters[83].Value = ((byte)(Generic));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((bool)(IsComposite));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((double)(HeightMM));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((double)(PalletDepth));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((double)(PalletWidth));
            this.Adapter.UpdateCommand.Parameters[88].Value = ((double)(PalletHeight));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((double)(PalletPacked));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((double)(PalletWeight));
            if ((LocationGroup == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(LocationGroup));
            }
            this.Adapter.UpdateCommand.Parameters[92].Value = ((bool)(UseFullPack));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(PopulatedQuantity));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((double)(PopulatedWeight));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((double)(PackedHeight));
            this.Adapter.UpdateCommand.Parameters[96].Value = ((double)(PackedDepth));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((double)(PackedWidth));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((double)(PackedWeight));
            this.Adapter.UpdateCommand.Parameters[99].Value = ((double)(BoxedIn));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((int)(EstDescriptionContentID));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(POAuthorityTypeID));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((bool)(AutoPost));
            this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(CertificationID));
            if ((Claim == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Claim));
            }
            if ((CodeAlias == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(CodeAlias));
            }
            if ((BoardCode == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(BoardCode));
            }
            this.Adapter.UpdateCommand.Parameters[107].Value = ((byte)(GrainDirection));
            this.Adapter.UpdateCommand.Parameters[108].Value = ((bool)(AllowCustomSize));
            this.Adapter.UpdateCommand.Parameters[109].Value = ((int)(BasketAuthorityTypeID));
            if ((ParentJob == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(ParentJob));
            }
            this.Adapter.UpdateCommand.Parameters[111].Value = ((bool)(NumberControlled));
            this.Adapter.UpdateCommand.Parameters[112].Value = ((byte)(OnDemand));
            this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(GradeID));
            this.Adapter.UpdateCommand.Parameters[114].Value = ((double)(MinQty));
            this.Adapter.UpdateCommand.Parameters[115].Value = ((double)(MaxQty));
            this.Adapter.UpdateCommand.Parameters[116].Value = ((byte)(Inactive));
            this.Adapter.UpdateCommand.Parameters[117].Value = ((byte)(AutomationRule));
            this.Adapter.UpdateCommand.Parameters[118].Value = ((byte)(FileUpload));
            if ((DateModified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((System.DateTime)(DateModified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((ModifiedByUserID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((int)(ModifiedByUserID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[121].Value = ((bool)(ReplacementMaterial));
            if ((ListAlias == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(ListAlias));
            }
            this.Adapter.UpdateCommand.Parameters[123].Value = ((bool)(ForceLocation));
            this.Adapter.UpdateCommand.Parameters[124].Value = ((bool)(IssueAtCost));
            this.Adapter.UpdateCommand.Parameters[125].Value = ((double)(HeightMarginMM));
            this.Adapter.UpdateCommand.Parameters[126].Value = ((double)(WidthMarginMM));
            this.Adapter.UpdateCommand.Parameters[127].Value = ((double)(XPosition));
            this.Adapter.UpdateCommand.Parameters[128].Value = ((double)(YPosition));
            this.Adapter.UpdateCommand.Parameters[129].Value = ((bool)(UseLeastCost));
            this.Adapter.UpdateCommand.Parameters[130].Value = ((int)(CycleCount));
            this.Adapter.UpdateCommand.Parameters[131].Value = ((int)(ProductTypes_ID));
            this.Adapter.UpdateCommand.Parameters[132].Value = ((bool)(IsConfigurable));
            this.Adapter.UpdateCommand.Parameters[133].Value = ((double)(MinimumQuantity));
            this.Adapter.UpdateCommand.Parameters[134].Value = ((bool)(IsCoatedOneSide));
            this.Adapter.UpdateCommand.Parameters[135].Value = ((int)(BasicSizesID));
            this.Adapter.UpdateCommand.Parameters[136].Value = ((int)(SalesTaxCodeID));
            this.Adapter.UpdateCommand.Parameters[137].Value = ((int)(UseTaxCodeID));
            this.Adapter.UpdateCommand.Parameters[138].Value = ((double)(ConsignmentBalance));
            this.Adapter.UpdateCommand.Parameters[139].Value = ((int)(BOMRevision));
            this.Adapter.UpdateCommand.Parameters[140].Value = ((int)(PriceListMaterialGroupID));
            this.Adapter.UpdateCommand.Parameters[141].Value = ((double)(AltWeight));
            this.Adapter.UpdateCommand.Parameters[142].Value = ((bool)(CanOverridePackQuantity));
            this.Adapter.UpdateCommand.Parameters[143].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[144].Value = ((bool)(Original_ManufacturedProduct));
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(Original_Code));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(Original_Description));
            }
            this.Adapter.UpdateCommand.Parameters[148].Value = ((double)(Original_Balance));
            this.Adapter.UpdateCommand.Parameters[149].Value = ((byte)(Original_Type));
            this.Adapter.UpdateCommand.Parameters[150].Value = ((double)(Original_UnitPrice));
            if ((Original_Colour == null)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((string)(Original_Colour));
            }
            if ((Original_dbGroup == null)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((string)(Original_dbGroup));
            }
            if ((Original_AnalysisType == null)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((string)(Original_AnalysisType));
            }
            if ((Original_Manufacturer == null)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((string)(Original_Manufacturer));
            }
            this.Adapter.UpdateCommand.Parameters[159].Value = ((double)(Original_ReOrderQuantity));
            this.Adapter.UpdateCommand.Parameters[160].Value = ((double)(Original_NormalOrder));
            if ((Original_PricingType == null)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((string)(Original_PricingType));
            }
            this.Adapter.UpdateCommand.Parameters[163].Value = ((double)(Original_Available));
            if ((Original_SizeCode == null)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((string)(Original_SizeCode));
            }
            this.Adapter.UpdateCommand.Parameters[166].Value = ((double)(Original_DepthMM));
            this.Adapter.UpdateCommand.Parameters[167].Value = ((double)(Original_WidthMM));
            this.Adapter.UpdateCommand.Parameters[168].Value = ((bool)(Original_IgnoreStockLevels));
            this.Adapter.UpdateCommand.Parameters[169].Value = ((double)(Original_Packed));
            if ((Original_LastChanged.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((System.DateTime)(Original_LastChanged.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[172].Value = ((double)(Original_MinCharge));
            this.Adapter.UpdateCommand.Parameters[173].Value = ((byte)(Original_EstType));
            if ((Original_EstUnits == null)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((string)(Original_EstUnits));
            }
            this.Adapter.UpdateCommand.Parameters[176].Value = ((double)(Original_EstTonnePrice));
            this.Adapter.UpdateCommand.Parameters[177].Value = ((bool)(Original_Copier));
            if ((Original_StockLocation == null)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((string)(Original_StockLocation));
            }
            if ((Original_EstAnalysisCode == null)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((string)(Original_EstAnalysisCode));
            }
            if ((Original_VatCode == null)) {
                throw new global::System.ArgumentNullException("Original_VatCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((string)(Original_VatCode));
            }
            if ((Original_SupplierVatCode == null)) {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[184].Value = ((string)(Original_SupplierVatCode));
            }
            if ((Original_Nominal == null)) {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[186].Value = ((string)(Original_Nominal));
            }
            if ((Original_CostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[188].Value = ((string)(Original_CostCentre));
            }
            if ((Original_Department == null)) {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[190].Value = ((string)(Original_Department));
            }
            this.Adapter.UpdateCommand.Parameters[191].Value = ((double)(Original_SellingPrice));
            this.Adapter.UpdateCommand.Parameters[192].Value = ((bool)(Original_ExtraFlags));
            if ((Original_PNominal == null)) {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[194].Value = ((string)(Original_PNominal));
            }
            if ((Original_PCostCentre == null)) {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[196].Value = ((string)(Original_PCostCentre));
            }
            if ((Original_PDepartment == null)) {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[198].Value = ((string)(Original_PDepartment));
            }
            this.Adapter.UpdateCommand.Parameters[199].Value = ((double)(Original_CurrentCost));
            this.Adapter.UpdateCommand.Parameters[200].Value = ((bool)(Original_ExcludeRequisitions));
            if ((Original_StkRef1 == null)) {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[202].Value = ((string)(Original_StkRef1));
            }
            if ((Original_StkRef2 == null)) {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[204].Value = ((string)(Original_StkRef2));
            }
            if ((Original_StkRef3 == null)) {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[206].Value = ((string)(Original_StkRef3));
            }
            if ((Original_StkRef4 == null)) {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[208].Value = ((string)(Original_StkRef4));
            }
            if ((Original_StkRef5 == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(Original_StkRef5));
            }
            if ((Original_StkRef6 == null)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((string)(Original_StkRef6));
            }
            if ((Original_StkRef7 == null)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((string)(Original_StkRef7));
            }
            if ((Original_StkRef8 == null)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((string)(Original_StkRef8));
            }
            if ((Original_StkRef9 == null)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((string)(Original_StkRef9));
            }
            if ((Original_StkRef10 == null)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((string)(Original_StkRef10));
            }
            this.Adapter.UpdateCommand.Parameters[221].Value = ((bool)(Original_IsRollLabel));
            this.Adapter.UpdateCommand.Parameters[222].Value = ((double)(Original_InvoiceBalance));
            if ((Original_SupplierRef == null)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[224].Value = ((string)(Original_SupplierRef));
            }
            this.Adapter.UpdateCommand.Parameters[225].Value = ((short)(Original_LeadTime));
            if ((Original_SupplierCode == null)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((string)(Original_SupplierCode));
            }
            if ((Original_WebURL == null)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((string)(Original_WebURL));
            }
            if ((Original_PurchaseUnits == null)) {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[231].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[231].Value = ((string)(Original_PurchaseUnits));
            }
            this.Adapter.UpdateCommand.Parameters[232].Value = ((double)(Original_SupplierCost));
            this.Adapter.UpdateCommand.Parameters[233].Value = ((int)(Original_LastDocumentNumber));
            this.Adapter.UpdateCommand.Parameters[234].Value = ((bool)(Original_IsCallOffItem));
            this.Adapter.UpdateCommand.Parameters[235].Value = ((bool)(Original_InvoiceCostPrice));
            if ((Original_ExtraInfo == null)) {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[237].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[237].Value = ((string)(Original_ExtraInfo));
            }
            this.Adapter.UpdateCommand.Parameters[238].Value = ((short)(Original_SOPLeadTime));
            this.Adapter.UpdateCommand.Parameters[239].Value = ((bool)(Original_NoHistory));
            this.Adapter.UpdateCommand.Parameters[240].Value = ((double)(Original_Weight));
            if ((Original_SuppDescUnits == null)) {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[242].Value = ((string)(Original_SuppDescUnits));
            }
            this.Adapter.UpdateCommand.Parameters[243].Value = ((bool)(Original_LongestEdge));
            if ((Original_CommodityCode == null)) {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[245].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[245].Value = ((string)(Original_CommodityCode));
            }
            if ((Original_CountryOfOrigin == null)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((string)(Original_CountryOfOrigin));
            }
            this.Adapter.UpdateCommand.Parameters[248].Value = ((int)(Original_PurchaseCurrency));
            this.Adapter.UpdateCommand.Parameters[249].Value = ((int)(Original_SellingCurrency));
            this.Adapter.UpdateCommand.Parameters[250].Value = ((int)(Original_EstimateID));
            if ((Original_LastSupplierCode == null)) {
                this.Adapter.UpdateCommand.Parameters[251].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[252].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[251].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[252].Value = ((string)(Original_LastSupplierCode));
            }
            this.Adapter.UpdateCommand.Parameters[253].Value = ((double)(Original_LastReceivedQuantity));
            this.Adapter.UpdateCommand.Parameters[254].Value = ((double)(Original_LastPurchasePrice));
            if ((Original_LastPurchaseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[255].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[256].Value = ((System.DateTime)(Original_LastPurchaseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[255].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[256].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[257].Value = ((int)(Original_LinkedOperationID));
            this.Adapter.UpdateCommand.Parameters[258].Value = ((int)(Original_LinkedOperatorID));
            this.Adapter.UpdateCommand.Parameters[259].Value = ((byte)(Original_ExpiryStatus));
            if ((Original_ExpiresOnDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[261].Value = ((System.DateTime)(Original_ExpiresOnDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[261].Value = global::System.DBNull.Value;
            }
            if ((Original_AlternativeProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[263].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[263].Value = ((string)(Original_AlternativeProduct));
            }
            if ((Original_AlternativeProductSize == null)) {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[265].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[265].Value = ((string)(Original_AlternativeProductSize));
            }
            if ((Original_SecondAltProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[267].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[267].Value = ((string)(Original_SecondAltProduct));
            }
            if ((Original_SecondAltProductSize == null)) {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[269].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[269].Value = ((string)(Original_SecondAltProductSize));
            }
            this.Adapter.UpdateCommand.Parameters[270].Value = ((byte)(Original_Generic));
            this.Adapter.UpdateCommand.Parameters[271].Value = ((bool)(Original_IsComposite));
            this.Adapter.UpdateCommand.Parameters[272].Value = ((double)(Original_HeightMM));
            this.Adapter.UpdateCommand.Parameters[273].Value = ((double)(Original_PalletDepth));
            this.Adapter.UpdateCommand.Parameters[274].Value = ((double)(Original_PalletWidth));
            this.Adapter.UpdateCommand.Parameters[275].Value = ((double)(Original_PalletHeight));
            this.Adapter.UpdateCommand.Parameters[276].Value = ((double)(Original_PalletPacked));
            this.Adapter.UpdateCommand.Parameters[277].Value = ((double)(Original_PalletWeight));
            if ((Original_LocationGroup == null)) {
                this.Adapter.UpdateCommand.Parameters[278].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[279].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[278].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[279].Value = ((string)(Original_LocationGroup));
            }
            this.Adapter.UpdateCommand.Parameters[280].Value = ((bool)(Original_UseFullPack));
            this.Adapter.UpdateCommand.Parameters[281].Value = ((int)(Original_PopulatedQuantity));
            this.Adapter.UpdateCommand.Parameters[282].Value = ((double)(Original_PopulatedWeight));
            this.Adapter.UpdateCommand.Parameters[283].Value = ((double)(Original_PackedHeight));
            this.Adapter.UpdateCommand.Parameters[284].Value = ((double)(Original_PackedDepth));
            this.Adapter.UpdateCommand.Parameters[285].Value = ((double)(Original_PackedWidth));
            this.Adapter.UpdateCommand.Parameters[286].Value = ((double)(Original_PackedWeight));
            this.Adapter.UpdateCommand.Parameters[287].Value = ((double)(Original_BoxedIn));
            this.Adapter.UpdateCommand.Parameters[288].Value = ((int)(Original_EstDescriptionContentID));
            this.Adapter.UpdateCommand.Parameters[289].Value = ((int)(Original_POAuthorityTypeID));
            this.Adapter.UpdateCommand.Parameters[290].Value = ((bool)(Original_AutoPost));
            this.Adapter.UpdateCommand.Parameters[291].Value = ((int)(Original_CertificationID));
            if ((Original_Claim == null)) {
                this.Adapter.UpdateCommand.Parameters[292].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[293].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[292].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[293].Value = ((string)(Original_Claim));
            }
            if ((Original_CodeAlias == null)) {
                this.Adapter.UpdateCommand.Parameters[294].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[295].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[294].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[295].Value = ((string)(Original_CodeAlias));
            }
            if ((Original_BoardCode == null)) {
                this.Adapter.UpdateCommand.Parameters[296].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[297].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[296].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[297].Value = ((string)(Original_BoardCode));
            }
            this.Adapter.UpdateCommand.Parameters[298].Value = ((byte)(Original_GrainDirection));
            this.Adapter.UpdateCommand.Parameters[299].Value = ((bool)(Original_AllowCustomSize));
            this.Adapter.UpdateCommand.Parameters[300].Value = ((int)(Original_BasketAuthorityTypeID));
            if ((Original_ParentJob == null)) {
                this.Adapter.UpdateCommand.Parameters[301].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[302].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[301].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[302].Value = ((string)(Original_ParentJob));
            }
            this.Adapter.UpdateCommand.Parameters[303].Value = ((bool)(Original_NumberControlled));
            this.Adapter.UpdateCommand.Parameters[304].Value = ((byte)(Original_OnDemand));
            this.Adapter.UpdateCommand.Parameters[305].Value = ((int)(Original_GradeID));
            this.Adapter.UpdateCommand.Parameters[306].Value = ((double)(Original_MinQty));
            this.Adapter.UpdateCommand.Parameters[307].Value = ((double)(Original_MaxQty));
            this.Adapter.UpdateCommand.Parameters[308].Value = ((byte)(Original_Inactive));
            this.Adapter.UpdateCommand.Parameters[309].Value = ((byte)(Original_AutomationRule));
            this.Adapter.UpdateCommand.Parameters[310].Value = ((byte)(Original_FileUpload));
            if ((Original_DateModified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[311].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[312].Value = ((System.DateTime)(Original_DateModified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[311].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[312].Value = global::System.DBNull.Value;
            }
            if ((Original_ModifiedByUserID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[313].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[314].Value = ((int)(Original_ModifiedByUserID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[313].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[314].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[315].Value = ((bool)(Original_ReplacementMaterial));
            if ((Original_ListAlias == null)) {
                this.Adapter.UpdateCommand.Parameters[316].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[317].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[316].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[317].Value = ((string)(Original_ListAlias));
            }
            this.Adapter.UpdateCommand.Parameters[318].Value = ((bool)(Original_ForceLocation));
            this.Adapter.UpdateCommand.Parameters[319].Value = ((bool)(Original_IssueAtCost));
            this.Adapter.UpdateCommand.Parameters[320].Value = ((double)(Original_HeightMarginMM));
            this.Adapter.UpdateCommand.Parameters[321].Value = ((double)(Original_WidthMarginMM));
            this.Adapter.UpdateCommand.Parameters[322].Value = ((double)(Original_XPosition));
            this.Adapter.UpdateCommand.Parameters[323].Value = ((double)(Original_YPosition));
            this.Adapter.UpdateCommand.Parameters[324].Value = ((bool)(Original_UseLeastCost));
            this.Adapter.UpdateCommand.Parameters[325].Value = ((int)(Original_CycleCount));
            this.Adapter.UpdateCommand.Parameters[326].Value = ((int)(Original_ProductTypes_ID));
            this.Adapter.UpdateCommand.Parameters[327].Value = ((bool)(Original_IsConfigurable));
            this.Adapter.UpdateCommand.Parameters[328].Value = ((double)(Original_MinimumQuantity));
            this.Adapter.UpdateCommand.Parameters[329].Value = ((bool)(Original_IsCoatedOneSide));
            this.Adapter.UpdateCommand.Parameters[330].Value = ((int)(Original_BasicSizesID));
            this.Adapter.UpdateCommand.Parameters[331].Value = ((int)(Original_SalesTaxCodeID));
            this.Adapter.UpdateCommand.Parameters[332].Value = ((int)(Original_UseTaxCodeID));
            this.Adapter.UpdateCommand.Parameters[333].Value = ((double)(Original_ConsignmentBalance));
            this.Adapter.UpdateCommand.Parameters[334].Value = ((int)(Original_BOMRevision));
            this.Adapter.UpdateCommand.Parameters[335].Value = ((int)(Original_PriceListMaterialGroupID));
            this.Adapter.UpdateCommand.Parameters[336].Value = ((double)(Original_AltWeight));
            this.Adapter.UpdateCommand.Parameters[337].Value = ((bool)(Original_CanOverridePackQuantity));
            this.Adapter.UpdateCommand.Parameters[338].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    bool ManufacturedProduct, 
                    string Code, 
                    string Description, 
                    double Balance, 
                    byte Type, 
                    double UnitPrice, 
                    string Colour, 
                    string dbGroup, 
                    string AnalysisType, 
                    string Manufacturer, 
                    double ReOrderQuantity, 
                    double NormalOrder, 
                    string PricingType, 
                    double Available, 
                    string SizeCode, 
                    double DepthMM, 
                    double WidthMM, 
                    bool IgnoreStockLevels, 
                    double Packed, 
                    global::System.Nullable<global::System.DateTime> LastChanged, 
                    double MinCharge, 
                    byte EstType, 
                    string EstUnits, 
                    double EstTonnePrice, 
                    bool Copier, 
                    string StockLocation, 
                    string EstAnalysisCode, 
                    string VatCode, 
                    string SupplierVatCode, 
                    string Nominal, 
                    string CostCentre, 
                    string Department, 
                    double SellingPrice, 
                    bool ExtraFlags, 
                    string PNominal, 
                    string PCostCentre, 
                    string PDepartment, 
                    double CurrentCost, 
                    bool ExcludeRequisitions, 
                    string StkRef1, 
                    string StkRef2, 
                    string StkRef3, 
                    string StkRef4, 
                    string StkRef5, 
                    string StkRef6, 
                    string StkRef7, 
                    string StkRef8, 
                    string StkRef9, 
                    string StkRef10, 
                    bool IsRollLabel, 
                    double InvoiceBalance, 
                    string SupplierRef, 
                    short LeadTime, 
                    string SupplierCode, 
                    string WebURL, 
                    string PurchaseUnits, 
                    double SupplierCost, 
                    int LastDocumentNumber, 
                    bool IsCallOffItem, 
                    bool InvoiceCostPrice, 
                    string ExtraInfo, 
                    short SOPLeadTime, 
                    bool NoHistory, 
                    double Weight, 
                    string SuppDescUnits, 
                    bool LongestEdge, 
                    string CommodityCode, 
                    string CountryOfOrigin, 
                    int PurchaseCurrency, 
                    int SellingCurrency, 
                    int EstimateID, 
                    string LastSupplierCode, 
                    double LastReceivedQuantity, 
                    double LastPurchasePrice, 
                    global::System.Nullable<global::System.DateTime> LastPurchaseDate, 
                    int LinkedOperationID, 
                    int LinkedOperatorID, 
                    byte ExpiryStatus, 
                    global::System.Nullable<global::System.DateTime> ExpiresOnDate, 
                    string AlternativeProduct, 
                    string AlternativeProductSize, 
                    string SecondAltProduct, 
                    string SecondAltProductSize, 
                    byte Generic, 
                    bool IsComposite, 
                    double HeightMM, 
                    double PalletDepth, 
                    double PalletWidth, 
                    double PalletHeight, 
                    double PalletPacked, 
                    double PalletWeight, 
                    string LocationGroup, 
                    bool UseFullPack, 
                    int PopulatedQuantity, 
                    double PopulatedWeight, 
                    double PackedHeight, 
                    double PackedDepth, 
                    double PackedWidth, 
                    double PackedWeight, 
                    double BoxedIn, 
                    int EstDescriptionContentID, 
                    int POAuthorityTypeID, 
                    bool AutoPost, 
                    int CertificationID, 
                    string Claim, 
                    string CodeAlias, 
                    string BoardCode, 
                    byte GrainDirection, 
                    bool AllowCustomSize, 
                    int BasketAuthorityTypeID, 
                    string ParentJob, 
                    bool NumberControlled, 
                    byte OnDemand, 
                    int GradeID, 
                    double MinQty, 
                    double MaxQty, 
                    byte Inactive, 
                    byte AutomationRule, 
                    byte FileUpload, 
                    global::System.Nullable<global::System.DateTime> DateModified, 
                    global::System.Nullable<int> ModifiedByUserID, 
                    bool ReplacementMaterial, 
                    string ListAlias, 
                    bool ForceLocation, 
                    bool IssueAtCost, 
                    double HeightMarginMM, 
                    double WidthMarginMM, 
                    double XPosition, 
                    double YPosition, 
                    bool UseLeastCost, 
                    int CycleCount, 
                    int ProductTypes_ID, 
                    bool IsConfigurable, 
                    double MinimumQuantity, 
                    bool IsCoatedOneSide, 
                    int BasicSizesID, 
                    int SalesTaxCodeID, 
                    int UseTaxCodeID, 
                    double ConsignmentBalance, 
                    int BOMRevision, 
                    int PriceListMaterialGroupID, 
                    double AltWeight, 
                    bool CanOverridePackQuantity, 
                    int Original_ID, 
                    bool Original_ManufacturedProduct, 
                    string Original_Code, 
                    string Original_Description, 
                    double Original_Balance, 
                    byte Original_Type, 
                    double Original_UnitPrice, 
                    string Original_Colour, 
                    string Original_dbGroup, 
                    string Original_AnalysisType, 
                    string Original_Manufacturer, 
                    double Original_ReOrderQuantity, 
                    double Original_NormalOrder, 
                    string Original_PricingType, 
                    double Original_Available, 
                    string Original_SizeCode, 
                    double Original_DepthMM, 
                    double Original_WidthMM, 
                    bool Original_IgnoreStockLevels, 
                    double Original_Packed, 
                    global::System.Nullable<global::System.DateTime> Original_LastChanged, 
                    double Original_MinCharge, 
                    byte Original_EstType, 
                    string Original_EstUnits, 
                    double Original_EstTonnePrice, 
                    bool Original_Copier, 
                    string Original_StockLocation, 
                    string Original_EstAnalysisCode, 
                    string Original_VatCode, 
                    string Original_SupplierVatCode, 
                    string Original_Nominal, 
                    string Original_CostCentre, 
                    string Original_Department, 
                    double Original_SellingPrice, 
                    bool Original_ExtraFlags, 
                    string Original_PNominal, 
                    string Original_PCostCentre, 
                    string Original_PDepartment, 
                    double Original_CurrentCost, 
                    bool Original_ExcludeRequisitions, 
                    string Original_StkRef1, 
                    string Original_StkRef2, 
                    string Original_StkRef3, 
                    string Original_StkRef4, 
                    string Original_StkRef5, 
                    string Original_StkRef6, 
                    string Original_StkRef7, 
                    string Original_StkRef8, 
                    string Original_StkRef9, 
                    string Original_StkRef10, 
                    bool Original_IsRollLabel, 
                    double Original_InvoiceBalance, 
                    string Original_SupplierRef, 
                    short Original_LeadTime, 
                    string Original_SupplierCode, 
                    string Original_WebURL, 
                    string Original_PurchaseUnits, 
                    double Original_SupplierCost, 
                    int Original_LastDocumentNumber, 
                    bool Original_IsCallOffItem, 
                    bool Original_InvoiceCostPrice, 
                    string Original_ExtraInfo, 
                    short Original_SOPLeadTime, 
                    bool Original_NoHistory, 
                    double Original_Weight, 
                    string Original_SuppDescUnits, 
                    bool Original_LongestEdge, 
                    string Original_CommodityCode, 
                    string Original_CountryOfOrigin, 
                    int Original_PurchaseCurrency, 
                    int Original_SellingCurrency, 
                    int Original_EstimateID, 
                    string Original_LastSupplierCode, 
                    double Original_LastReceivedQuantity, 
                    double Original_LastPurchasePrice, 
                    global::System.Nullable<global::System.DateTime> Original_LastPurchaseDate, 
                    int Original_LinkedOperationID, 
                    int Original_LinkedOperatorID, 
                    byte Original_ExpiryStatus, 
                    global::System.Nullable<global::System.DateTime> Original_ExpiresOnDate, 
                    string Original_AlternativeProduct, 
                    string Original_AlternativeProductSize, 
                    string Original_SecondAltProduct, 
                    string Original_SecondAltProductSize, 
                    byte Original_Generic, 
                    bool Original_IsComposite, 
                    double Original_HeightMM, 
                    double Original_PalletDepth, 
                    double Original_PalletWidth, 
                    double Original_PalletHeight, 
                    double Original_PalletPacked, 
                    double Original_PalletWeight, 
                    string Original_LocationGroup, 
                    bool Original_UseFullPack, 
                    int Original_PopulatedQuantity, 
                    double Original_PopulatedWeight, 
                    double Original_PackedHeight, 
                    double Original_PackedDepth, 
                    double Original_PackedWidth, 
                    double Original_PackedWeight, 
                    double Original_BoxedIn, 
                    int Original_EstDescriptionContentID, 
                    int Original_POAuthorityTypeID, 
                    bool Original_AutoPost, 
                    int Original_CertificationID, 
                    string Original_Claim, 
                    string Original_CodeAlias, 
                    string Original_BoardCode, 
                    byte Original_GrainDirection, 
                    bool Original_AllowCustomSize, 
                    int Original_BasketAuthorityTypeID, 
                    string Original_ParentJob, 
                    bool Original_NumberControlled, 
                    byte Original_OnDemand, 
                    int Original_GradeID, 
                    double Original_MinQty, 
                    double Original_MaxQty, 
                    byte Original_Inactive, 
                    byte Original_AutomationRule, 
                    byte Original_FileUpload, 
                    global::System.Nullable<global::System.DateTime> Original_DateModified, 
                    global::System.Nullable<int> Original_ModifiedByUserID, 
                    bool Original_ReplacementMaterial, 
                    string Original_ListAlias, 
                    bool Original_ForceLocation, 
                    bool Original_IssueAtCost, 
                    double Original_HeightMarginMM, 
                    double Original_WidthMarginMM, 
                    double Original_XPosition, 
                    double Original_YPosition, 
                    bool Original_UseLeastCost, 
                    int Original_CycleCount, 
                    int Original_ProductTypes_ID, 
                    bool Original_IsConfigurable, 
                    double Original_MinimumQuantity, 
                    bool Original_IsCoatedOneSide, 
                    int Original_BasicSizesID, 
                    int Original_SalesTaxCodeID, 
                    int Original_UseTaxCodeID, 
                    double Original_ConsignmentBalance, 
                    int Original_BOMRevision, 
                    int Original_PriceListMaterialGroupID, 
                    double Original_AltWeight, 
                    bool Original_CanOverridePackQuantity) {
            return this.Update(ManufacturedProduct, Code, Description, Balance, Type, UnitPrice, Colour, dbGroup, AnalysisType, Manufacturer, ReOrderQuantity, NormalOrder, PricingType, Available, SizeCode, DepthMM, WidthMM, IgnoreStockLevels, Packed, LastChanged, MinCharge, EstType, EstUnits, EstTonnePrice, Copier, StockLocation, EstAnalysisCode, VatCode, SupplierVatCode, Nominal, CostCentre, Department, SellingPrice, ExtraFlags, PNominal, PCostCentre, PDepartment, CurrentCost, ExcludeRequisitions, StkRef1, StkRef2, StkRef3, StkRef4, StkRef5, StkRef6, StkRef7, StkRef8, StkRef9, StkRef10, IsRollLabel, InvoiceBalance, SupplierRef, LeadTime, SupplierCode, WebURL, PurchaseUnits, SupplierCost, LastDocumentNumber, IsCallOffItem, InvoiceCostPrice, ExtraInfo, SOPLeadTime, NoHistory, Weight, SuppDescUnits, LongestEdge, CommodityCode, CountryOfOrigin, PurchaseCurrency, SellingCurrency, EstimateID, LastSupplierCode, LastReceivedQuantity, LastPurchasePrice, LastPurchaseDate, LinkedOperationID, LinkedOperatorID, ExpiryStatus, ExpiresOnDate, AlternativeProduct, AlternativeProductSize, SecondAltProduct, SecondAltProductSize, Generic, IsComposite, HeightMM, PalletDepth, PalletWidth, PalletHeight, PalletPacked, PalletWeight, LocationGroup, UseFullPack, PopulatedQuantity, PopulatedWeight, PackedHeight, PackedDepth, PackedWidth, PackedWeight, BoxedIn, EstDescriptionContentID, POAuthorityTypeID, AutoPost, CertificationID, Claim, CodeAlias, BoardCode, GrainDirection, AllowCustomSize, BasketAuthorityTypeID, ParentJob, NumberControlled, OnDemand, GradeID, MinQty, MaxQty, Inactive, AutomationRule, FileUpload, DateModified, ModifiedByUserID, ReplacementMaterial, ListAlias, ForceLocation, IssueAtCost, HeightMarginMM, WidthMarginMM, XPosition, YPosition, UseLeastCost, CycleCount, ProductTypes_ID, IsConfigurable, MinimumQuantity, IsCoatedOneSide, BasicSizesID, SalesTaxCodeID, UseTaxCodeID, ConsignmentBalance, BOMRevision, PriceListMaterialGroupID, AltWeight, CanOverridePackQuantity, Original_ID, Original_ManufacturedProduct, Original_Code, Original_Description, Original_Balance, Original_Type, Original_UnitPrice, Original_Colour, Original_dbGroup, Original_AnalysisType, Original_Manufacturer, Original_ReOrderQuantity, Original_NormalOrder, Original_PricingType, Original_Available, Original_SizeCode, Original_DepthMM, Original_WidthMM, Original_IgnoreStockLevels, Original_Packed, Original_LastChanged, Original_MinCharge, Original_EstType, Original_EstUnits, Original_EstTonnePrice, Original_Copier, Original_StockLocation, Original_EstAnalysisCode, Original_VatCode, Original_SupplierVatCode, Original_Nominal, Original_CostCentre, Original_Department, Original_SellingPrice, Original_ExtraFlags, Original_PNominal, Original_PCostCentre, Original_PDepartment, Original_CurrentCost, Original_ExcludeRequisitions, Original_StkRef1, Original_StkRef2, Original_StkRef3, Original_StkRef4, Original_StkRef5, Original_StkRef6, Original_StkRef7, Original_StkRef8, Original_StkRef9, Original_StkRef10, Original_IsRollLabel, Original_InvoiceBalance, Original_SupplierRef, Original_LeadTime, Original_SupplierCode, Original_WebURL, Original_PurchaseUnits, Original_SupplierCost, Original_LastDocumentNumber, Original_IsCallOffItem, Original_InvoiceCostPrice, Original_ExtraInfo, Original_SOPLeadTime, Original_NoHistory, Original_Weight, Original_SuppDescUnits, Original_LongestEdge, Original_CommodityCode, Original_CountryOfOrigin, Original_PurchaseCurrency, Original_SellingCurrency, Original_EstimateID, Original_LastSupplierCode, Original_LastReceivedQuantity, Original_LastPurchasePrice, Original_LastPurchaseDate, Original_LinkedOperationID, Original_LinkedOperatorID, Original_ExpiryStatus, Original_ExpiresOnDate, Original_AlternativeProduct, Original_AlternativeProductSize, Original_SecondAltProduct, Original_SecondAltProductSize, Original_Generic, Original_IsComposite, Original_HeightMM, Original_PalletDepth, Original_PalletWidth, Original_PalletHeight, Original_PalletPacked, Original_PalletWeight, Original_LocationGroup, Original_UseFullPack, Original_PopulatedQuantity, Original_PopulatedWeight, Original_PackedHeight, Original_PackedDepth, Original_PackedWidth, Original_PackedWeight, Original_BoxedIn, Original_EstDescriptionContentID, Original_POAuthorityTypeID, Original_AutoPost, Original_CertificationID, Original_Claim, Original_CodeAlias, Original_BoardCode, Original_GrainDirection, Original_AllowCustomSize, Original_BasketAuthorityTypeID, Original_ParentJob, Original_NumberControlled, Original_OnDemand, Original_GradeID, Original_MinQty, Original_MaxQty, Original_Inactive, Original_AutomationRule, Original_FileUpload, Original_DateModified, Original_ModifiedByUserID, Original_ReplacementMaterial, Original_ListAlias, Original_ForceLocation, Original_IssueAtCost, Original_HeightMarginMM, Original_WidthMarginMM, Original_XPosition, Original_YPosition, Original_UseLeastCost, Original_CycleCount, Original_ProductTypes_ID, Original_IsConfigurable, Original_MinimumQuantity, Original_IsCoatedOneSide, Original_BasicSizesID, Original_SalesTaxCodeID, Original_UseTaxCodeID, Original_ConsignmentBalance, Original_BOMRevision, Original_PriceListMaterialGroupID, Original_AltWeight, Original_CanOverridePackQuantity, Original_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CustomersTableAdapter _customersTableAdapter;
        
        private JobProductsTableAdapter _jobProductsTableAdapter;
        
        private MainEstimateDetailsTableAdapter _mainEstimateDetailsTableAdapter;
        
        private MainJobDetailsTableAdapter _mainJobDetailsTableAdapter;
        
        private OrderLineTableAdapter _orderLineTableAdapter;
        
        private OriginationMaterialInputTableAdapter _originationMaterialInputTableAdapter;
        
        private ProductTableAdapter _productTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CustomersTableAdapter CustomersTableAdapter {
            get {
                return this._customersTableAdapter;
            }
            set {
                this._customersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public JobProductsTableAdapter JobProductsTableAdapter {
            get {
                return this._jobProductsTableAdapter;
            }
            set {
                this._jobProductsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MainEstimateDetailsTableAdapter MainEstimateDetailsTableAdapter {
            get {
                return this._mainEstimateDetailsTableAdapter;
            }
            set {
                this._mainEstimateDetailsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MainJobDetailsTableAdapter MainJobDetailsTableAdapter {
            get {
                return this._mainJobDetailsTableAdapter;
            }
            set {
                this._mainJobDetailsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OrderLineTableAdapter OrderLineTableAdapter {
            get {
                return this._orderLineTableAdapter;
            }
            set {
                this._orderLineTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OriginationMaterialInputTableAdapter OriginationMaterialInputTableAdapter {
            get {
                return this._originationMaterialInputTableAdapter;
            }
            set {
                this._originationMaterialInputTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ProductTableAdapter ProductTableAdapter {
            get {
                return this._productTableAdapter;
            }
            set {
                this._productTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._customersTableAdapter != null) 
                            && (this._customersTableAdapter.Connection != null))) {
                    return this._customersTableAdapter.Connection;
                }
                if (((this._jobProductsTableAdapter != null) 
                            && (this._jobProductsTableAdapter.Connection != null))) {
                    return this._jobProductsTableAdapter.Connection;
                }
                if (((this._mainEstimateDetailsTableAdapter != null) 
                            && (this._mainEstimateDetailsTableAdapter.Connection != null))) {
                    return this._mainEstimateDetailsTableAdapter.Connection;
                }
                if (((this._mainJobDetailsTableAdapter != null) 
                            && (this._mainJobDetailsTableAdapter.Connection != null))) {
                    return this._mainJobDetailsTableAdapter.Connection;
                }
                if (((this._orderLineTableAdapter != null) 
                            && (this._orderLineTableAdapter.Connection != null))) {
                    return this._orderLineTableAdapter.Connection;
                }
                if (((this._originationMaterialInputTableAdapter != null) 
                            && (this._originationMaterialInputTableAdapter.Connection != null))) {
                    return this._originationMaterialInputTableAdapter.Connection;
                }
                if (((this._productTableAdapter != null) 
                            && (this._productTableAdapter.Connection != null))) {
                    return this._productTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._customersTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._jobProductsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mainEstimateDetailsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mainJobDetailsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._orderLineTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._originationMaterialInputTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._productTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ThardataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mainEstimateDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MainEstimateDetails.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mainEstimateDetailsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._customersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Customers.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._customersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._jobProductsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.JobProducts.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._jobProductsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mainJobDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MainJobDetails.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mainJobDetailsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._orderLineTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OrderLine.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._orderLineTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._originationMaterialInputTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OriginationMaterialInput.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._originationMaterialInputTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._productTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Product.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._productTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ThardataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mainEstimateDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MainEstimateDetails.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mainEstimateDetailsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._customersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Customers.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._customersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._jobProductsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.JobProducts.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._jobProductsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mainJobDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MainJobDetails.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mainJobDetailsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._orderLineTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OrderLine.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._orderLineTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._originationMaterialInputTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OriginationMaterialInput.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._originationMaterialInputTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._productTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Product.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._productTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ThardataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._productTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Product.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._productTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._originationMaterialInputTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OriginationMaterialInput.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._originationMaterialInputTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._orderLineTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OrderLine.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._orderLineTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mainJobDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MainJobDetails.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mainJobDetailsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._jobProductsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.JobProducts.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._jobProductsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._customersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Customers.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._customersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mainEstimateDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MainEstimateDetails.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mainEstimateDetailsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ThardataDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._customersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._customersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._jobProductsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._jobProductsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mainEstimateDetailsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mainEstimateDetailsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mainJobDetailsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mainJobDetailsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._orderLineTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._orderLineTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._originationMaterialInputTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._originationMaterialInputTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._productTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._productTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._customersTableAdapter != null)) {
                    revertConnections.Add(this._customersTableAdapter, this._customersTableAdapter.Connection);
                    this._customersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._customersTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._customersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._customersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._customersTableAdapter.Adapter);
                    }
                }
                if ((this._jobProductsTableAdapter != null)) {
                    revertConnections.Add(this._jobProductsTableAdapter, this._jobProductsTableAdapter.Connection);
                    this._jobProductsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._jobProductsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._jobProductsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._jobProductsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._jobProductsTableAdapter.Adapter);
                    }
                }
                if ((this._mainEstimateDetailsTableAdapter != null)) {
                    revertConnections.Add(this._mainEstimateDetailsTableAdapter, this._mainEstimateDetailsTableAdapter.Connection);
                    this._mainEstimateDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mainEstimateDetailsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mainEstimateDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mainEstimateDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mainEstimateDetailsTableAdapter.Adapter);
                    }
                }
                if ((this._mainJobDetailsTableAdapter != null)) {
                    revertConnections.Add(this._mainJobDetailsTableAdapter, this._mainJobDetailsTableAdapter.Connection);
                    this._mainJobDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mainJobDetailsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mainJobDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mainJobDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mainJobDetailsTableAdapter.Adapter);
                    }
                }
                if ((this._orderLineTableAdapter != null)) {
                    revertConnections.Add(this._orderLineTableAdapter, this._orderLineTableAdapter.Connection);
                    this._orderLineTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._orderLineTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._orderLineTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._orderLineTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._orderLineTableAdapter.Adapter);
                    }
                }
                if ((this._originationMaterialInputTableAdapter != null)) {
                    revertConnections.Add(this._originationMaterialInputTableAdapter, this._originationMaterialInputTableAdapter.Connection);
                    this._originationMaterialInputTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._originationMaterialInputTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._originationMaterialInputTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._originationMaterialInputTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._originationMaterialInputTableAdapter.Adapter);
                    }
                }
                if ((this._productTableAdapter != null)) {
                    revertConnections.Add(this._productTableAdapter, this._productTableAdapter.Connection);
                    this._productTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._productTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._productTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._productTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._productTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._customersTableAdapter != null)) {
                    this._customersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._customersTableAdapter]));
                    this._customersTableAdapter.Transaction = null;
                }
                if ((this._jobProductsTableAdapter != null)) {
                    this._jobProductsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._jobProductsTableAdapter]));
                    this._jobProductsTableAdapter.Transaction = null;
                }
                if ((this._mainEstimateDetailsTableAdapter != null)) {
                    this._mainEstimateDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mainEstimateDetailsTableAdapter]));
                    this._mainEstimateDetailsTableAdapter.Transaction = null;
                }
                if ((this._mainJobDetailsTableAdapter != null)) {
                    this._mainJobDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mainJobDetailsTableAdapter]));
                    this._mainJobDetailsTableAdapter.Transaction = null;
                }
                if ((this._orderLineTableAdapter != null)) {
                    this._orderLineTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._orderLineTableAdapter]));
                    this._orderLineTableAdapter.Transaction = null;
                }
                if ((this._originationMaterialInputTableAdapter != null)) {
                    this._originationMaterialInputTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._originationMaterialInputTableAdapter]));
                    this._originationMaterialInputTableAdapter.Transaction = null;
                }
                if ((this._productTableAdapter != null)) {
                    this._productTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._productTableAdapter]));
                    this._productTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591